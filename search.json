{
  "docs": [
{
"id": "/plugins/mqtt",
"url": "/plugins/mqtt/",
"date": "2015-04-11 00:00:00 -0500",
"title": "MQTT",
"description": "Adds support for subscribing and publishing to MQTT topics.",
"author": "Franziska Kunsmann, Gina Häußge",
"content": "This is an OctoPrint Plugin that adds support for MQTT to OctoPrint.See the plugin’s README for details on configuration and usage.",
"tags": ["mqtt","helper","notification"]
},

{
"id": "/plugins/growl",
"url": "/plugins/growl/",
"date": "2015-04-14 00:00:00 -0500",
"title": "Growl",
"description": "Get Growl notifications from your OctoPrint installation.",
"author": "Gina Häußge",
"content": "The Growl plugin for OctoPrint allows to send notifications about certain printing events to a Growl instance on yourlocal network. Right now it sends notifications for the following events:  Printjob started  Printjob done  File uploaded (optional)  Timelapse done (optional)ConfigurationYou’ll have to configure the host your Growl service is running on (which is probably not the same machine thatyour OctoPrint installation is running on), the port it is listening on and - if you secured your growl instance againstnotifications from the network with a password - also the password needed to connect to it.You can do all this via the settings dialog under “Plugins &gt; Growl”. If you have your OctoPrint installation’sbundled discovery plugin alsoconfigured with pybonjour supportyou’ll also be able to see all the Growl instances on your local network that OctoPrint was able to discover there.By default only the notifications for “Printjob started” and “Printjob done” are enabled. If you also want to getnotification about the other events, you’ll have to tell Growl. OctoPrint will send them all, but your local Growlinstance needs to be told to also display them. You can do this in the configuration of your Growl service. Thisis how it might look:",
"tags": ["notification"]
},

{
"id": "/plugins/actiontrigger",
"url": "/plugins/actiontrigger/",
"date": "2015-04-17 00:00:00 -0500",
"title": "Action Trigger Plugin",
"description": "Plugin for OctoPrint that handles serial commands sent out by the printer.",
"author": "Pim Rutgers",
"content": "compatibility:  python: “&gt;=2.7,&lt;4”  Its gun do some serial trigger handling yoPlugin for OctoPrint that handles serial commands send out by the printer. These action triggers should be manually added to your firmware if you want to use this add-on.  Basic handler code is:// action:somevariablePlugin reacts to two different situations, door open/close and filament detection.action:door_openaction:door_closedaction:door_open will pause the print and home the X-axis. Pop-up dialog will notify the user, they can decide to accept the pop-up and use the controls. Closing the door will trigger action:door_closed resume the print and close the dialogaction:filamentThis trigger will pause the print and home the X and Y axis, giving the user the opportunity to change out the filament. The print needs to be resumed manually through the UI.",
"tags": ["printing"]
},

{
"id": "/plugins/navbartemp",
"url": "/plugins/navbartemp/",
"date": "2015-04-17 00:00:00 -0500",
"title": "Navbar Temp",
"description": "Display temperatures on navbar",
"author": "Cosik, Jarek Szczepanski",
"content": "Plugin for OctoPrint - displays temperatures on navbarSetupInstall the plugin using Plugin Manager from SettingsNeed new platform support?If you need support for additional platform, please inform us and add such information:  How to read temperature  How to define platform typeAnd be ready for testing.Custom commandPlugin is supporting up to one custom command, in navbar will be displayed raw outputof command.Example:Change notes:v 0.13  added support for custom commandsv 0.11  added support for all platforms running under Armbian",
"tags": ["temperature","heater","navbar","temp"]
},

{
"id": "/plugins/gpx",
"url": "/plugins/gpx/",
"date": "2015-04-23 00:00:00 -0500",
"title": "GPX",
"description": "Use OctoPrint with s3g/x3g printers (like FlashForge and older MakerBot)",
"author": "Mark Walker",
"content": "GPX was created by Dr. Henry Thomas in April 2013.  It is a post processingutility that converts gcode into x3g files for printing on MakerBots or theirclones.This plugin wraps the serial communication layer and uses GPX to translate betweengcode and x3g on the fly to make the printer appear to OctoPrint as if it speaksgcode.ConfigurationAfter installing, you need to tell gpx about your printer. In OctoPrint, GPXadds a settings panel. Two settings are important to set: the type ofprinter and the gcode flavor.The type of printer determines the steps per mm. Gcode is generally inmillimeters and x3g is in stepper motor steps.Gcode flavor means the flavor that your slicer produces. Makerbot Desktop andRepG only produce MakerBot flavor. Slic3r produces either (you can choose inits settings) and Cura produces RepRap flavor.If you have a MakerBot clone then you have a Replicator 1 or Replicator 1 Dualclone. Your printer might look more like a Replicator 2 because it is black andmetal, but its steps per mm is Replicator 1.Caveats and Known IssuesPlease see the READMEon github for the latest info.",
"tags": ["printer","protocol"]
},

{
"id": "/plugins/customControl",
"url": "/plugins/customControl/",
"date": "2015-04-26 00:00:00 -0500",
"title": "Custom Control Editor",
"description": "Makes custom controls editable via the settings dialog",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin helps you create, edit and delete your custom controls.You can easily access all the options in the settings under “Custom Control Editor”.Right click on a control or the green box to open a context menu.By using the container elements you can easily position the controls where you want.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/octoglow",
"url": "/plugins/octoglow/",
"date": "2015-05-12 00:00:00 -0500",
"title": "OctoGlow",
"description": "Display OctoPrint status on a PiGlow board.",
"author": "Dan Malec",
"content": "The OctoGlow plugin for OctoPrint displays status on a Pimoroni PiGlow attached to a Raspberry Pi.  It displays animations for the following events:  Printer connected  Printjob started  Printjob progress updated  Printjob done  Printjob cancelled  Printjob failedConfigurationThe PiGlow board requires i2c to be enabled on the Raspberry Pi.  Please follow the Pimoroni guide on enabling i2c on the Raspberry Pi.Additionally, the pi user must be added to the i2c group in order to allow OctoPrint to send commands to the PiGlow without needing root privileges:sudo adduser pi i2c",
"tags": ["notification"]
},

{
"id": "/plugins/snapstream",
"url": "/plugins/snapstream/",
"date": "2015-05-22 00:00:00 -0500",
"title": "SnapStream",
"description": "Emulate webcam streaming by showing a sequence of snapshots",
"author": "Mark Walker",
"content": "The default video streamer in the OctoPi image is mjpg-streamer. It works byfairly simply stitching the jpeg images from the webcam into a stream that canbe displayed by the browser. You may want to avoid this stitching and just havejavascript display the jpg images every few hundred milliseconds instead.A couple of reasons might be:      You want to use a browser that doesn’t support mjpeg streams (IE).        You want to reduce your bandwidth and cpu usage on your host.  You can reduce bandwidth and cpu usage by reducing the frame rate onmjpg-streamer, but perhaps the plugin is even lighter weight, try it out onyour hardware and see.SettingsThe plugin has a couple of settings you can change:      Frames per second.    The plugin uses javascript to update the snapshot so the frames are really limited by the browsers ability/willingness to call a timer interval function. Probably best to stay in the slow, reliable, but choppy end of things: 1, 2 or 4 or something like that.        Fallback mode only.    The plugin only takes over and uses snapshots when the stream fails to load.  ",
"tags": ["ui"]
},

{
"id": "/plugins/systemcommandeditor",
"url": "/plugins/systemcommandeditor/",
"date": "2015-06-03 00:00:00 -0500",
"title": "System Command Editor",
"description": "This plugin makes System Commands editable through the OctoPrint WebUI",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin helps you create, edit and delete System commands.You can Access all option in the settings under “Plugins -&gt; System Command Editor”Right Click on a Control or the Green Box to open a context menu.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/editorcollection",
"url": "/plugins/editorcollection/",
"date": "2015-06-04 00:00:00 -0500",
"title": "Editor Collection",
"description": "This plugin is for putting Salandora's editor plugins onto one page",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin moves the Editor’s from Salandora onto a single Page.",
"tags": ["administration","ui"]
},

{
"id": "/plugins/screensquish",
"url": "/plugins/screensquish/",
"date": "2015-06-17 00:00:00 -0500",
"title": "ScreenSquish",
"description": "Scalable UI that does some old fashioned (v2) bootstrap responsive and some collapse etc.",
"author": "Mark Walker",
"content": "Bootstrap 2 “responsive” UI, a single column on your phoneThis is a little plugin that adds an HTML element here, changes some css there ina tweaky way to have the default OctoPrint UI reflow (or squish) for smallerscreen sizes.There are more epic UIs in the works elsewhere, but you can use this plugin untilsomething better comes along.Since it does tweak the current UI that will likely change, it disables itselfon any new version of OctoPrint. My plan is to keep it up to date within a fewdays or even ahead of any official release until such time as it is no longerneeded because of an alternate UI plugin or because bootstrap 3 happened.Go ahead and give it a try and if you don’t like it you can always disable it oruninstall from OctoPrint’s plugin manager.",
"tags": ["mobile","ui"]
},

{
"id": "/plugins/stlviewer",
"url": "/plugins/stlviewer/",
"date": "2015-06-20 00:00:00 -0500",
"title": "STL Viewer",
"description": "Simple stl viewer tab from uploaded files.",
"author": "jneilliii",
"content": "STL ViewerThe STL Viewer plugin is a simple STL Viewer tab for OctoPrint. Viewer control is derived from jsc3d.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["tab","stl"]
},

{
"id": "/plugins/commandsplitter",
"url": "/plugins/commandsplitter/",
"date": "2015-06-21 00:00:00 -0500",
"title": "CommandSplitter",
"description": "Splits multiple commands on one line in GCODE files into multiple lines",
"author": "Gina Häußge",
"content": "This is a small GCODE preprocessor that makes sure that uploaded GCODE file contain only one command per line.GCODE allows putting multiple commands on one line, separated by a : (colon). Since it is currently a bitunclear how firmware should process such lines with regards to included line numbers or checksums, in order toavoid any confusion this plugin can be used to make sure that all such multi-command-lines in uploaded GCODE filesare split into multiple lines first.ExampleIf an uploaded GCODE file contains these lines:G28 X0 Y0 : G28 Z0 ; home all axes; this is a comment with a colon : in the middleM117 Hello there \\:)this plugin will turn them into these lines:G28 X0 Y0G28 Z0; home all axes; this is a comment with a colon in the middleM117 Hello there \\:)Note that it will touch neither colons in comments nor escaped ones. Be careful though, it is currently not completelyclear if all firmwares support escaping the colon as shown above. Better not use any : within your commands if possible.",
"tags": ["gcode","preprocessing"]
},

{
"id": "/plugins/requestspinner",
"url": "/plugins/requestspinner/",
"date": "2015-06-21 00:00:00 -0500",
"title": "RequestSpinner",
"description": "Shows a little spinner in the web frontend when background requests are active",
"author": "Gina Häußge",
"content": "The Request Spinner Plugin puts a little spinner icon in the lower left corner of the OctoPrint web interface wheneverthere are active background requests via AJAX in progress. That provides a bit of feedback about how long your actionstake to get processed by your server and gives you some more indication if stuff is actually happening or not.",
"tags": ["ui","ajax"]
},

{
"id": "/plugins/autoselect",
"url": "/plugins/autoselect/",
"date": "2015-06-27 00:00:00 -0500",
"title": "Autoselect",
"description": "Automatically selects freshly uploaded files for printing if no print job is currently active.",
"author": "Jubaleth, Gina Häußge",
"content": "The Autoselect Plugin will automatically select newly uploaded files forprinting if there is an active connection to a printer and currently no printjob running.",
"tags": ["ux","upload","filemanagement"]
},

{
"id": "/plugins/status_line",
"url": "/plugins/status_line/",
"date": "2015-07-04 00:00:00 -0500",
"title": "StatusLine",
"description": "Display M117 (Display Message) in the SideBar",
"author": "Philippe Vanhaesendonck",
"content": "(Very) simple plugin to which displays the M117 command (Display Message) in the SideBar.",
"tags": ["ui"]
},

{
"id": "/plugins/yamlpatcher",
"url": "/plugins/yamlpatcher/",
"date": "2015-07-07 00:00:00 -0500",
"title": "Yamlpatcher",
"description": "Allows patching up config.yaml through the web interface",
"author": "Gina Häußge",
"content": "The OctoPrint Yamlpatcher Plugin allows patching OctoPrint’s config.yamlthrough a new dialog within OctoPrint’s settings, using easily shareablepatch strings.This allows applying configuration changes that are not easily achievable throughthe UI even for users who don’t feel comfortable manually editing a YAMLconfiguration file. And for those that do feel comfortable with YAML, it isalso is a very fast way to make quick adjustments to configuration settings forwhich no UI inputs exist, e.g. development settings.Before allowing to apply the patch string, the plugin will present the userwith a preview of the changes that will take place, visualizing both addedand removed entries within config.yaml.  ⚠ Note  This plugin primarily targets developers, not endusers. It is not actively maintained since it does what is needed from it for regular OctoPrint development activities. If someone wants to make it more versatile and add more or fix existing functionality, feel free to get in touch about adoption on the community forums about it.UsagePaste a valid patch string into the input field below, then hit the “Preview” button. Make sure the changes look like they should (if a screenshot of a preview was provided along side the patch string, compare!). If they do, hit “Apply”. Then restart your server.Patch formatSee the documentation.",
"tags": ["admin","config"]
},

{
"id": "/plugins/octobullet",
"url": "/plugins/octobullet/",
"date": "2015-07-23 00:00:00 -0500",
"title": "Pushbullet",
"description": "Pushes notifications about finished print jobs via Pushbullet",
"author": "Gina Häußge",
"content": "This plugin adds support for Pushbullet notifications to OctoPrint.At the current state OctoPrint will send a notification when a print job finishes. If a webcam is available, an imageof the print result will be captured and included in the notification.",
"tags": ["notification"]
},

{
"id": "/plugins/eeprom_repetier",
"url": "/plugins/eeprom_repetier/",
"date": "2015-07-28 00:00:00 -0500",
"title": "EEPROM Repetier Editor",
"description": "Makes it possible to change the EEPROM values of Repetier Firmware through OctoPrint",
"author": "Marc Hannappel (Salandora)",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Repetier Firmware based MachineFeatures  Load and edit the values stored EEPROM from the printer firmware.  Save changes to the EEPROM on the printer.  Backup and restore snapshot copies of the EEPROM data (new in V0.1.4).SetupFind it in the plugin manager or install manually using the archive URLFirmware requirementsThis plugin only supports Repetier firmware, version 0.92 and later.  Use caution when restoring data from an older firmware version.ScreenhotsEEPROM Values EditorChanged Values DisplayEEPROM Backups",
"tags": ["repetier","eeprom","editor","eeprom editor","eeprom config","helper"]
},

{
"id": "/plugins/displayprogress",
"url": "/plugins/displayprogress/",
"date": "2015-08-03 00:00:00 -0500",
"title": "DisplayProgress",
"description": "Displays the print progress on the printer's display",
"author": "jneilliii, Gina Häußge",
"content": "A plugin that sends M117 commands to the printer to display the progressof the print job being currently streamed. The message to display can beconfigured (some placeholders included). By default, an ASCII progress baris rendered with the percentage of the job’s progress.",
"tags": ["printer","display","lcd","progress"]
},

{
"id": "/plugins/eeprom_marlin",
"url": "/plugins/eeprom_marlin/",
"date": "2015-08-30 00:00:00 -0500",
"title": "Marlin EEPROM Editor",
"description": "Makes it possible to change the EEPROM values of Marlin Firmware through OctoPrint",
"author": "Charlie Powell, Anderson Silva",
"content": "Originally by Anderson Silva until 2018 development taken over by Charlie Powell in October 2020.The Marlin EEPROM editor provides an easy to use, feature-rich UI to edit your machine’s configuration.Features  Load &amp; parse the EEPROM data out of the firmware  Edit many of the values configured  Save EEPROM changes on the printer with a minimal number of commands  Storage of data on the OctoPrint server, so it can be viewed while printer is disconnected or printing.  Backup feature:          Enabled saving configuration snapshots, restoring, downloading, uploading        Display firmware info, including capability reportBe sure to check out the screenshots below for more details!SetupFind it in the plugin manager or install manually using this URL:https://github.com/cp2004/OctoPrint-EEPROM-Marlin/releases/latest/download/release.zipFirmware requirementsThis plugin requires that you have both these items in Marlin’s Configuration.h file:  #define EEPROM_CHITCHAT  //#define DISABLE_M503In other words, EEPROM_CHITCHAT and the M503 command must be enabled - comment out disabling it.New in Marlin EEPROM Editor V3.0.0A complete re-write of this plugin, now V3!Featuring:  Python processing &amp; storage, eliminating performance issues in the UI.  Storage of data on the OctoPrint server, so it can be viewed while the printer is disconnected or printing.  Brand new UI, written from the ground up.  Includes new read-only mode, when the printer is printing  All-new backup feature, allowing naming and storing of backups, so you can quickly swap between profiles and more.  … and more!For the full changelist please check out the release notes.ScreenhotsFirmware info overviewConfiguration editorBackup featureEnjoying the plugin? Sponsor its development!I am working on this plugin in my spare time, if you appreciate the work I have put inplease consider sponsoring its development on GitHub.Need help? Get in touch!Whilst I don’t like bugs, I want to know where they are!  Get in touch on the Github Repository  Ask a question on the community forums  Find help on the OctoPrint Discord ServerMy other pluginsCheck out some more of my plugins in the repository here",
"tags": ["marlin","eeprom","editor","eeprom editor","eeprom config","helper"]
},

{
"id": "/plugins/stats",
"url": "/plugins/stats/",
"date": "2015-09-13 00:00:00 -0500",
"title": "Printer Statistics",
"description": "Statistics of your 3D Printer",
"author": "Alex Verrico, Anderson Silva",
"content": "This plugin is designed to show statistics of your printer and estimate power usage in kWh.Important! You may need to install the system package libatlas-base-dev for this plugin to work by running sudo apt install libatlas-base-dev.Installing on Python 3:Install via the bundled Plugin Manageror manually using this URL:https://github.com/AlexVerrico/octoprint-stats/archive/master.zipInstalling on Python 2:Install manually using this URL:https://github.com/AlexVerrico/octoprint-stats/archive/py2.zipPlease note that the Python 2 version will no longer receive updates, it is strongly recommended that you switch your octoprint install to Python 3",
"tags": ["stats","power","usage"]
},

{
"id": "/plugins/automaticshutdown",
"url": "/plugins/automaticshutdown/",
"date": "2015-09-22 00:00:00 -0500",
"title": "AutomaticShutdown",
"description": "Plugin to enable automatic system shutdown after finishing a print job",
"author": "Nicanor Romero Venier",
"content": "This OctoPrint plugin enables the system to be automatically shut down after a print is finished.The user can enable automatic shutdown for each print by using a checkbox in the sidebar.Once the print is finished, a popup will appear with a countdown which lets the user abort the shutdown.",
"tags": ["automatic","shutdown"]
},

{
"id": "/plugins/displayz",
"url": "/plugins/displayz/",
"date": "2015-09-22 00:00:00 -0500",
"title": "DisplayZ",
"description": "Brings back the current Z display in the state sidebar panel",
"author": "Gina Häußge",
"content": "OctoPrint’s state sidebar display panel used to display the current Z heightof the printer’s nozzle.That information is sadly inaccurate - it stems not from actual position informationfrom the printer’s firmware but instead from an attempt at tracking the heightinformation by OctoPrint, which can lag behind, be inaccurate or not workat all in case of prints from SD cards.However, people demanded to get this piece of  information back, inaccurate ornot, so here it is as plugin.",
"tags": ["ui","addon"]
},

{
"id": "/plugins/portlister",
"url": "/plugins/portlister/",
"date": "2015-10-08 00:00:00 -0500",
"title": "PortLister",
"description": "Refreshes the port list in the browser when a printer shows up",
"author": "Mark Walker",
"content": "Automatically notice when a new port is available for connecting.Have you noticed that if you load up the OctoPrint web page when your printer isoff, the printer’s port isn’t in the list?  Then when you turn on the printeryou have to refresh the page to make it show up?  This plugin fixes that.It watches for the device to appear (when you turn it on) and then notifies allthe web clients to refresh the list of ports.It also (if you have autoconnect turned on), will automatically connect to theprinter (if the new port is the same as the one you’ve selected in connectionsettings) after a reasonable (long) delay to wait for the printer to actuallycome on.  The default delay is 20 secs.  It’s settable in config.yaml, ifanybody uses this plugin besides me, I could be talked into a settings page.",
"tags": ["printer","automatic"]
},

{
"id": "/plugins/touchui",
"url": "/plugins/touchui/",
"date": "2015-10-10 00:00:00 -0500",
"title": "TouchUI",
"description": "A touch friendly interface for Mobile and TFT touch modules",
"author": "Paul de Vries",
"content": "This plugin will transform the OctoPrint layout into a Mobile/TFT friendly layout. With larger buttons and a responsive layout down to the smallest resolution possible. It will mimic pointer events as touch, so you can hook up those touchscreens. It also supports a virtual keyboard.All these settings are set client-side, so we won’t interfere with other clients. All settings are stored in your localstorage or as a delicious cookie. You can find the TouchUI settings in a dedicated modal. Remember they’re stored on your device, so if you login with your desktop computer you won’t get the touch interface.  TouchscreensRead more about setting up a touchscreen on our Wiki.ConfigurationThe interface will automatically start when your browser is smaller then 980 pixels in width or if you’re browsing with a touch device. You can turn this manually on and off in the TouchUI settings modal. Alternatively you can force TouchUI to load by adding #touch on the end of your URL.Read more configuration options on our Wiki.  CustomizationYou can change 4 main colors of the interface with the power of LESS. If you would like to change more colors, then you’re free to add your own LESS file. Read more about this and the variables on our wiki.",
"tags": ["ui","touchscreen","mobile"]
},

{
"id": "/plugins/slack",
"url": "/plugins/slack/",
"date": "2015-10-28 00:00:00 -0500",
"title": "Slack",
"description": "Send message to Slack chat when printing events happen",
"author": "Maurice Kevenaar, Richard Joyce",
"content": "Send messages to your group’s Slack chat when printing events happen! You need to set up an Incoming Webhook integration on the Slack side to use this.Features  Select which events you want to trigger a chat notification for  Customizable messages for each event  Customize bot icon and username in Slack chat  Sends elapsed time of print after finished",
"tags": ["notification"]
},

{
"id": "/plugins/autocalibration",
"url": "/plugins/autocalibration/",
"date": "2015-11-09 00:00:00 -0600",
"title": "Autocalibration",
"description": "Calibrates your printers backlash for the X, Y or Z-axis.",
"author": "Florens Wasserfall (Platsch)",
"content": "This plugin calibrates your printers backlash for the X, Y or Z-axis.How does it work?Make sure your printer is running and connected to OctoPrint before you start the calibration process. The axis moves to home to find the endstop and then slowly away from the endstop to find the point where the backlash is compensated by the moving pulley. Do not interrupt the process, otherwise the backlash would remain 0 regardless of the original value and original extruder offsets are not restored!Requirements and Pitfalls  The Firmware must be Repetier based with active EEPROM-option.SetupInstall via the bundled Plugin Manageror manually using this URL:pip install https://github.com/platsch/OctoPrint-Autocalibration/archive/master.zipThis work is based on the OctoPrint-EEprom-Repetier plugin by Salandora.",
"tags": ["repetier","calibration","backlash"]
},

{
"id": "/plugins/updatefix127",
"url": "/plugins/updatefix127/",
"date": "2015-12-07 00:00:00 -0600",
"title": "Updatefix 1.2.7",
"description": "Fixes an issue in OctoPrint 1.2.7 that prevents updating",
"author": "Gina Häußge",
"content": "This plugin fixes an issue in OctoPrint 1.2.7’s software updater, causing updatesof OctoPrint itself to fail.The plugin monkey-patches the bug causing this issue with the same fix that ispresent in 1.2.8, but only for the affected version 1.2.7.Once version 1.2.8 (which ships with the fix) is detected, the plugin uninstallsitself during startup utilizing the plugin manager.How does it work?After installing the plugin and restarting, the plugin will check if you arerunning OctoPrint version 1.2.7 or 1.2.8.If you are running 1.2.7, it will apply the necessary fix to the loaded classof the Software Update Plugin during start-up of the server (via so called monkeypatching). Once your server has started you may then update as usual.If the plugin detects version 1.2.8 as running, it will uninstall itselfand restart the server (since it’s not necessary any more).If you are running neither 1.2.7 nor 1.2.8, the plugin will not do anythingbut change its name and description to hint at the fact that it should beuninstalled.Usually the process will look like the following:  You are running 1.2.7.  You install the plugin and are prompted to restart the server.  You restart the server.  You perform the update to 1.2.8. The server is restarted.  The plugin detects you are now running 1.2.8. It uninstalls itself andrestarts the server.  You have a clean 1.2.8 install.",
"tags": ["fix"]
},

{
"id": "/plugins/eeprom_marlin_printrbot",
"url": "/plugins/eeprom_marlin_printrbot/",
"date": "2015-12-26 00:00:00 -0600",
"title": "EEPROM Printrbot variant of Marlin Editor",
"description": "Makes it possible to change the EEPROM values of Printrbot variant of Marlin Firmware through OctoPrint",
"author": "Ryan Neufeld",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Printrbot variant of Marlin Firmware based Machine",
"tags": ["marlin","helper"]
},

{
"id": "/plugins/active_filters",
"url": "/plugins/active_filters/",
"date": "2016-01-01 00:00:00 -0600",
"title": "Active Filters",
"description": "Save terminal filters status",
"author": "ovidiu",
"content": "This plugin will save the status, active/inactive, of the regex filters in the terminal tab.The save is done local, so if you access OctoPrint on multiple computers, the settings, might vary.",
"tags": ["filters","regex","terminal"]
},

{
"id": "/plugins/title_status",
"url": "/plugins/title_status/",
"date": "2016-01-18 00:00:00 -0600",
"title": "Title Status",
"description": "Show printers status in window title",
"author": "ovidiu",
"content": "Shows the status of the printer (offline, operational, connecting, paused, error… ) in the title of the browser as  Connecting…  Paused…  ERROR !!            = Offline        △ = Printing  ? = Unknown",
"tags": ["title","status"]
},

{
"id": "/plugins/telegram",
"url": "/plugins/telegram/",
"date": "2016-02-25 00:00:00 -0600",
"title": "OctoPrint-Telegram",
"description": "A plugin to send and react on messages before, during and after a print via Telegram Messenger.",
"author": "Fabian Schlenz",
"content": "This plugin integrates Telegram Messenger into Octoprint.You can receive automatic notifications with webcam images before and after a print -and even during a print at customizable heights or after a certain time (e.g. after every5mm of height OR after 10 minutes - whatever happend first).You can also control Octoprint via messages. Send /status to receive the current status,/abort to abort the currently running print or /help to receive a list of available commands.Please have a look at the documentation at githubto learn how to register a Telegram bot. This is a needed step in order to make this plugin work.If you have any questions or problems feel free to contact me via Telegram: @fabianonline.",
"tags": ["notification","mobile","progress","control"]
},

{
"id": "/plugins/pushover",
"url": "/plugins/pushover/",
"date": "2016-04-13 00:00:00 -0500",
"title": "Pushover",
"description": "A plugin that send a notification with Pushover when the job is done or is failed",
"author": "Thijs Bekke",
"content": "This plugin adds support for Pushover notifications to OctoPrint.When your job is finished or is failed OctoPrint will send a notification to Pushover. You can configure the sound or priority of the messages.This plugin supports the following features/events  Send notifications on an interval (percent or time)  Include a capture of your camera with your notifications  Temperature reached  Print done  After first couple of layer  Print Failed  Print Started  Printer is Waiting  Printer Shutdown  Print Paused  Alert Event (M300)  Panic Event (M112)  Error Event  Limit to specific devices",
"tags": ["notification","pushover"]
},

{
"id": "/plugins/redeem",
"url": "/plugins/redeem/",
"date": "2016-04-26 00:00:00 -0500",
"title": "OctoPrint Redeem",
"description": "Control Redeems configuration",
"author": "Elias Bakken",
"content": "The OctoPrint Redeem plugin enables choosing printer configuration for Redeem directly from OctoPrint.Redeem is the firmware for Replicape, and although it can be configured on the command line, it might be betterto simply download the configuration file, edit it on a local computer and upload it. All of this can be donedirectly form the settings window using this plugin.",
"tags": ["redeem","replicape","firmware","control"]
},

{
"id": "/plugins/cost",
"url": "/plugins/cost/",
"date": "2016-06-11 00:00:00 -0500",
"title": "Cost estimator",
"description": "When a file is loaded to be printed, it will display the estimated cost of printing.",
"author": "Jan Szumiec",
"content": "This plugin will display the estimated cost of the print based on filament cost per meter, andexpected printing time.These variables can be set via settings from an admin account. Estimating how much a meter offilament costs, is trivial. For hourly running costs, refer to your printer’s manual, or usea power meter to estimate power consumption in kWh and then simply multiply by the cost of1kWh as billed to you by your electricity provider.",
"tags": ["helper","cost"]
},

{
"id": "/plugins/autoscroll",
"url": "/plugins/autoscroll/",
"date": "2016-06-27 00:00:00 -0500",
"title": "Autoscroll",
"description": "Turn on/off terminal autoscroll when scrolling up/down",
"author": "ovidiu",
"content": "Turn on/off terminal autoscroll when scrolling up/down  turns autoscroll off when scrolling up (rename button to “Now”)  turns autoscroll on when “Now” is pressed or scrolled to the endBehaviour similar to “Console” application, the OSX log viewer.",
"tags": ["terminal","autoscroll"]
},

{
"id": "/plugins/filament_sensor",
"url": "/plugins/filament_sensor/",
"date": "2016-06-29 00:00:00 -0500",
"title": "Filament Sensor",
"description": "Use a filament sensor to pause printing when filament runs out.",
"author": "ovidiu",
"content": "Pause print on GPIO filament runout sensorThe following needs to be added to the config.yaml:plugins:  filament:    pin: XX    bounce: 400where XX represent the GPIO pin where your sensor is connected.An API is available to check the filament sensor status via a GET method to /plugin/filament/status which returns a JSON  {status: \"-1\"} if the sensor is not setup  {status: \"0\"} if the sensor is OFF (filament not present)  {status: \"1\"} if the sensor is ON (filament present)The status 0/1 depends on the type of sensor, and it might be reversed if using a normally closed switch.A build using an optical switch can be found at http://www.thingiverse.com/thing:1646220Note: Needs RPi.GPIO version greater than 0.6.0 to allow access to GPIO for non root and chmod a+rw /dev/gpiomem.This requires a failry up to date system.",
"tags": ["filament","sensor","api"]
},

{
"id": "/plugins/multi_colors",
"url": "/plugins/multi_colors/",
"date": "2016-06-29 00:00:00 -0500",
"title": "Multi Colors",
"description": "Inject GCODE at specified layers to allow multi color printing",
"author": "ovidiu",
"content": "Inject GCODE at specified layers to allow multi color printing based on a regular expressionNote: Currently only compatible with the development version of OctoPrint (1.3.0dev, devel branch).",
"tags": ["color","filament change"]
},

{
"id": "/plugins/gcodebar",
"url": "/plugins/gcodebar/",
"date": "2016-09-01 00:00:00 -0500",
"title": "GCodeBar",
"description": "Send GCode from the sidebar",
"author": "Markus Towara",
"content": "GcodeBarPlugin for Octoprint to allow sending GCode commands from the sidebar.Features:  Hooks into the Terminal Tab and uses same history (scrollable with up / down keys)  Send multiple commands seperated by semicolons  User needs to be logged in and connected to printer to send commandsSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/mtowara/OctoPrint-Gcodebar/archive/master.zip",
"tags": ["gcode","control","sidebar"]
},

{
"id": "/plugins/detailedprogress",
"url": "/plugins/detailedprogress/",
"date": "2016-09-02 00:00:00 -0500",
"title": "Detailed Progress",
"description": "Displays detailed progress on the LCD screen",
"author": "tpmullan",
"content": "A plugin that sends M117 commands to the printer to display the progress of the print job being currently streamed. The message to display can be configured (some placeholders included).By default, It rotates the display every 10 seconds with the following information:  Percentage of the job’s progress  ETL - Estimated time left  ETA - Estimated time of completion",
"tags": ["display","lcd","printer","progress"]
},

{
"id": "/plugins/slicer",
"url": "/plugins/slicer/",
"date": "2016-09-22 00:00:00 -0500",
"title": "Full-featured Slicer",
"description": "A full-blown GUI-based slicer. Rotate and scale model; slice multiple STL files at a time; set layer height and other slicing settings.",
"author": "eyal0, Kenneth Jiang",
"content": "Slicer plugin offers useful features that OctoPrint’s built-in slicer doesn’t have:  Rotate, scale, and move STL models.  Slice multiple STLs at a time. Split 1 STL into unconnected parts.  Circular print bed support (do you have a delta printer?).  High-light overhang areas. Automatically orient the model for better result (“lay flat”).  Slice based on Cura profiles you upload to OctoPrint.  Customizable slicing settings, including Basic (layer height, bed temperature …) and Advanced (print speed, start/end G-code …).  Slic3r support (when Slic3r plugin is installed).  More is coming…",
"tags": ["slicer","gcode","stl"]
},

{
"id": "/plugins/M117NavBar",
"url": "/plugins/M117NavBar/",
"date": "2016-10-27 00:00:00 -0500",
"title": "OctoPrint-M117NavBar",
"description": "Plugin to send M117 gcode messages to the top navbar of OctoPrint.",
"author": "jneilliii",
"content": "M117NavbarThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client. It will display M117 gcode content in the header.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode"]
},

{
"id": "/plugins/M117PopUp",
"url": "/plugins/M117PopUp/",
"date": "2016-10-27 00:00:00 -0500",
"title": "OctoPrint-M117PopUp",
"description": "Plugin to send M117 gcode messages to the web interface.",
"author": "jneilliii",
"content": "M117PopUpThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client. It utilizes OctoPrint’s built in alerting system to pop up the messages being sent via M117 gcode command.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode"]
},

{
"id": "/plugins/filemanager",
"url": "/plugins/filemanager/",
"date": "2016-12-09 00:00:00 -0600",
"title": "FileManager",
"description": "A simple filemanager for OctoPrint",
"author": "Marc Hannappel (Salandora)",
"content": "A simple file manager.",
"tags": ["ui","files"]
},

{
"id": "/plugins/filament_sensor_reloaded",
"url": "/plugins/filament_sensor_reloaded/",
"date": "2017-01-06 00:00:00 -0600",
"title": "Filament Sensor Reloaded",
"description": "Use a filament sensor to pause printing when filament runs out.",
"author": "kontakt, ssorgatem, nickmitchko",
"content": "Pause printing when the 3D printer runs out of filament.Designed as an overhaul and upgrade of the Filament Sensor plugin by MoonshineSG, this plugin is simpler to use and configure.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/smsnotifier",
"url": "/plugins/smsnotifier/",
"date": "2017-01-10 00:00:00 -0600",
"title": "SMS Notifier (with Twilio)",
"description": "Recieve SMS notifications when OctoPrint jobs are complete.",
"author": "Richard Bteman",
"content": "Recieve email notifications when OctoPrint jobs are complete.",
"tags": ["notification"]
},

{
"id": "/plugins/fullscreen",
"url": "/plugins/fullscreen/",
"date": "2017-01-16 00:00:00 -0600",
"title": "Fullscreen Webcam",
"description": "Open the webcam feed in fullscreen mode with extra details about the printjob",
"author": "Paul de Vries",
"content": "This plugin will allow you to open the webcam feed in fullscreen mode by double clicking the image. It will show a bar at the bottom of the image with information about print time, remaining time, temperatures and a pause button.",
"tags": ["ui","display","webcam"]
},

{
"id": "/plugins/freemobilenotifier",
"url": "/plugins/freemobilenotifier/",
"date": "2017-01-25 00:00:00 -0600",
"title": "OctoPrint_FreeMobile-Notifier",
"description": "Octoprint plugin for print completion notifications using Free (Free is a French telecommunications company)",
"author": "Antoine CAVARD",
"content": "Receive SMS notifications when OctoPrint jobs are complete.",
"tags": ["notification"]
},

{
"id": "/plugins/psucontrol",
"url": "/plugins/psucontrol/",
"date": "2017-01-25 00:00:00 -0600",
"title": "PSU Control",
"description": "Smart control of your power supply via GPIO, GCODE Command, System Command, or variety of sub-plugins.",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-PSUControl for information on configuration.Sub Plugins: https://plugins.octoprint.org/by_tag/#tag-psucontrol-subplugin",
"tags": ["power","atx","psu","control","psucontrol","gpio"]
},

{
"id": "/plugins/slic3r",
"url": "/plugins/slic3r/",
"date": "2017-02-07 00:00:00 -0600",
"title": "OctoPrint-Slic3r",
"description": "Adds support for slicing via Slic3r from within OctoPrint",
"author": "Javier Martínez Arrieta, Eyal Soha",
"content": "Slic3r plugin for OctoPrintWARNINGThis plugin has been successfully tested for the following cases:  Linux: Slic3r’s stable versions 1.1.7 and 1.2.9 (tests done under a Raspberry Pi 2, but it should work for other Linux distributions).  Windows: Slic3r works for version 1.2.9, not doing it for version 1.1.7.SetupIn order to install the plugin, go to Settings -&gt; Plugin Manager and click on ‘Get more…’:You’ll see an option to add it from an URL. Add https://github.com/OctoPrint/OctoPrint-Slic3r/archive/master.zip an click on ‘Install’ button.At this moment, the plugin will be installed, but Slic3r must be downloaded and configured, which can be done following these steps:      If OctoPrint is running under a Raspberry Pi, you can use the following script to install Slic3r (unfortunately precompiled packages do not work for RPI’s architecture). For that purpose, copy the following code in a file (i.e. slic3r_install.sh).         #!/bin/sh echo \"Shell script created by Javier Martínez Arrieta for Slic3r installation\\n\" #Ask the user for a version echo \"Please indicate which version you desire to be installed (e.g. 1.1.7)\" read version echo \"The installation of Slic3r takes a long time. PLease be patient\" cd $HOME echo \"Installing required libraries and dependencies...\" sudo apt-get install git libboost-system-dev libboost-thread-dev git-core build-essential libgtk2.0-dev libwxgtk2.8-dev libwx-perl libmodule-build-perl libnet-dbus-perl cpanminus libextutils-cbuilder-perl gcc-4.7 g++-4.7 libwx-perl libperl-dev sudo cpanm AAR/Boost-Geometry-Utils-0.06.tar.gz Math::Clipper Math::ConvexHull Math::ConvexHull::MonotoneChain Math::Geometry::Voronoi Math::PlanePath Moo IO::Scalar Class::XSAccessor Growl::GNTP XML::SAX::ExpatXS PAR::Packer echo \"Cloning Slic3r repository...\" git clone https://github.com/alexrj/Slic3r.git cd Slic3r git checkout $version echo \"Building and testing Scli3r...\" sudo perl Build.PL echo \"If everything was installed properly,you should be able to run Slic3r with the command ./slic3r.pl\"            Save the file and allow execution giving permission. Using a terminal, it would be chmod +x slic3r_install.sh (or the name given to the file).     chmod +x slic3r_install.sh        Now that you have permission to execute it, type ./slic3r_install.sh and press ‘Enter’. If it is the first time executing the installer, take into account that it can take about 30 minutes or even more.     ./slic3r_install.sh        At the beggining of the installation, you will be asked which version should be installed (available versions at http://slic3r.org/download)            If you get an out of memory error it’s because Raspberry Pi doesn’t have enough swap memory to build Slic3r by default. You will need to increase the swap size. To do this, run sudo nano /etc/dphys-swapfile and set CONF_SWAPSIZE=1000 then save and reboot. After reboot, run free -h and confirm that total swap size is around 1000MB.        Execute OctoPrint and go to Settings (or restart when you are asked after installing the plugin). Slic3r should appear in Plugins list:            In ‘General’, you should put the following path for the executable (supposing the execution of the script, the path would be /home/pi/Slic3r/slic3r.pl). Note: If running in Windows, write the path to slic3r-console:            Before importing the profile, you have to export a file with the Slic3r’s configuration. For that purpose, open Slic3r, and select File-&gt; Export Config…            Save the file with the desired name (e.g. config.ini):            Once done, in ‘Profiles’ click ‘Import Profile…’ button:            Click on ‘Browse…’ and search for the profile. Once done, save with the name and identifier wished by clicking ‘Confirm’:            Click ‘Save’ to confirm Slic3r settings:            Now you can slice your stl files:      ",
"tags": ["slic3r","gcode","stl"]
},

{
"id": "/plugins/tobecaplugin",
"url": "/plugins/tobecaplugin/",
"date": "2017-02-16 00:00:00 -0600",
"title": "Tobeca Plugin",
"description": "Plugin for OctoPrint that adds a special tab with commands for the Tobeca 3d printer.",
"author": "Saymtech",
"content": "Adding a Tobeca (French 3D Printer) tab with commands:  Autotune PID : Sending the M303 Gcode with selecting tool, temperature  (parameter C=8)  Z-Probe-Offset : Sending the M851 Gcode with selecting the value  Home XYZ : Sending the G28 Gcode, because Home Z is harzardous with Z-Probe",
"tags": ["printing"]
},

{
"id": "/plugins/roomtemp",
"url": "/plugins/roomtemp/",
"date": "2017-03-02 00:00:00 -0600",
"title": "Room Temperature",
"description": "Display room temperature on navbar",
"author": "Frederic Moutin",
"content": "Plugin that displays room temperature on navbarBased on OctoPrint-NavbarTemp by imrahil (https://github.com/imrahil/OctoPrint-NavbarTemp)This plugin displays room temperature on navbar via a ds18b20 sensor connected to pin n°4 of your raspberry PiSetup:1 - Connect your ds18b20 sensor to your Pi (see Howto below)2 - Install the roomTemp plugin using Plugin ManagerHowto: Connecting your ds18b20 sensor1 - Connecting your ds18b20 sensor to the Pi:2 - Then connect to your Octopi via ssh.3 - we first need to open up the boot config file, this can be done by running the following command:\tsudo nano /boot/config.txt4 - At the bottom of this file enter the following.\tdtoverlay=w1-gpio5 - Once done save &amp; exit by pressing ctrl x and then y.6 - Now reboot the Pi by running the following command.\tsudo reboot7 - Enjoy !!",
"tags": ["ui"]
},

{
"id": "/plugins/touchtest",
"url": "/plugins/touchtest/",
"date": "2017-03-05 00:00:00 -0600",
"title": "Touchtest Bed Leveling",
"description": "A simple tool to move the extruder to different touch points around the perimeter of the print bed. Useful for bed leveling.",
"author": "Daniel Miller",
"content": "Touch Test plugin for OctoPrint adds a new sidebar panel, essential for manual bed leveling.A simple 3x3 grid of buttons allows the user to move the printhead to all 4 corners and edges of the printbed, where you can perfotm “the paper test”.More info at: https://github.com/Peaches491/OctoPrint-Touchtest",
"tags": ["ui","control","calibration","leveling","sidebar"]
},

{
"id": "/plugins/ledstripcontrol",
"url": "/plugins/ledstripcontrol/",
"date": "2017-03-10 00:00:00 -0600",
"title": "LEDStripControl",
"description": "Control RGB LED Strips via your Raspberry Pi and GCode.",
"author": "Uriah Welcome",
"content": "OctoPrint Plugin that intercepts M150 GCode commands and controls local GPIOs on your Pi.Implements the M150 command syntax from the latest Marlin.M150: Set Status LED Color - Use R-U-B for R-G-BM150 R255       ; Turn LED redM150 R255 U127  ; Turn LED orangeM150            ; Turn LED offM150 R U B      ; Turn LED white",
"tags": ["raspberry pi","led","rgb","gcode"]
},

{
"id": "/plugins/gcodesystemcommands",
"url": "/plugins/gcodesystemcommands/",
"date": "2017-03-14 00:00:00 -0500",
"title": "GCODE System Commands",
"description": "Define G-Code commands that execute local system commands",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-GCodeSystemCommands for information on configuration.",
"tags": ["gcode","command"]
},

{
"id": "/plugins/enclosure",
"url": "/plugins/enclosure/",
"date": "2017-03-15 00:00:00 -0500",
"title": "OctoPrint-Enclosure",
"description": "Control printer environment (Temperature control / Lights / Fans and Filament Sensor) using Raspberry Pi GPIO",
"author": "Vitor Henrique",
"content": "This plugin is intended to control your printer enclosure using raspberry pi GPIO (At the moment this plugin only support raspberry pi).A list of things that you can do:  Add temperature sensors on your enclosure or near your printer  Add active heaters on your enclosure and keep the temperature nice and high for large ABS  Use custom Gcode to control rapsberry pi GPIO  Use custom Gcode to control neopixel  Use custom Gcode to control enclosure temperature  PWM controlled outputs  PWM controlled outputs based on temperature sensor  Active cooling for good PLA printing  Schedule GPIO’s to turn on and off with a fixed period of time during printing.  Mechanical buttons to pause and resume printer jobs  Mechanical buttons to send GCODE to the printer  Mechanical buttons to control raspberry pi GPIO  Multiple filament sensors for dual or more extruders  Alarm when enclosure temperature reaches some sort of value  Notifications using IFTTT when events happen (temperature trigger / print events / etc)  Add sub-menus on navbar to quick access outputs and temperature sensorsThere is also an API that can be used to interact with the plugin with other software",
"tags": ["filament","sensor","temperature","humidity","control","fan","lights","DHT22","DHT11","AM2302","DS18B20","GCODE","NEOPIXEL","ws2812b","SI7021","BME280","TMP102"]
},

{
"id": "/plugins/OctoRemote",
"url": "/plugins/OctoRemote/",
"date": "2017-03-29 00:00:00 -0500",
"title": "OctoPrint-Octoremote",
"description": "Control your 3D-Printer with an Arduino and a Keypad or a custom remote",
"author": "Pascal Krumme",
"content": "OctoRemote enables you to perform all usual printer movements with a simple keypress. Current version implements moving the X-, Y- and Z-Axis, homing and controlling up to four extruders.Movement distance of the extruders can also be controlled via the keypad. An embedded version of the remote controller is in the making and will be released soon.",
"tags": ["printing","remote","arduino","genuino","control","keypad","remotecontrol","ui"]
},

{
"id": "/plugins/tempsgraph",
"url": "/plugins/tempsgraph/",
"date": "2017-03-29 00:00:00 -0500",
"title": "OctoPrint-Tempsgraph",
"description": "Replaces the temperature graph with an interactive and zoomable one",
"author": "Robin Vanhove",
"content": "This plugin adds some features to the temperature graph :  exact values on hover  zooming  panning  exportUsage :  hover over the graph to show date and temperatures under the cursor  drag to zoom  shift + drag to pan  double click to reset axes / autoscale",
"tags": ["interactive graph","temperature plot","zoom","ui"]
},

{
"id": "/plugins/temperaturefailesafe",
"url": "/plugins/temperaturefailesafe/",
"date": "2017-04-14 00:00:00 -0500",
"title": "TemperatureFailsafe",
"description": "Execute shell commands when temperatures violate thresholds",
"author": "Uriah Welcome",
"content": "OctoPrint Plugin that executes shell commands on temperature violations.",
"tags": ["raspberry pi","temperature"]
},

{
"id": "/plugins/finetunerptr",
"url": "/plugins/finetunerptr/",
"date": "2017-04-23 00:00:00 -0500",
"title": "OctoPrint-Finetunerptr",
"description": "Control important maintenance and calibration settings easy accessible from a dropdown-button in the navbar.",
"author": "Andreas Bruckmann",
"content": "Clean and structured UI for Repetier-Firmware based printers.Helps you in maintenance situations as it keeps the most important tools always accessible.",
"tags": ["repetier","repetier firmware","maintenance","control","calibration","helper","ui","ux","administration"]
},

{
"id": "/plugins/octoprint-grbl-plugin",
"url": "/plugins/octoprint-grbl-plugin/",
"date": "2017-05-11 00:00:00 -0500",
"title": "Grbl support for OctoPrint",
"description": "Support Grbl style GCODE for using CNCs and Laser engravers with OctoPrint.",
"author": "mic159",
"content": "This plugin modifies the gcode sent and recieved to translate what is needed.NOTE Additional configuration required:  Serial Connection &gt; Advanced options &gt; “Hello” command = M5  Features &gt; Send a checksum with the command &gt; Never",
"tags": ["grbl","CNC","Laser","GCODE","protocol"]
},

{
"id": "/plugins/OctoPNP",
"url": "/plugins/OctoPNP/",
"date": "2017-05-19 00:00:00 -0500",
"title": "OctoPNP",
"description": "OctoPrint plugin for camera based pick 'n place operations",
"author": "Florens Wasserfall",
"content": "OctoPNP is an extension that allows Octoprint to control printers and similar devices with additional hardware for handling of SMD-parts (and potentially arbitrary objects). It currently requires the following hardware extensions:  A Tray consisting of a grid of boxes to store SMD parts in a defined position  A head camera to locate the exact part position on the tray  A (second) bed camera to precisely align the parts during the placing operation  A vacuum nozzle to grip partsOpenCV is used for the image processing part to measure exact positions and rotations of objects for accurate placing.For details and documentation please refer to the project’s github repository.This plugin is developed during a research project for integrated printing of electronics (wires and SMD-components) with FDM-printers.The development branch of the Slic3r extensions for routing circuits in a 3D-object by importing EAGLE schematics can be found at https://github.com/platsch/Slic3r/tree/electronics.",
"tags": ["pick and place","printer","control","camera","external objects"]
},

{
"id": "/plugins/Octoslack",
"url": "/plugins/Octoslack/",
"date": "2017-05-20 00:00:00 -0500",
"title": "Octoslack",
"description": "An OctoPrint plugin for monitoring your printer and prints via Slack, Mattermost, Pushbullet, Pushover, Rocket.Chat, Discord, Riot/Matrix, or Microsoft Teams",
"author": "Chris Fraschetti",
"content": "An OctoPrint plugin for monitoring your printer and prints via Slack, Mattermost, Pushbullet, Pushover, Rocket.Chat, or Riot/MatrixFeatures  Support for Slack, Mattermost, Pushbullet, Pushover, Rocket.Chat, Discord, Matrix based platforms (e.g. Riot), &amp; Microsoft Teams  Monitor both print status as well as printer connectivity status  Respond to Slack commands to check print status or cancel/pause/resume a print          Each command can be individually enabled/disbaled or flagged as restricted which limits the command(s) to specific users      Requires use of the Slack App Bot Token        Customizable messages          Slack and Mattermost support for a fallback message (e.g. mobile notification)      Pushover support for event specific sound and priority settings        Support for posting to one more channels as well as event level channel overrides  Support for inclusion of RasPi temperature, bed temperature, nozzle temperates, nozzle height, and device IP(s)  Support for local system command execution  Slack bot name/icon/emoji customizations          Requires use of the Slack App Bot Token        Optional inclusion of printer snapshot images with each message          Support for snapshot hosting via Amazon S3, Minio, Imgur (with album support), Slack attachments, Pushover, Pushbullet, Rocket.Chat, Discord, or Matrix      Slack attachments requires use of the Slack App Bot Token        Optional upload of rendered timelapse video to configured hosting service          Currently excludes Imgur, Pushover, Rocket.Chat, Discord, &amp; Matrix        Support for additional snapshot images from IP camerasSupported Events  Print started  Print failed  Print cancelling  Print cancelled  Print paused  Print resumed  Print finished  Print progress (% complete)  Print progress (time interval)  Print progress (Z height change)  G-code sent to the printer  G-code received from the printer (including filament runout messages)  Timelapse render started  Timelapse render finished (including Octolapse timelapses)  Timelapse render failed  File analysis started  File analysis finished  OctoPrint error  OctoPrint started  OctoPrint stopped  Printer connecting  Printer connected  Printer disconnecting  Printer disconnected",
"tags": ["slack","mattermost","pushbullet","pushover","rocket chat","matrix","riot","discord","microsoft teams","notification","progress","mobile","monitor","monitoring","remote monitoring","filament runout","s3","imgur","minio","gcode","camera","webcam","eta","finish time","print time","snapshots","status","alert","gcode"]
},

{
"id": "/plugins/actioncommands",
"url": "/plugins/actioncommands/",
"date": "2017-06-30 00:00:00 -0500",
"title": "Action Commands",
"description": "Adds handling for user-definable action commands.",
"author": "Ben Lye",
"content": "Adds handling for custom action commands to OctoPrint. Action commands are sent from the RepRap machine in the form //action:command.The plugin allows OctoPrint to execute a system command or send G-code to the printer in response to an action command.UsageAs of the latest Marlin bugfix-1.1.x version, the command M118 can be used to echo output to serial, meaning that M118 //action:dostuff would cause this plugin to try to handle the dostuff command when //action:dostuff was echoed back on the serial console.A future application of the plugin would be to add actions in the RepRap machine’s firmware so that hosts could respond.  For example, when Marlin is killed because something is wrong it would echo //action:poweroff and the attached OctoPrint instance could use this action command to trigger the printer’s power outlet to switch off.Action Command References  OctoPrint Documentation  RepRap Wiki",
"tags": ["action","actions","commands","action command"]
},

{
"id": "/plugins/BLTouch",
"url": "/plugins/BLTouch/",
"date": "2017-07-14 00:00:00 -0500",
"title": "OctoPrint-BLTouch",
"description": "Simple plugin to add BLTouch controls to the Control tab.",
"author": "jneilliii",
"content": "BLTouchSimple plugin to add BLTouch controls to the Control tab.ScreenshotGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["BLTouch"]
},

{
"id": "/plugins/polarcloud",
"url": "/plugins/polarcloud/",
"date": "2017-07-14 00:00:00 -0500",
"title": "Polar Cloud",
"description": "Connects OctoPrint to the Polar Cloud so you can easily monitor and control OctoPrint outside of your local network",
"author": "Mark Walker",
"content": "Easily Monitor Your Prints from AnywhereThe Polar Cloud at polar3d.com is accessible fromanywhere, inside or outside of the printer’s local network.Print QueueYou can prepare multiple prints, queue them up and send them one by one to yourprinterManage Multiple PrintersYou can connect more than one printer to your Polar Cloud account and managethem all from one place.Object LibraryYou can upload your objects to Polar Cloud, share them with other cloudmembers, and send them to your printer.README - Getting StartedThere’s a few extra command line steps to support timelapses in the PolarCloud. You can get started without them though. Please read the additional infoin the README",
"tags": ["cloud","remote access","polarcloud"]
},

{
"id": "/plugins/costestimation",
"url": "/plugins/costestimation/",
"date": "2017-07-16 00:00:00 -0500",
"title": "CostEstimation",
"description": "Displays the estimated print cost for the loaded model",
"author": "Sven Lohrmann, Olli",
"content": "This OctoPrint plugin displays the estimated print cost for the loaded model. The print cost includes the price for the used filament the maintenance and operating cost for the printer as well as the depreciation of the printer.Features  Calculation based on the provided filament length  Customizable currency symbol  Hide cost if not logged in (optional)  Support for multiple extruders  Support for filament profiles with Filament Manager Plugin",
"tags": ["cost","ui"]
},

{
"id": "/plugins/simpleemergencystop",
"url": "/plugins/simpleemergencystop/",
"date": "2017-07-23 00:00:00 -0500",
"title": "Simple Emergency Stop",
"description": "Add an emergency stop buton on NavBar!",
"author": "Sebastien Clement (SebClem)",
"content": "AboutA simple plugin that adds an emergency stop button on NavBar.You can chose between 2 type of button, the big one, or little one.If you need more information, you can find the project’s Github Page here.",
"tags": ["ui","action","command","control","gcode","emergency","stop"]
},

{
"id": "/plugins/youtubelive",
"url": "/plugins/youtubelive/",
"date": "2017-07-23 00:00:00 -0500",
"title": "YouTube Live",
"description": "Simple plugin to add a YouTube Live tab to OctoPrint.",
"author": "jneilliii",
"content": "YouTube LivePlugin that adds a YouTube Live tab to OctoPrint with the capability of starting and stopping a live stream that is created by reencoding the mjpg stream configured in OctoPrint’s Webcam &amp; Timelapse settings.Note: OctoPrint’s webcam stream requires using a full url path with an ip address, ie http://192.168.1.2:8080/?action=streamScreenshotsPrerequisitesIn order to stream please follow the instructions here.  If you are just wanting to watch a stream enter the channel id in settings, no other prerequisites required.SettingsOnce installed enter your YouTube’s channel id (Advanced Account Settings) and your YouTube stream id (YouTube Live Dashboard) into the YouTube Live plugin settings.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["YouTube","Live Stream"]
},

{
"id": "/plugins/eeprom_MPSelectMini",
"url": "/plugins/eeprom_MPSelectMini/",
"date": "2017-08-13 00:00:00 -0500",
"title": "EEPROM Editor for Monoprice Select Mini",
"description": "Makes it possible to change the EEPROM values of the Monoprice Select Mini or Malyan M200 Firmware through OctoPrint",
"author": "Brian Ruhmann",
"content": "This plugin is designed to get, change and save the values in the EEPROM of your Monoprice Select Mini or Malyan M200 3D Printer.",
"tags": ["malyan","eeprom","monoprice","helper"]
},

{
"id": "/plugins/Hangprinter",
"url": "/plugins/Hangprinter/",
"date": "2017-08-20 00:00:00 -0500",
"title": "OctoPrint-Hangprinter",
"description": "This plugin provides some useful hangprinter control elements. It can be used for setting up and calibration of a Hangprinter.",
"author": "Mario Lukas",
"content": "The controls can be used to unwind all gears seperatly. The bottom form can be used to enter the measurements for the hangprinter setup. By pressing the “calculate values” Button, all values are calculated. Pressing the “set values to EEPROM” will save the values in the EEPROM of the printer. Keep in mind that EEPROM option is not activated in the Hangprinter Marlin Firmware by default. You need to enable this Option.http://plugins.octoprint.org/plugin/hangprinter/",
"tags": ["Hanprinter","controls","calibration","ui"]
},

{
"id": "/plugins/filamentmanager",
"url": "/plugins/filamentmanager/",
"date": "2017-08-22 00:00:00 -0500",
"title": "FilamentManager",
"description": "Filament Manager for OctoPrint",
"author": "Sven Lohrmann, Olli",
"content": "This OctoPrint plugin helps to manage your filament spools.Features  Replacing filament volume with weight in sidebar  Software odometer to measure used filament  Warn if print exceeds remaining filament on spool  Assign temperature offset to spools  Automatically pause print if filament runs out  Import &amp; export of spool inventory  Support for PostgreSQL as database for multiple instances",
"tags": ["ui","filament","manager"]
},

{
"id": "/plugins/filetypes",
"url": "/plugins/filetypes/",
"date": "2017-08-23 00:00:00 -0500",
"title": "Filetypes",
"description": "Let you select file types visible in upload dialog",
"author": "thelongrunsmoke",
"content": "Small and simple plugin. Now you can specify what kind of files you want to see in upload dialog.",
"tags": ["stl","gcode","ui","upload"]
},

{
"id": "/plugins/custombackground",
"url": "/plugins/custombackground/",
"date": "2017-08-27 00:00:00 -0500",
"title": "OctoPrint-CustomBackground",
"description": "Plugin to change the background image on the temperature graph.",
"author": "jneilliii",
"content": "Custom BackgroundThis plugin allows you to upload an image to your OctoPrint instance like a gcode file and it will replace the default background of the Temperature graph with that image.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["background","image","temperature_graph"]
},

{
"id": "/plugins/tplinksmartplug",
"url": "/plugins/tplinksmartplug/",
"date": "2017-09-03 00:00:00 -0500",
"title": "OctoPrint-TPLinkSmartplug",
"description": "Plugin to control TP-Link Smartplug devices from OctoPrint web interface.",
"author": "jneilliii",
"content": "TP-Link SmartplugWarning: Recent firmware version 1.1.0 for the HS100, HS110 have been reported to break the capability of this plugin to communicate with kasa devices. There is nothing that I can do to resolve this issue until the communication protocol is reverse engineered again.Work inspired by OctoPrint-PSUControl and TP-Link WiFi SmartPlug Client, this plugin controls a TP-Link Smartplug via OctoPrint’s nav bar.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your TP-Link Smartplug device. Adjust additional settings as needed.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.2 your gcode command would be M80 192.168.1.2        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["TPLink","TP-Link","Smartplug","Power"]
},

{
"id": "/plugins/RepetierInformer",
"url": "/plugins/RepetierInformer/",
"date": "2017-09-18 00:00:00 -0500",
"title": "OctoPrint-RepetierInformer",
"description": "Send notices to the Repetier-Informer app.",
"author": "Dan Delaney",
"content": "Recieve push notifications using the paid for Repetier-Informer app for android or apple.More information can be obtained about the mobile application via the Repetier Apps webpage at https://www.repetier-apps.com.Repetier has granted use of my own Application ID.Use of the OctoPrint tenticle logo has been granted by Gina Häußge.",
"tags": ["repetier","repetier-informer","repetier-server","repetier-host","notification","push"]
},

{
"id": "/plugins/HeaterTimeout",
"url": "/plugins/HeaterTimeout/",
"date": "2017-09-25 00:00:00 -0500",
"title": "HeaterTimeout",
"description": "Automatically shut off heaters if no print has been started.",
"author": "Andrew Cherevatkin, Uriah Welcome",
"content": "Ever accidentally preheat your hotend or bed and then forget to start a print? Then this is the plugin for you.This plugin will automatically disable your printers heaters after a specified timeout if no print has been started.",
"tags": ["temperature"]
},

{
"id": "/plugins/GcodeEditor",
"url": "/plugins/GcodeEditor/",
"date": "2017-11-01 00:00:00 -0500",
"title": "GcodeEditor",
"description": "Edit gcode that's been uploaded to OctoPrint",
"author": "ieatacid",
"content": "Adds edit buttons to the items in the file list which let you edit the gcode of any file that’s not currently printing.",
"tags": ["gcode","editor","filemanagement"]
},

{
"id": "/plugins/themeify",
"url": "/plugins/themeify/",
"date": "2017-11-11 00:00:00 -0600",
"title": "Themeify",
"description": "Beautiful themes for octoprint",
"author": "Birk Johansson",
"content": "A small OctoPrint plugin to change the looks of OctoPrint!Features a beautiful Dark Theme inspired by Discord’s color palette, along with a handful of others thanks to the awesome contributors.Also features customization of individual elements. With the advanced-customization scheme you can modify the appearance to your heart’s desire directly from the settings-dialog!",
"tags": ["theme","dark","style","styling"]
},

{
"id": "/plugins/preheat",
"url": "/plugins/preheat/",
"date": "2017-11-21 00:00:00 -0600",
"title": "Preheat Button",
"description": "Automatically heat nozzle and bed to the printing temperature of the current gcode file",
"author": "Marian Kleineberg",
"content": "This plugin adds a preheat button to preheat the nozzle and bed to the printing temperature of the selected gcode file.This can be done manually but this plugin makes it more convenient.If the target temperature is not zero, the button will instead turn off nozzle heating (cooldown).",
"tags": ["ui","api","temperature"]
},

{
"id": "/plugins/tasmota",
"url": "/plugins/tasmota/",
"date": "2017-11-24 00:00:00 -0600",
"title": "OctoPrint-Tasmota",
"description": "Simple plugin to control sonoff devices that have been flashed with Tasmota.",
"author": "jneilliii",
"content": "TasmotaThis plugin is to control ITead Sonoff devices that have been flashed with Sonoff-Tasmota via web calls.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Tasmota device. Adjust additional settings as needed.  Device          The ip or hostname of sonoff device.        Index          Index number reprensenting the relay to control.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip and index.  For example if your plug is 192.168.1.2 and index of 1 your gcode command would be M80 192.168.1.2 1        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["sonoff","tasmota","smartplug","power"]
},

{
"id": "/plugins/astroprint",
"url": "/plugins/astroprint/",
"date": "2017-12-15 00:00:00 -0600",
"title": "AstroPrint Cloud",
"description": "Wirelessly manage and monitor your OctoPi powered printer from the AstroPrint Platform (AP Mobile Apps, AP Desktop Software, & AP Web Portal).",
"author": "AstroPrint",
"content": "Connect to the AstroPrint CloudOnce the AstroPrint plugin is installed on your OctoPi, and you have logged into your FREE AstroPrint Cloud account, you will be able to access, control, and monitor your 3D Printer from AstroPrint Mobile, AstroPrint Desktop, and the AstroPrint Web Portal.General benefits of connecting your OctoPi to the AstroPrint Cloud include:  Remotely start / stop prints, monitor prints, pre-heat, etc.  Access your printer(s) from anywhere.  No need to be limited to local networks.  Manage multiple printers easily.  Cloud slicing - This means you can print from any device, slicing happens in the cloud. (AstroPrint Desktop offers offline slicing as well.)  Sync your printing files across devices.  and more…Plugin SetupYou can follow the instructions in this READMEAstroPrint MobileUse the free AstroPrint Mobile app (iOS &amp; Android) to connect to your OctoPi.  You can connect from anywhere: local network, out-of-network wifi, or via your phone’s data network.  The Mobile app lets you monitor prints, start/stop prints, search and print from Thingiverse, check out your printing stats, save files in the cloud, slice files in the cloud, and more.AstroPrint.com Web PortalIn addition to using Mobile and Desktop, you’ll be able to access your OctoPi from any web enabled device by logging in at AstroPrint.com.  You can also access 3rd party applications here to do things like:  Cloud based file repair, print queuing, and more.Other ApplicationsVia AstroPrint APIs, some developers are adding the ability to print from their apps directly to 3D printers.  You’ll be able to print directly to your printer from websites like the NIH 3D Print Exchange, 3DaGoGo and TinkerCad.  You’ll also be able to print-from-app from apps like Toy Maker.Happy Printing!The AstroTeam",
"tags": ["cloud printing","remote monitoring","remote access","video streaming","design management","fleet management"]
},

{
"id": "/plugins/display_eta",
"url": "/plugins/display_eta/",
"date": "2017-12-19 00:00:00 -0600",
"title": "OctoPrint-Display-ETA",
"description": "Show finish time (ETA) for current print.",
"author": "AlexVerrico, Pablo Ventura",
"content": "Display estimated time of finish for current print (Estimated Time of Arrival). Day of finish is displayed only when current print will not finish today.SetupYou must have the time zone configured on the host, otherwise you will see the time in UTC.In Debian the following commands are made “sudo dpkg-reconfigure tzdata”, then follow the wizard.",
"tags": ["time","eta","finish time"]
},

{
"id": "/plugins/TerminalCommands",
"url": "/plugins/TerminalCommands/",
"date": "2017-12-31 00:00:00 -0600",
"title": "OctoPrint-TerminalCommands",
"description": "Lets you add custom G-code command buttons to OctoPrint's Terminal view tab",
"author": "ieatacid",
"content": "Buttons are inserted between the terminal command input and the terminal filters. Currenty only supports G-code commands that you can send through the terminal.Multiple commands can be bound to one button by separating them with a semicolon (;) e.g. M114; M503 (spaces before or after the semicolon are fine)",
"tags": ["terminal","command","commands","gcode","ui"]
},

{
"id": "/plugins/firmwareupdater",
"url": "/plugins/firmwareupdater/",
"date": "2018-01-15 00:00:00 -0600",
"title": "Firmware Updater",
"description": "Update your printer's firmware from OctoPrint",
"author": "Ben Lye, Gina Häußge, Nicanor Romero Venier",
"content": "AboutAllows you to flash pre-compiled firmware to your printer right from OctoPrint.A large number of boards are supported, based on the MCU (processor) they have:  Atmel Atmega (AVR) family 8-bit MCUs (e.g. RAMPS, Sanguinololu, Melzi, Anet, Creality, Ender, Prusa MMU, Prusa CW1 many others)  Atmel AT90USB family 8-bit MCUs (e.g. Printrboard)  Atmel SAM family 32-bit MCUs (e.g. Arduino DUE)  NXP LPC1768 &amp; LPC1769 MCUs (MKS SBASE, BigTreeTech SKR v1.1, v1.3, v1.4, etc., also SKR Pro v1.1)  STM32 family 32-bits MCUs with embedded ST serial bootloader (e.g. FYSETC Cheetah, not SKR Pro)  STM32 family 32-bit MCUs which update from the SD card using the same method as LPC176x boards (e.g. SKR Pro v1.1, SKR Mini E3 v2, etc.)More boards can be added, please request additions via a Github issue.Additional Features  Advanced options allow the flash methods to be configured or customized  Pre and post-flash options allow gcode or system commands to be run before and after flashing  A navbar icon can be enabled to give quick access to the Firmware Updater user interfaceFull documentation is available on the plugin’s homepage.SupportFor problems or bug reports, or to request support for a new board, please open a Github issue.For general support:  Use the #support-plugins Discord channel  Post in the OctoPrint Community Plugins categoryIn either case, you can mention @benlye in your message to get my attention.",
"tags": ["firmware","avrdude","firmware updater","flashing","arduino","due","bossac","lpc1768","lpc1769","stm32"]
},

{
"id": "/plugins/m73progress",
"url": "/plugins/m73progress/",
"date": "2018-01-16 00:00:00 -0600",
"title": "M73 Progress",
"description": "A plugin to update the built-in progress bar on your printer's LCD.",
"author": "Cesar Vandevelde",
"content": "Most 3D printers offer a progress bar or percentage indicator ontheir display. However, by default, this percentage is only updated whenprinting from SD card. When printing directly through OctoPrint, the progress barremains empty. This small plugin remedies the situation by injectingM73 (set build percentage) commands into the print stream.Note: Not all printers support this feature. In order for this to work, yourfirmware needs to understand the M73 command. See below for instructions forMarlin.Marlin FirmwareYou will need a recent version of Marlin, 1.1.7 or later. The M73 feature isnot enabled by default. You can enable it by uncommenting line 576 inConfiguration_adv.h:// Add an 'M73' G-code to set the current percentage#define LCD_SET_PROGRESS_MANUALLYConfigurationThe plugin should work as-is. Once enabled, the plugin will automatically injectM73 commands in the printer’s serial stream. There are two options to fine-tunethe plugin’s behavior, available through the M73 Progress tab in OctoPrintsettings.      Output time left: Sends the estimated time remaining using the R parameter.This is only supported by certain firmwares (e.g. Marlin 2.0 and Prusafirmware). This option is enabled by default; most firmwares will just ignorethis extra parameter if not supported.        Use time estimate: By default, the plugin uses OctoPrint’s built-in progressestimate, which is based on the progress inside a G-code file. In some cases,a better progress estimate can be calculated from the time elapsed and thetime remaining: P = elapsed / (elapsed + remaining). This option isparticularly useful forPrintTimeGenius users.  ",
"tags": ["progress","lcd","display"]
},

{
"id": "/plugins/webcamtab",
"url": "/plugins/webcamtab/",
"date": "2018-01-16 00:00:00 -0600",
"title": "WebcamTab",
"description": "Moves the webcam stream from Control tab to its own Webcam tab.",
"author": "Sven Lohrmann (original), Bryan J. Rentoul",
"content": "This plugin moves the webcam stream from the Control tab, to its own Webcam tab.Supports python2/3 and OctoPrint versions 1.3.0 to at least 1.8.0rc3.Version 0.3.0 is a complete rewrite, with hopes of being easier to maintain for future OctoPrint versions.",
"tags": ["webcam","tab","ui"]
},

{
"id": "/plugins/floatingnavbar",
"url": "/plugins/floatingnavbar/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-FloatingNavbar",
"description": "Make the navbar float/stick to the top of the page.",
"author": "jneilliii",
"content": "FloatingNavbarThis plugin simply makes the navbar float/stick to the top of the page while scrolling.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MQTT","NavBar"]
},

{
"id": "/plugins/mqttpublish",
"url": "/plugins/mqttpublish/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-MQTTPublish",
"description": "Add buttons to navbar to publish messages to MQTT server.",
"author": "jneilliii",
"content": "MQTT PublishThis plugin simply adds buttons to the navbar of OctoPrint to send configured MQTT commands to the MQTT server configured in the MQTT Plugin.ScreenshotsPrerequisitesInstall the MQTT plugin via the Plugin Manager or manually using this url:https://github.com/OctoPrint/OctoPrint-MQTT/archive/master.zipSettingsOnce the MQTT plugin and this plugin are installed, configure the MQTT plugin for connecting to your MQTT server.  Then in this plugin’s settings configure the topics/commands you want to publish to that server.  Topic: topic to publish command to.  Command: comand to send to topic.  Icon: icon class name from fontawesome.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MQTT","NavBar"]
},

{
"id": "/plugins/tasmota_mqtt",
"url": "/plugins/tasmota_mqtt/",
"date": "2018-01-17 00:00:00 -0600",
"title": "OctoPrint-TasmotaMQTT",
"description": "Plugin to control Tasmota devices via MQTT protocol.",
"author": "jneilliii",
"content": "Tasmota-MQTTThis plugin allows the control of Tasmota devices from within OctoPrint via MQTT commands.ScreenshotsPrerequisitesInstall the MQTT plugin via the Plugin Manager or manually using this url:https://github.com/OctoPrint/OctoPrint-MQTT/archive/master.zipSettings  Set the Full Topic settings to match your tasmota settings.  Use the Tasmota device’s topic in the Tasmota-MQTT Plugin settings for the individual relays.  For multiple relay devices enter the index number that matches your desired relay.  For single relay devices like the iTead Sonoff S20 Smart Socket, leave Relay # blank.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["tasmota","mqtt","power"]
},

{
"id": "/plugins/M117SpeechSynthesis",
"url": "/plugins/M117SpeechSynthesis/",
"date": "2018-01-18 00:00:00 -0600",
"title": "OctoPrint-M117SpeechSynthesis",
"description": "Plugin to speak aloud M117 gcode messages via the web ui.",
"author": "jneilliii",
"content": "M117 Speech SynthesisThis plugin utilizes _plugin_manager.send_plugin_message and onDataUpdaterPluginMessage to communicate between server and client.Note: this plugin does NOT work with files on the SD card. Requires modern day browsers that support Speech Synthesis, check compatibility table here.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M117","gcode","speech","voice","accessibility"]
},

{
"id": "/plugins/taborder",
"url": "/plugins/taborder/",
"date": "2018-01-22 00:00:00 -0600",
"title": "OctoPrint-TabOrder",
"description": "Simple plugin to allow the ordering of tabs within OctoPrint.",
"author": "jneilliii",
"content": "Tab OrderThis plugin allows for controlling the order of tabs within the OctoPrint web interface. After changes are made you must do a force reload by holding down ctrl key while pressing the refresh button in your browser.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["ui","tab","sort"]
},

{
"id": "/plugins/atxpihat",
"url": "/plugins/atxpihat/",
"date": "2018-01-25 00:00:00 -0600",
"title": "ATXPiHat",
"description": "Software support for the ATXPiHat",
"author": "Brian Anichowski",
"content": "Software support for the ATXPiHat expansion board.Read all about this board and it’s usage at baprojectworkshop.com. The installation instructions are located on my Github site. These need to be reviewed prior to installation of the plugin  Fully compatible with Octoprint 1.3.6 or greater.  Directly power the Raspberry Pi 3B, no more external power source.  ATX 24 Molex connector, no more cutting up the supply cables  Amperage support to handle 19 amps at 12v for heat bed and hot end  Screw connectors make easy connection to the main board, External Mosfet, etc  Direct 12v RGB LED support, can also be controlled by GCODE  Emergency power off (EPO)  Power On/Off monitoring  Visual indicator of the 12v supply being active and powering the external devices  12v monitored (RPM) cooling fan port  Upon fan failure it can be configured to automatically shuts the printer down  Auxiliary 5v support for external powered items  Monitoring of the 12v rail, for amperage and voltage  Automatic shutdown when an amperage threshold is reached. Meltdown protection  Switchable 12 or 5 v connector for controlling external items via GCODE",
"tags": ["psu","led","emergency","atx","fan","monitor","epo","control"]
},

{
"id": "/plugins/ESPurna_RGB",
"url": "/plugins/ESPurna_RGB/",
"date": "2018-01-30 00:00:00 -0600",
"title": "ESPurna RGB",
"description": "Control ESPurna RGB LED device wirelessly",
"author": "Imon Daneshmand",
"content": "OctoPrint plugin for controlling ESPurna RGB LED device via REST API over the network using M150 GCODE    M150: Set Status LED Color - Use R-U-B for R-G-B    M150 R255       ; Turn LED red    M150 R255 U127  ; Turn LED orange    M150            ; Turn LED off    M150 R U B      ; Turn LED white",
"tags": ["rgb","rgbw","rgbww","led","controller","espurna","wifi","wireless","network"]
},

{
"id": "/plugins/malyan_connection_fix",
"url": "/plugins/malyan_connection_fix/",
"date": "2018-02-07 00:00:00 -0600",
"title": "Malyan/Monoprice Connection Fix",
"description": "Fixes connection issues with Malyan/Monoprice printers",
"author": "Gina Häußge",
"content": "Due to some weird issue with some Malyan/Monoprice printers, the initial connection to the printer via theConnect button may fail. Only the second connection succeeds.This plugin is supposed to fix this by invoking a specific serial port opening sequence that has been foundto solve this problem. Note that due to the nature of this sequence this fix can’t work for OctoPrint installationson Windows and is therefore not supported for that OS.Printer models known to be affected by this and confirmed as issues resolved with this fix:  Turnigy Fabrikator II Mini (Malyan M100)  Monoprice Select Mini (Malyan M200)  Monoprice Mini Delta (Malyan ?)For more details please refer to this ticket on the OctoPrint issue tracker.",
"tags": ["monoprice","monoprice select mini","monoprice mini delta","malyan","malyan m100","malyan m200","turnigy","turnigy fabrikator 2","turnigy fabrikator ii","connection","fix"]
},

{
"id": "/plugins/CR10_Leveling",
"url": "/plugins/CR10_Leveling/",
"date": "2018-02-26 00:00:00 -0600",
"title": "Bed Leveling",
"description": "Adds bed leveling buttons to the controls tab",
"author": "lsellens, AvanOsch, electr0sheep",
"content": "This plugin adds buttons to apply heat to the bed and nozzle, and move theprinting head to each of the four corners of the bed, as well as the center ofthe bed.The coordinates and temperatures can all be customized in the plugin’s settings.",
"tags": ["ui","bed leveling"]
},

{
"id": "/plugins/octorant",
"url": "/plugins/octorant/",
"date": "2018-03-11 00:00:00 -0600",
"title": "OctoPrint-Octorant",
"description": "Discord plugin for OctoPrint",
"author": "Benjamin Chanudet",
"content": "OctoPrint-OctoRant 1.0.0OctoRant is a plugin allowing Octoprint to send notifications to a Discord channel via a webhook URL. When wanted it can directly send a snapshot to Discord (without needing third-party services)License : MITSetupInstall the pluginInstall via the bundled Plugin Manageror manually using this URL:https://github.com/bchanudet/OctoPrint-Octorant/archive/master.zipCreate the WebHook in DiscordNote : you need to have the permission “Manage WebHooks” to create or edit a WebHook in Discord.Once you got the WebHook URL, head over to the plugin configuration to finish the setup.ConfigurationThe plugin can be configured in the configuration panel, under the “Octorant” panel.Discord Settings  WebHook URL : please follow the Setup procedure to retrieve the URL of the WebHook.  Bot name : You can override the name you put on the WebHook description in Discord by a name. Useful if the webhook is not specific to Octorant and also used for other things.  Bot Avatar URL : You can also override the avatar us put in Discord for the WebHook. The URL needs to be globally accessible (it will be retrieved by Discord’s servers).In order for you to be sure these settings work, every time you change one of them, a test message will be sent to the corresponding Discord Channel. If you don’t receive it, something is most likely wrong!Message SettingsHere you can customize every message handled by Octorant.  Toggle the message : by unchecking the checkbox in front of the message title, you can disable the message. It won’t be sent to Discord.  Message : you can change the default content here. See the section Message format for more information.  Include snapshot : if you have a snapshot URL defined in the Octoprint settings, you can choose to upload a snapshot with the message to Discord.  Notify every XX% : specific to the printing progress message, this settings allows you to change the frequency of the notification :          10% means you’ll receive a message at 10%, 20%, 30%, 40% … 80%, 90% of the printing process.      5% means you’ll receive a message at 5%, 10%, 15%, 20% … 80%, 85%, 90%, 95% of the printing process.      etc…      Message formatMessages are regular Discord messages, which means you can use :  **markdown** format (see Discord Documentation)  :emoji: shortcuts to display emojis  @mentions to notify someoneSome events also support variables, here is a basic list :Printing process : started event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage locationPrinting process : failed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage locationPrinting process : done event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {time}: time needed for the print (in seconds)  {time_formatted} : same as {time}, but in a human-readable format (HH:MM:SS)Printing process : failed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting process : paused event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting process : resumed event :  {name} : file’s name that’s being printed  {path} : file’s path within its origin location  {origin} : the origin storage location  {position}: position of the hotendPrinting progress event :  {progress} : progress in % of the print.Printer state : error  {error} : The error receivedFor more reference, you can go to the Octoprint documentation on EventsIssues and HelpIf you encounter any trouble don’t hesitate to open an issue. I’ll gladly do my best to help you setup this plugin.This is my first project ever in Python, so if you happen to be more experimented and you noticed some bad things, feel free to tell me!",
"tags": ["discord","notifications","snapshots"]
},

{
"id": "/plugins/octolapse",
"url": "/plugins/octolapse/",
"date": "2018-03-24 00:00:00 -0500",
"title": "Octolapse",
"description": "Create a stabilized timelapse of your 3D prints.  Highly customizable, loads of presets, lots of fun.  Requires OctoPrint 1.3.9 or higher.  Python 3 users MUST install the Python 3 Development package before installation.",
"author": "Brad Hochgesang",
"content": "Octolapse                                        The New and Improved Octolapse Tab            Octolapse is provided without warranties of any kind.  By installing Octolapse you agree to accept all liability for any damage caused directly or indirectly by Octolapse.  Use caution, and never leave your printer unattended.What Octolapse DoesOctolapse is designed to make stabilized timelapses of your prints with as little hassle as possible, and it’s extremely configurable.  Now you can create a silky smooth timelapse without a custom camera mount, no GCode customizations required.    \t                        A Timelapse of a Double Spiral Vase Made with Octolapse            Octolapse moves the print bed and extruder into position before taking each snapshot, giving you a crisp image in every frame.  Snapshots can be taken at each layer change, at specific height increments, after a period of time has elapsed, or when certain GCodes are detected.Important:  Octolapse requires OctoPrint v1.3.9 or higher, and some features require OctoPrint v1.3.10rc1 or above.  You can check your OctoPrint version by looking in the lower left hand corner of your OctoPrint server home page.  Python 3 users must install the Python 3 Development Package. See this guide for details.Getting StartedBe sure to read the Getting Started guide on the Octolapse Wiki.  This will save you a lot of hassle and allow you to unlock some of the best features of Octolapse.    \t                        View the Getting Started Guide Companion Video            Recent ChangesA lot has changed since the last release (v0.3.4).  Over 18 months of development and over 600 commits went into this newest version.  If you’ve had trouble installing or running Octolapse in the past, you just might want to try it again!I have been focusing on 3 items for V0.4:  Print Quality - This is my #1 concern, and a ton of effort has gone into reducing artifacts.  Print Time - Lots of folks have complained about the print time impact of Octolapse, and this is a totally legitimate concern.  This has been handled by adding new Smart triggers that minimize travel distance.  In fact, the new Smart - Snap To Print trigger completely eliminates travel moves from the stabilization!  Simplify Setup - Prior to V0.4, Octolapse was much more difficult to configure, especially for beginners.  Incorrect setup leads to poor print quality as well as extreme frustration.  This sad situation has been improved (but not completely solved) in several ways, including automatic slicer settings extraction and profile import/export/update functionality.Highlights of V0.4Python 3 and Octoprint 1.4.0 SupportOctolapse now runs on the newest versions of Python and is still backwards compatible with Python 2.7.  Additionally, Octolapse runs on the newest version of OctoPrint.Automatic Slicer Settings DetectionOctolapse can now extract all the required slicer settings directly from your GCode file.  You no longer need to copy your slicer settings into Octolapse before every print.  This is my favorite new feature!                                        Automatic Slicer Settings Configuration            Smart TriggersThe new smart triggers read your entire Gcode file before starting a print, giving them a lot more information to make better decisions.  They automatically detect print features and prefer to take snapshots over infill, wipe towers, or interior perimeters, and they avoid taking snapshots (where possible) over exterior perimeters.  They also try to start snapshots as close to the stabilization point as possible, reducing travel.  This all adds up to improvements in quality and a reduction in print time.  Plus, you will get to see a preview of your timelapse before your print starts.  Octolapse will inform you of potential problems and will help you to fix them.  If you don’t like what you see, you can cancel the print and change your settings, which will save you time and effort.                                        Smart Trigger Snapshot Plan Preview            Improved InterfaceThanks to UX advice from Derek73, the Octolapse tab has been greatly improved.  Highlights include:  a larger snapshot preview, shortcuts to the Octolapse settings pages, video and image file browsers, rendering progress, unfinished rendering recovery, new and improved informational panels, and a more intuitive design.                                        Improved UX            Import/Export/Download and Automatically Update SettingsOctolapse now has its own profile repository!  Access a library of pre-configured profiles and download, customize, and share your settings with the world!  You can export and import individual profiles or all of your Octolapse settings.  If newer settings are available from the repository, Octolapse will notify you and can automatically update any of the pre-configured profiles.                                        Import Profiles from the Repository            Enhanced Rendering CapabilitiesNow you can see detailed rendering progress and retry or alter renderings that never finished.  I added beta support for the H.265 codec (most Raspberry Pis don’t have the memory for this though).  I added new rendering overlay tokens, text outlining, and a default font for simplified setup.                                        Renderings in Process            Browse Videos and Image ArchivesI’ve finally added native file browsers to Octolapse!  Now you can download, sort, or delete timelapses, all without leaving the Octolapse tab.  If you enable the new archive images feature, you can also download snapshot images or re-render them using different settings.  I’ve even added the ability to upload images into Octolapse!                                        Videos and Images Browser            Better Camera ControlsOctolapse already included the ability to control camera settings like focus, exposure, and white balance.  In the new version, Octolapse detects your camera’s capabilities and renders a control page dynamically.  Octolapse even has enhanced custom control pages for some cameras (like the Raspberry Pi cameras and many Logitech models).  You can now watch your image change in real time as you adjust the settings.  You can even stabilize your extruder to make adjusting the focus a snap!  Requires mjpg-streamer.  Not compatible with Octoprint Anywhere or The Spaghetti Detective.                                        Custom Image Controls            Integrated Help SystemOctolapse now provides documentation for every single setting, and it’s all built-in.  Get your questions answered quickly by clicking on the help links (blue question marks).  Many error popups now also have a help button explaining what the problem is and how to fix it.  I’ve also added versioneer, including a link within the Octolapse tab that points directly to the release notes or commit specific to the version you have installed.    Help with Common Print Start Issues    Automatic Detection of Print Quality Issues, with Help    Integrated Help LinksImproved Camera Scripts and TestsBefore and After snapshot Gcode scripts allow you to run custom Gcode before and/or after every snapshot.  A new After Print Ends script is now available.  All bash/bat scripts now have test buttons making it much easier to test your custom scripts.    Additional Camera Scripts and TestsNew @OCTOLAPSE CommandsNow you can use Gcode to tell Octolapse when to take snapshots.  Prevent Octolapse from taking snapshots within your start/end Gcode with the new @OCTOLAPSE STOP-SNAPSHOTS and @OCTOLAPSE START-SNAPSHOTS commands.  You can also use the new @OCTOLAPSE TAKE-SNAPSHOT command to trigger a snapshot when using one of the GCode triggers.Alpha Support for Multi-Material/Multi-Extruder PrintersOctolapse now supports per-extruder/material slicer settings and offsets.  It’s even compatible with the Automatic Slicer Settings Detection feature.  This is an Alpha feature, so it is probably a bit rough since I don’t actually own a multi-extruder printer.Better LoggingI’ve added a custom module based logging system that should help with debugging.  You can also clear and download logs right from your Logging profile.  Exceptions are now logged automatically.  This enhancement is really for me, but I thought I’d mention it here.More Efficient Parsing and ProcessingIn order to make the new Smart triggers as fast as possible and to reduce the CPU load, I’ve created a new GCode parser and position processor entirely in C++.  This has increased performance by several orders of magnitude, especially when using the new Smart triggers.Faster SnapshotsOctolapse now captures snapshots more quickly and performs all image manipulations on a background thread.  This reduces print time and improves quality.G2/G3 (Arc) SupportOctolapse now supports Arc commands.  Now you can use the Arc Welder plugin with Octolapse.Support Octolapse DevelopmentPlease consider supporting my work by becoming a patron, a Github Sponsor, or by sending me beer money via PayPal.  Almost all of the donations go towards offsetting the cost of development, which is substantial. Plus, it always makes my day!  If you cannot afford to leave a tip or just don’t want to, that is fine too! Octolapse is free and open source after all.More Octolapses    \t                        A user-generated compilation created by WildRose Builds.  Support this channel, and please subscribe!                \t                        The 'Fillenium Malcon'                \t                        The Moon - Animated X Axis                \t                        The Obligatory Benchy            History of OctolapseI got the idea for Octolapse when I attempted to manually make a stabilized timelapse by hand-editing my GCode files.  To accomplish this I used the excellent and simple GCode System Commands plugin.  The timelapse worked great, but it required a lot of effort which I didn’t want to put in every time.  I received several requests for instructions on how to create a stabilized timelapse, so I decided to give plugin development a go.  At the time I had never written any OctoPrint plugins (or programmed Python or Knockout or anything open source), but I figured I could contribute something good to the community.On January 20, 2018, I released the  alpha version of Octolapse, and on March 24, 2018, I released the plugin on the OctoPrint Plugin Repository.  Octolapse grew up pretty quickly, and on November 15, 2018, I released V0.3.4.  Over a year and a half and 640+ commits later, I finally completed V0.4.0, which is a major rewrite of the software and includes all of the features discussed above.  It took a long time to get here.Octolapse is my “thank you” to all of the makers out there who have contributed time and effort to this hobby.  I hope that Octolapse can spread information about the 3D printing hobby by attracting a few new users.Report Problems and Suggest ImprovementsIf you think you have found a bug in Octolapse, please see this guide for reporting issues.  Maybe you have an idea for a cool new feature?  Find out how to let me know about your idea here.LicenseView the Octolapse license.Copyright (C) 2020  Brad Hochgesang - FormerLurker@pm.me",
"tags": ["timelapse"]
},

{
"id": "/plugins/DisplayLayerProgress",
"url": "/plugins/DisplayLayerProgress/",
"date": "2018-04-09 00:00:00 -0500",
"title": "DisplayLayerProgress",
"description": "Displays the Layer, Progress and other data on \"Printer-Display\", \"NavBar\", \"BrowserTab-Title\" and in the Browser as a simulated \"Printer-Display\"",
"author": "Olli",
"content": "A OctoPrint-Plugin that sends the current Layer-Informations, the Progress and other data of a print via M117 command to the printer-display and also to the top navigation bar.A new feature is the “Desktop Printer-Display”, which shows all M117 messages in a Desktop PopUp.It shows the progress, estimatedEndTime, printTimeLeft, currentLayer, totalLayerCount, last/average layerDuration, currentHeight, totalHeight, feedrate and fanspeed:  Printer Display: 50% L=60/120 H=23mm/47mm  NavBar: Layer: 60 / 120 Height: 23mm of 47mm  Browser TabTitle: 12% end: 19:32Output pattern is adjustable. Please visit the homepage for more informations!Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)ATTENTION:  The layer information works only when the slicer adds “layer-indicator” to the g-code (CURA-Example as comments like ;LAYER:10). Then these indicators are parsed via a regular-expression.  Currently supported slicers: CURA, Simplify3D, KISSlicer. You can add your own layer-expressions in Plugin-Settings.If you want to use “slic3r”, see Enhancement #8  Sometimes there is a “Post Processing script” that deletes all comments (e.g. see Issue #33)  You need to upload your G-Code after installation of the plugin again (if you want to reuse already stored models in OctoPrint), because while uploading the G-Code is modfied  The total height “calculation” can be done in two ways: 1)the max Z-Value in the G-Code, 2) max Z-Value with extrusion in this height  The height/layer information is sometimes not matching with G-Code Viewer, because the viewer did a lot of “magic” (e.g. add extrusion diameter to height)For implementation details please visit the homepage.",
"tags": ["display","lcd","printer","progress","layer"]
},

{
"id": "/plugins/bedlevelvisualizer",
"url": "/plugins/bedlevelvisualizer/",
"date": "2018-04-14 00:00:00 -0500",
"title": "Bed Level Visualizer",
"description": "Displays 3D mesh of bed topography report.",
"author": "jneilliii",
"content": "Bed VisualizerThis plugin utilizes Plotly js library to render a 3D surface of the bed’s reported mesh on a tab within OctoPrint. It converts thisSend: G29 TRecv: echo:Home XYZ firstRecv:Recv: Bed Topography Report:Recv:Recv: (0,9)                                                                   (9,9)Recv: (30,270)                                                                (270,270)Recv:  -0.452   -0.319   -0.237    0.287    0.140    0.139    0.136    0.317    0.247    0.247Recv:Recv:  -0.195   -0.273   -0.180   -0.178    0.014    0.018    0.111    0.214    0.210    0.210Recv:Recv:  -0.270   -0.252   -0.151   -0.119    0.009    0.016    0.072    0.249    0.224    0.224Recv:Recv:  -0.307   -0.205   -0.163   -0.124   -0.094   -0.002    0.036    0.151    0.174    0.196Recv:Recv:  -0.186   -0.130   -0.152   -0.105   -0.144   -0.007    0.044    0.093    0.181    0.270Recv:Recv:  -0.010   -0.077   -0.073    0.155   -0.006   -0.133    0.110    0.046    0.109    0.173Recv:Recv:   0.059   -0.094   -0.072   -0.002   -0.006    0.037    0.050    0.065    0.124    0.184Recv:Recv:  -0.057   -0.028    0.039    0.028    0.024    0.005    0.102    0.165    0.176    0.187Recv:Recv:   0.067    0.015    0.096    0.117    0.001    0.079    0.138    0.346    0.185    0.185Recv:Recv: [ 0.071]   0.014    0.061   -0.127    0.167    0.040    0.098    0.195    0.194    0.194Recv: (30,30)                                                                    (270,30)Recv: (0,0)                                                                     (9,0)Recv: ok P15 B3into thisSettingsKnown Issues  Install will fail silently in Python 3 due to missing system dependencies. You may have to SSH to your pi and run the command sudo apt install libatlas3-base to get the plugin to load.  System Command Editor and Custom Control Editor plugins have a known issue here and here where your customizations for those plugins get wiped when used in conjunction with Bed Level Visualizer and a few other plugins. To avoid this from happening to you disable Bed Level Visualizer and after restarting OctoPrint configure your customizations in those plugins and save. Immediately disable those plugins and re-enable Bed Level Visualizer restart OctoPrint and Reload. Your customizations to controls and the system menu will still remain and the bug that exists in those plugins will be prevented from clearing your customizations. I highly recommend you take regular backups as well.  Since version 0.1.3 there is a python dependency on numpy. As a result; if you don’t already have numpy the install can take in excess of 30 minutes to complete on a pi. Just be patient and let it run and eventually the plugin install will finish.  If your device have less than 512MB of ram your numpy installation will most likely fail. See #141 for solution.  If you have Marlin’s Auto Temperature Reporting Feature enabled you will want to have M155 S30 and M155 S3 surrounding your G29 command, see settings screenshot, otherwise the collected data will be tainted.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["bed level","mesh","tab","graph"]
},

{
"id": "/plugins/DeleteAfterPrint",
"url": "/plugins/DeleteAfterPrint/",
"date": "2018-04-20 00:00:00 -0500",
"title": "DeleteMoveAfterPrint",
"description": "Deletes/Move automaticaly the Print-Model",
"author": "Olli",
"content": "Delete/Move automatically the Print-Model:  after successful print. If the print fails, the deletion is not executed!  after predefined daysSupport my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)DetailsThe user can enable automatic deletion/movement after each print by using a checkbox in the sidebar.If you want to delete/move files after a couple of days, use the Plugin-Settings. Deletion/Movement is done while opening OctoPrint.For implementation details, please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/opitemp",
"url": "/plugins/opitemp/",
"date": "2018-04-23 00:00:00 -0500",
"title": "OpiTemp",
"description": "Orange Pi temperature in the navbar.",
"author": "hashashin",
"content": "Simple plugin to show Orange Pi (running armbian) SOC temperature in the navbar.Some code inspired by stolen from @ntoff OctoPrint-NavbarTemp fork.",
"tags": ["ui"]
},

{
"id": "/plugins/ipOnConnect",
"url": "/plugins/ipOnConnect/",
"date": "2018-05-04 00:00:00 -0500",
"title": "OctoPrint-ipOnConnect",
"description": "Simple plugin to display the ip address of connected OctoPrint instance on the control panel using M117 command.",
"author": "jneilliii",
"content": "ipOnConnectSimple plugin to display the ip address of connected OctoPrint instance on the control panel using M117 command. Featured by Prusa Research and bundled with their OctoPrint image.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["ip"]
},

{
"id": "/plugins/multicam",
"url": "/plugins/multicam/",
"date": "2018-05-09 00:00:00 -0500",
"title": "MultiCam",
"description": "Extends the Control tab of OctoPrint, allowing the ability to switch between multiple webcam feeds.",
"author": "Michael Morris",
"content": "It is recommended to setup a second RPi (potentially with MotionEyeOS) to setup webcams from. Attaching more than one webcam to your octoprint device could result in high proccess use causing issues with your prints. You may also have to invest in a usb hub to power your webcams as RPi’s tend to have low votage issues when they are plugged in directly to the Rpi. This Link has a good list of USB hubs that are support by Raspberry.Future updates will include the more options to show different types of streams, as well as the abilitly to show more than one stream at a time.",
"tags": ["webcam","display","ui","control"]
},

{
"id": "/plugins/dropbox_timelapse",
"url": "/plugins/dropbox_timelapse/",
"date": "2018-05-10 00:00:00 -0500",
"title": "OctoPrint-Dropbox-Timelapse",
"description": "Automatically upload rendered timelapses to Dropbox. Can also delete after upload to save space on the Raspberry Pi SD Card.",
"author": "Justin Slay, Sam Kemp, Brad Hochgesang",
"content": "ConfigurationYou must provide an API Token to be able to upload rendered timelapses to Dropbox.To do this, create a Dropbox Appselect Dropbox API -&gt; App Folder -&gt; Provide Folder Name.Once the app is created, scroll down to the OAuth 2 section, and click Generate Token. Paste the token into thesettings pane.",
"tags": ["timelapse","dropbox"]
},

{
"id": "/plugins/discordremote",
"url": "/plugins/discordremote/",
"date": "2018-06-04 00:00:00 -0500",
"title": "OctoPrint-DiscordRemote",
"description": "Discord bot for OctoPrint",
"author": "Cameron Cross, Benjamin Chanudet",
"content": "DiscordRemoteDiscordRemote is a plugin that allows OctoPrint to be interacted with using a Discord bot.The bot is able to post messages to a discord channel based on events, and can include screenshots.The bot also listens on the channel, for certain commands, will execute actions on the machine.A list of supported commands is available by sending a “/help” message.It is currently capable of:  Starting a print.  Aborting a print.  Listing the files.  Taking a snapshot with the configured webcam.  Connecting and Disconnecting to the printer.Important: There are no permissions or controls as to who can send commands to the bot.This MUST be done by the owner of the Discord channel.",
"tags": ["discord","notifications","snapshots","remote","control"]
},

{
"id": "/plugins/auth_bookedscheduler",
"url": "/plugins/auth_bookedscheduler/",
"date": "2018-06-05 00:00:00 -0500",
"title": "Auth Booked Scheduler",
"description": "Authentication via Booked Scheduler",
"author": "Luca Zimmermann",
"content": "Authentication via a Booked Scheduler Instance.",
"tags": ["Authentication"]
},

{
"id": "/plugins/sidebartempgraph",
"url": "/plugins/sidebartempgraph/",
"date": "2018-06-05 00:00:00 -0500",
"title": "OctoPrint-SideBarTempGraph",
"description": "Plugin to display temperature graph in the side bar.",
"author": "jneilliii",
"content": "Sidebar Temp GraphSmall plugin that adds a temperature graph to the side bar.Note: To change the location of the graph within the side bar install OctoPrint-SidebarOrder plugin, use plugin_sidebartempgraph for the sidebar identifier.ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["sidebar","side bar","temperature","graph"]
},

{
"id": "/plugins/cancelobject",
"url": "/plugins/cancelobject/",
"date": "2018-06-08 00:00:00 -0500",
"title": "OctoPrint-Cancelobject",
"description": "Cancel single objects during a print based on gcode comment lines",
"author": "Paul Paukstelis",
"content": "This plugin allows the user cancel single objects during a print whileallowing the remaining objects to print normally. Instructions for use with compatible slicersis provided on the plugin’s GitHub Homepage.",
"tags": ["server","control","navbar","ui"]
},

{
"id": "/plugins/shutdownprinter",
"url": "/plugins/shutdownprinter/",
"date": "2018-06-18 00:00:00 -0500",
"title": "ShutdownPrinter",
"description": "Plugin for shutdown printer after finishing a print job",
"author": "devildant",
"content": "This OctoPrint plugin enables the system to be automatically shut down printer after a print is finished (works with tplink plugs and OctoPrint-TPLinkSmartplug plugins).The user can enable shutdown print for each print by using a checkbox in the sidebar.This plugin was inspired by the work of “Nicanor Romero Venier” on the plugin: AutomaticShutdown (https://plugins.octoprint.org/plugins/automaticshutdown/)Once the print is finished, a popup will appear with a countdown which lets the user abort the shutdown.",
"tags": ["shutdown","shutdown printer","tplink"]
},

{
"id": "/plugins/excluderegion",
"url": "/plugins/excluderegion/",
"date": "2018-07-05 00:00:00 -0500",
"title": "Exclude Region",
"description": "Adds the ability to prevent printing within rectangular or circular regions of the currently active gcode file",
"author": "Brad Fisher",
"content": "Imagine running a long running, multi-part print job only to have one of the parts fail half-waythrough.  If you allow the job to continue, that big mess of spaghetti-like extrusions within thefailed area are likely to get stuck to other pieces and lead to additional failures or blemisheson the other parts (not to mention wasted filament) as the print goes on.The intent of this plugin is to provide a means to salvage multi-part prints where one (or more)of the parts has broken loose from the build plate or has otherwise become a worthless piece offailure.  Instead of cancelling an entire job when only a portion is messed up, use this pluginto instruct OctoPrint to ignore any gcode commands executed within the area around the failure.You can dynamically define rectangular or circular exclusion regions for the currently selectedgcode file through OctoPrint’s integrated gcode viewer, and those regions may be added or modifiedbefore, during, or even after printing.Some things to note about this plugin  It can only affect printing of files managed by OctoPrint, and can NOT exclude regions of filesbeing printed from your printer’s SD card.  Use the exclude feature at your own risk.  It is recommended to only use it when a portion ofyour print has already failed.  When defining regions, try to fully enclose all portions of the failed part that would otherwisestill print.  You will get unpredictable results if you only exclude a portion of a part, and anyoverhangs on higher layers that extend outside an excluded region will have nothing to supportthem.  This plugin makes several assumptions when filtering the gcode, some of which may not be correctfor your printer’s firmware.  It was developed with Marlin in mind, so should work reasonably wellwith firmware that replicates Marlin’s behavior.  The plugin only supports a single hotend at this time.  It is not recommended to attempt to useit on a gcode file with instructions for multiple hotends.  Users of TouchUI will not be able to create or modify exclude regions.  Any defined regions willbe displayed, but they cannot currently be manipulated on a touch device.Get HelpIf you experience issues with this plugin please use the issue tracker at the plugin’s Homepagelinked on the right.",
"tags": ["gcode","exclude","region","ui"]
},

{
"id": "/plugins/gcodestatEstimator",
"url": "/plugins/gcodestatEstimator/",
"date": "2018-07-05 00:00:00 -0500",
"title": "GcodeStat Estimator",
"description": "uses data put in to g-code by gcodestat to estimate time to finish print",
"author": "Bogdan Kecman",
"content": "This plugin will read the M117 data put into G-Code by gcodestat ( https://github.com/arhi/gcodestat ) in formatM117 ###% Remaining ( HH:MM:SS )and use this data for displaying proper progress reportrequires OctoPrint 1.3.9",
"tags": ["helper","estimator","estimation","time","print time"]
},

{
"id": "/plugins/domoticz",
"url": "/plugins/domoticz/",
"date": "2018-07-07 00:00:00 -0500",
"title": "OctoPrint-Domoticz",
"description": "Simple plugin to control light switches via Domoticz server.",
"author": "jneilliii",
"content": "This plugin is to control switches through Domoticz via web calls.ConfigurationOnce installed go into settings and enter the connection details for your Domoticz server and switch index. Adjust additional settings as needed.Settings Explained  IP:PORT          The ip and port of Domoticz server.        Index          Index number reprensenting the switch to control.        Icon          Icon class name from the fontawesome library.        Label          Title attribute on icon that shows on mouseover.        Username          Username used to connect to web interface. If authentication is not configured on your Domoticz server leave this blank.        Password          Password used to connect to web interface. If authentication is not configured on your Domoticz server leave this blank.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off switch.  Syntax for gcode command is M80/M81 followed by IP:PORT and index.  For example if your Domoticz server is 192.168.1.2:8080 and switch index is 1 your gcode command would be M80 192.168.1.2:8080 1        postConnect          Automatically connect to printer after switch is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the switch.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the switch.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["domoticz","smartplug","power","switch"]
},

{
"id": "/plugins/PrintTimeGenius",
"url": "/plugins/PrintTimeGenius/",
"date": "2018-07-12 00:00:00 -0500",
"title": "OctoPrint-PrintTimeGenius",
"description": "Use a gcode pre-analysis to provide better print time estimation",
"author": "Eyal",
"content": "Generate highly accurate gcode printing time estimations using advanced gcode analyzers combined with the printing history.PrintTimeGenius provides estimates that are accurate to within just minutes, sometimes even seconds!  It can even account for the time to heat up the nozzle/bed.  It uses an algorithm to calculate the print time remaining while running so that even if the original estimate was wrong, it will still converge on the correct one.PrintTimeGenius uses the estimates embedded in your gcode, put there by slic3r or cura.  It also runs a Marlin or Smoothieware simulation to provide line-by-line accuracy, often accurate within 0.2% of actual print time.",
"tags": ["helper","estimator","estimation","time","print time","analysis"]
},

{
"id": "/plugins/layerdisplay",
"url": "/plugins/layerdisplay/",
"date": "2018-07-15 00:00:00 -0500",
"title": "LayerDisplay",
"description": "Displays the current layer and total layers for a print job.",
"author": "Matt Thompson",
"content": "LayerDisplayLayerDisplay displays what layer a print job is on and how many layers are in that job.  Does not require special GCode comments. LayerDisplay analyzes the GCode before the a print starts to figure out where layer changes happen.  LayerDisplay does not work when printing from the SD card.Get HelpVisit the issues section of GitHub if you experience an issue or have a question or suggestion.",
"tags": ["layer","display","progress"]
},

{
"id": "/plugins/bedlevelingwizard",
"url": "/plugins/bedlevelingwizard/",
"date": "2018-07-16 00:00:00 -0500",
"title": "OctoPrint-BedLevelingWizard",
"description": "Plugin to aid in the process of manually leveling your bed.",
"author": "jneilliii",
"content": "Bed Leveling WizardThis plugin mimcs the Simplify3D Bed Leveling Wizard process. Configure default settings in OctoPrint settings.  When ready to level your bed press Start on the plugin’s sidebar panel and adjust that point’s screw.  Press Next and then adjust that point’s screw, and repeat until finished.ScreenshotsSettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["manual bed leveling","bed leveling"]
},

{
"id": "/plugins/statefulsidebar",
"url": "/plugins/statefulsidebar/",
"date": "2018-07-16 00:00:00 -0500",
"title": "Stateful Sidebar",
"description": "Plugin that monitors and stores the state of sidebar collapsed panels and restores that state upon next visit to OctoPrint.",
"author": "jneilliii",
"content": "Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Note:  Does not work with the Connection panel, as it’s state is overridden by OctoPrint.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Sidebar","Collapsed","Stateful"]
},

{
"id": "/plugins/MultipleUpload",
"url": "/plugins/MultipleUpload/",
"date": "2018-07-17 00:00:00 -0500",
"title": "OctoPrint-MultipleUpload",
"description": "Allow uploading multiple files at once",
"author": "Eyal",
"content": "This plugin allows you to upload multiple files at once.  You can select multiple files like you normally do on your computer: click and drag, shift-click, etc.The progress bar might look weird during the uploading.  It’s just a cosmetic issue; you can ignore it.",
"tags": ["multiple","upload","file upload"]
},

{
"id": "/plugins/rtmpstreamer",
"url": "/plugins/rtmpstreamer/",
"date": "2018-08-13 00:00:00 -0500",
"title": "OctoPrint-RTMPStreamer",
"description": "Plugin that reencodes the mjpg stream provided by octopi/mjpgstreamer/yawcam and posts to any RTMP stream server (ie Twitch) and adds a tab that will allow for wathing configured stream assuming there is a webpage url that allows that type of connection.",
"author": "jneilliii",
"content": "RTMP StreamerPlugin that adds a tab to OctoPrint for viewing, starting, and stopping a re-encoded stream to any RTMP server. Only tested with Twitch.Notes:  Plugin requires that OctoPrint’s webcam stream uses a full url path including the ip address, ie http://192.168.1.2/webcam/?action=stream  Only tested streaming to Twitch from a Pi3.  Plugin does not provide a streaming application, it just re-encodes the mjpg stream (included with ocotpi) to a flv stream and transmits to configured RTMP server url.  Although resolution is configurable in the plugin, the mjpg input stream being re-encoded may have a lower resolution and therefore not really be as high as you set it in the plugin settings.ScreenshotsPrerequisitesIn order to stream please follow the instructions here.  If you are just wanting to watch a stream enter the view url in settings, no other prerequisites are required.SettingsOnce the prerequisites are met and the test command is successfull enter the resolution, stream url, and view url in the RTMP Streamer settings.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Twitch","Live Stream","RTMP"]
},

{
"id": "/plugins/klipper",
"url": "/plugins/klipper/",
"date": "2018-08-21 00:00:00 -0500",
"title": "OctoKlipper",
"description": "A plugin for a better integration of Klipper into OctoPrint.",
"author": "thelastWallE, Alice Weigt",
"content": "OctoKlipper assists in configuring, controlling and monitoring the Klipper 3D-printer firmware.It provides the following functions:  Simplified connection dialog.  Buttons for restarting Klippers host and MCU processes.  User definable macro buttons that let you execute custom GCODE and Klipper commands.  An assisted bed leveling wizard with user definable probe points to simplify manual bed leveling.  A dialog for Klippers PID Tuning.  A dialog to set a coordinate offset for future GCODE move commands.  A log displaying only Klipper messages.  A basic configuration editor to configure Klipper directly through your browser.  A performance graph displaying key parameters extracted from the Klipper logs, helpful when debugging performance issues.Get HelpIf you experience issues with this plugin please use the issue tracker at the plugins github linked on the right.",
"tags": ["klipper","firmware","control","monitor"]
},

{
"id": "/plugins/filament_sensor_ng",
"url": "/plugins/filament_sensor_ng/",
"date": "2018-09-17 00:00:00 -0500",
"title": "Filament Sensor NG",
"description": "A filament monitor that pauses the print when your filament runs out and lets you restart it.",
"author": "Red_M",
"content": "Pause printing when the 3D printer runs out of filament.Designed as an upgrade of the Filament Sensor Reloaded plugin by kontakt.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/ProgressBasedOnTime",
"url": "/plugins/ProgressBasedOnTime/",
"date": "2018-09-18 00:00:00 -0500",
"title": "OctoPrint-ProgressBasedOnTime",
"description": "Replace file based progression by time based progression",
"author": "Celogeek",
"content": "This plugin will change the way octoprint send back progress information to the plugins and apps.Octoprint send progress information based on file progression.This plugin will send progress information based on the time left to print.It will apply change for all plugin and apps that display progression information. It keep sending file progress to the estimators.I suggest to associate those plugins:  Print Time Genius (https://plugins.octoprint.org/plugins/PrintTimeGenius/)  DetailedProgress (https://plugins.octoprint.org/plugins/detailedprogress/).",
"tags": ["progress","analysis","estimation","estimator","print time","time"]
},

{
"id": "/plugins/m73etaoverride",
"url": "/plugins/m73etaoverride/",
"date": "2018-09-18 00:00:00 -0500",
"title": "M73 ETA Override",
"description": "Plugin that overrides OctoPrint ETA to values from last M73 gcode sent to the printer",
"author": "Jakub Furman, Gaston Dombiak",
"content": "AboutPrusaSlicer is able to calculate print estimates very accurately. Those estimates get injected into generated gcode as M73 gcode commands. This plugin reads the injected information to override what OctoPrint uses as default to calculate estimates. Improved estimates are displayed in OctoPrint, your printer display and in your favorite OctoPrint client.This plugin will also work with other slicers that inject M73 gcode commands while slicing your STL files to produce gcode.FirmwarePrusa printers will display M73 estimates without any modifications. Printers that run on Marlin firmware might require their firmware to be properly configured to display M73 ETA on the printer display. If you are using Marlin 2.0.x then you will need to:  Uncomment #define SHOW_REMAINING_TIME in Configuration_adv.h  Uncomment #define USE_M73_REMAINING_TIME in Configuration_adv.hGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["progress","eta","estimation","m73"]
},

{
"id": "/plugins/wemoswitch",
"url": "/plugins/wemoswitch/",
"date": "2018-09-18 00:00:00 -0500",
"title": "OctoPrint-WemoSwitch",
"description": "Plugin to control Belkin Wemo devices from OctoPrint web interface.",
"author": "jneilliii",
"content": "Wemo SwitchThis plugin allows for the control of Belkin Wemo devices via navbar buttons and gcode commands.ScreenshotsSettingsOnce installed go into settings and enter the name of your wemo device. Adjust additional settings as needed.For up to date details on settings please see the plugin’s Homepage.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Belkin","Wemo","Smartplug","Power"]
},

{
"id": "/plugins/kronos_data_collector",
"url": "/plugins/kronos_data_collector/",
"date": "2018-09-26 00:00:00 -0500",
"title": "Project Kronos Data Collector",
"description": "Help build the Project Kronos print-failure autodetection neural network",
"author": "Jacob Paniagua",
"content": "Project KronosProject Kronos is an effort to create a webcam-based Neural Network to classify snapshots from a 3D Printer as “Failed” or “Successful”.This will be implemented in real-time as an Octoprint plugin to automatically pause the printer and alert the user of the potential error.The Project Kronos Data CollectorAs you may know, training a neural network requires a massive amount of data to create a complete model that can accurately classify an input.In this case, Project Kronos will need thousands, possibly hundreds of thousands, of images to train the model with.While there are plenty of timelapses and succesful print photos available on the internet, it’s very hard to find any failed prints.The point of this plugin is to allow users to automatically upload images and timelapses of their prints in the background, helping to create Project Kronos.Everything is done in the background, never bothering the user with pop-ups or the like. It can, of course, be easily disabled within the plugin settings.",
"tags": ["dataset","data","Kronos","neural","network"]
},

{
"id": "/plugins/OctoAutoremote",
"url": "/plugins/OctoAutoremote/",
"date": "2018-09-28 00:00:00 -0500",
"title": "OctoPrint_AutoRemote",
"description": "A quick Autoremote/Tasker plugin for OctoPrint",
"author": "Craig Trunzo",
"content": "OctoAutoRemoteA simple plugin to send messages to the Android app AutoRemote for use in Tasker by JoaoMGCDSetupInstall via the bundled Plugin Managervia this URL:https://github.com/trunzoc/Octoprint_Autoremote/archive/master.zipConfiguration  If you have not already done so, install AutoRemote on your Android phone.  Register or log in to AutoRemote      click the Phone icon.            click the IFTTT icon. We aren’t using IFTTT, but this is the easiest way to get your key and create a “Sender”.            A “Register IFTTT” window will open.  Type anything you want, I just used “OctoAutoRemote”, and hit OK.            Enter the same thing you entered for step 5 here then hit OK.            AutoRemote will ask to generate a URL that has your personal key. Hit OK. Choose the delivery method of your choice and send it. Something on your PC like email is preferable so you can copy/paste. If it does not ask to shar eit automatically, long-press the device that was created and choose “Generate IFTTT URL”        The URL sent will be something like https://autoremotejoaomgcd.appspot.com/sendmessage?key={a rediculously long key that identifies you}&amp;sender={name form step 5/6}&amp;message=MESSAGE_HERE  Open the OctoAutoRemote plugin settings in OctoPrint.  Enter the KEY value from the URL to the Personal Key field.  Add the SENDER value to the sender field.  Enable the events that you want to trigger an AutoRemote message  click save.TASKERTasker is a complicated beast.  I’ll leave that to you to configure.",
"tags": ["android","tasker","autoremote","autoapps"]
},

{
"id": "/plugins/gitfiles",
"url": "/plugins/gitfiles/",
"date": "2018-09-29 00:00:00 -0500",
"title": "OctoPrint-GitFiles",
"description": "Use a github repository for keeping your OctoPrint Files collection up-to-date.",
"author": "OutsourcedGuru",
"content": "With this plugin, you can use a github repository for keeping your OctoPrint Files collection up-to-date. Publish your sliced files from a local repository on your workstation, then select to pull the latest from this github repository.",
"tags": ["change management","source control","github","git","file manager"]
},

{
"id": "/plugins/nexmonotifier",
"url": "/plugins/nexmonotifier/",
"date": "2018-10-02 00:00:00 -0500",
"title": "OctoPrint-Nexmonotifier",
"description": "Octoprint plugin for print completion notifications using Nexmo SMS gateway",
"author": "Gert Kjerslev",
"content": "Receive SMS/Text notifications when OctoPrint jobs are complete.",
"tags": ["notification","SMS","Text message"]
},

{
"id": "/plugins/ABL_Expert",
"url": "/plugins/ABL_Expert/",
"date": "2018-10-04 00:00:00 -0500",
"title": "Auto bed leveling expert",
"description": "Marlin auto bed leveling control, mesh correction, and z probe handling. This plugin needs some features enabled in your firmware to work. Please read https://framagit.org/razer/Octoprint_ABL_Expert/-/blob/master/README.md for more information",
"author": "razer",
"content": "",
"tags": ["probe","leveling","bilinear","auto bed leveling","abl","marlin"]
},

{
"id": "/plugins/tuyasmartplug",
"url": "/plugins/tuyasmartplug/",
"date": "2018-11-12 00:00:00 -0600",
"title": "OctoPrint-TuyaSmartplug",
"description": "Plugin to control Tuya based Smartplug devices from OctoPrint web interface.",
"author": "ziirish",
"content": "Tuya SmartplugWork based on OctoPrint-TPLinkSmartplug and python-tuya.This plugin controlls Tuya-based SmartPlugs.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Tuya Smartplug device. Adjust additional settings as needed.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Device ID          Plug ID.        Local Key          Local key to cypher data.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.2 your gcode command would be M80 192.168.1.2        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Preparatory workIn order to be able to interact with your Tuya smart plugs, you need to retrieveboth the Device ID and the Local Key. You’ll find information to get thosein the python-tuya wiki.",
"tags": ["Tuya","Smartplug","Power"]
},

{
"id": "/plugins/active_filters_extended",
"url": "/plugins/active_filters_extended/",
"date": "2018-11-17 00:00:00 -0600",
"title": "Active Filters Extended",
"description": "Makes the enabled terminal filters persistent between browser reloads and from different connecting clients.",
"author": "jneilliii",
"content": "Active Filters ExtendedThis plugin makes use of knockout.observableStorage plugin licensend under MIT license and is a fork of OctoPrint-ActiveFilters plugin.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["filters","regex","terminal"]
},

{
"id": "/plugins/dragon_order",
"url": "/plugins/dragon_order/",
"date": "2018-11-18 00:00:00 -0600",
"title": "OctoPrint-DragonOrder",
"description": "Plugin that allows the re-ordering of navbar, sidebar, and tabs by dragging them into desired location within the UI.",
"author": "jneilliii",
"content": "OctoPrint-DragonOrderPlugin that allows the re-ordering of navbar, sidebar, and tabs by dragging them into desired location within the UI.Note: Plugin name is a play on words similar to Drag and Drop being misheard as Dragon Drop.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Draggable","Navbar","Sidebar","Tabs","UI"]
},

{
"id": "/plugins/signalnotifier",
"url": "/plugins/signalnotifier/",
"date": "2018-12-04 00:00:00 -0600",
"title": "OctoPrint_Signal-Notifier",
"description": "Print completion notifications using Signal. Requires signal-cli.",
"author": "Andrew Erickson",
"content": "Receive Signal messages when OctoPrint jobs are complete.Requires signal-cli to be installed and configured. See the plugin’s github page for more information.",
"tags": ["notification"]
},

{
"id": "/plugins/MyMiniFactory",
"url": "/plugins/MyMiniFactory/",
"date": "2018-12-11 00:00:00 -0600",
"title": "OctoPrint-MyMiniFactory",
"description": "Plugin to integrate with MyMiniFactory and enable click and print functionality.",
"author": "jneilliii",
"content": "OctoPrint-MyMiniFactoryThis plugin adds the ability to register your OctoPrint based printer to the MyMiniFactory® Click &amp; Print service. All slicing is completed on the MyMiniFactory® servers and is optimized for printing PLA to specific supported printers. E-Mail MyMiniFactory® here if you would like to get your printer added.InstallInstall via the bundled Plugin Manageror manually using this URL:https://github.com/jneilliii/OctoPrint-MyMiniFactory/archive/master.zipSetupOnce installed go into OctoPrint Settings &gt; MyMiniFactory® and select your connected printer’s manufacturer and model and click the register button.  A QR code will be generated that can be scanned in the MyMiniFactory® mobile application (Android or iOS) and associates with your account. Once registration is complete the printer should be listed in the mobile application as either Free, Busy, or Offline based on the current state.PrintingFrom within the mobile application find a verified Click &amp; Print model and click the Print button.  Select your newly added printer from the top of the list under Your Printers and press the Print This Object button.  The file will be sliced and added to your printer queue; find the newly added file and press the Print button. The gcode file will be downloaded to OctoPrint and start printing.DisclaimerThis plugin adds a tab to the OctoPrint interface that loads the MyMiniFactory® website within an iframe with consent from My Mini Factory Ltd. It was built by jneilliii using the MyMiniFactory API.The MyMiniFactory® name, logo, website, and the Click &amp; Print service is copyright, trademark, and owned by My Mini Factory Ltd., see their Terms and Conditions for additional information regarding the use of their website and service(s).By using this plugin you release jneilliii of any liability related to the use of the MyMiniFactory® service.OctoPrint-MyMiniFactory uses the Eclipse Paho Python Client under the hood, which is dual-licensed and used here under the terms of the EDL v1.0 (BSD).Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MyMiniFactory","Remote"]
},

{
"id": "/plugins/SlicerSettingsParser",
"url": "/plugins/SlicerSettingsParser/",
"date": "2018-12-22 00:00:00 -0600",
"title": "OctoPrint-SlicerSettingsParser",
"description": "Plugin to analyze gcode for slicer settings comments and add additional metadata of such settings.",
"author": "T6",
"content": "NOTE: Only supports Slic3r and Simplify3D currently; suggest more in issues; contributions welcome!Note: this plugin has not been tested with versions under 1.3.10; they may not work!This plugin is useless without another plugin to use the metadata. Those can be found here.ConfigurationPython regexes (Advanced)This plugin uses python regexes to parse the gcode.Syntax can be easily found on the web.There should be two named capturing groups, key and val.Multiple regexes should be listed on seperate lines, ordered by precedence.Any chars are allowed in the groups; \\n will be replaced by newlines.See the wiki for examples.",
"tags": ["gcode","analysis","slicer settings"]
},

{
"id": "/plugins/SlicerSettingsTab",
"url": "/plugins/SlicerSettingsTab/",
"date": "2018-12-22 00:00:00 -0600",
"title": "OctoPrint-SlicerSettingsTab",
"description": "Adds tab which displays slicer settings of selected gcode file.",
"author": "T6",
"content": "This plugin requires also installing SlicerSettingsParseror another plugin that adds a metadata dict under slicer_settings.",
"tags": ["gcode","analysis","slicer settings"]
},

{
"id": "/plugins/IFTTT",
"url": "/plugins/IFTTT/",
"date": "2018-12-29 00:00:00 -0600",
"title": "OctoPrint-IFTTT",
"description": "Connects OctoPrint events to IFTTT",
"author": "T6",
"content": "Note: this plugin has not been tested with versions under 1.3.10; they may not work!Advantages:  Allows for multiple IFTTT accounts to be connected  Allows for multiple triggers for each event  Allows customization of Value[1-3] placeholders; either static or a property of the event payload  Allows for default prefixes so you don’t have to type in lots of triggers  Works with custom events!**May not be (officially) supported; see #2965 for more info.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/tjjfvi/OctoPrint-IFTTT/archive/master.zipConfigurationMakerkeysA unique API key for IFTTT. Go here and click on “Documentation”. On the documentation page it will tell you your key: “Your key is: …”. You can put multiple makerkeys, seperated by newlines, here.Default prefixesDefault prefixes for the triggers. If you have an event MyEvent and prefixes prefix1- and prefix2-, it will, by default make the triggers prefix1-MyEvent and prefix2-MyEvent. Seperate the prefixes with newlines.EventsDefine events to send to IFTTT.TriggersA list of triggers to trigger on IFTTT.ValuesIFTTT Webhooks allows for a payload with three values. It will interpret this string like so:  If the value begins with a dot (.), it will use that prop of the event payload (e.g. .name for PrintDone)  If it begins with a colon (:) it will use the string after the colon  Otherwise it will just send the plain text",
"tags": ["notification","iot","ifttt","tp-link","tplink"]
},

{
"id": "/plugins/BetterHeaterTimeout",
"url": "/plugins/BetterHeaterTimeout/",
"date": "2019-01-02 00:00:00 -0600",
"title": "OctoPrint-BetterHeaterTimeout",
"description": "Turns off heaters after specified time being on and unused",
"author": "T6",
"content": "Note: this plugin has not been tested with versions under 1.3.10; they may not work!Advantages:  Supports configuring timeout length  Supports before/after gcode  Supports notification via Web UI  Fires a custom event * when the heaters timeout, so one can be notified or otherwise hook on the event.*May not be (officially) supported; see #2965 for more info.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/tjjfvi/OctoPrint-BetterHeaterTimeout/archive/master.zipIf you want to trigger on the custom event, use the event name HeaterTimeout.The payload values are heater, time_elapsed, and timeout.ConfigurationThe checkbox enables/disables the timeout, and the number input changes the timeout length.After target temp changes vs after heating startsIf set to the former, changing the target temp will reset the timeout.Before/after GCODEGCODE commands to run before/after the heaters are disabled.You can use the placeholders $heater, $time_elapsed. and $timeout.I think the names are pretty self-explanatory.Examples:M117 $heater timed out ; display that on the screenM300 S100 P200 ; chirp",
"tags": ["temperature","heater","timeout","heater timeout","custom event"]
},

{
"id": "/plugins/LCD1602_I2cdisplay",
"url": "/plugins/LCD1602_I2cdisplay/",
"date": "2019-01-28 00:00:00 -0600",
"title": "octoprint-LCD1602",
"description": "This plug-in allows you to control a 16X2 lcd display (hd44780 connected to port I2C) to display the octoprint status. It is useful for people like me who have a printer without a display. It indicates on which port the printer is connected, the progress of printing. It also displays the remaining print time (thanks to a simple method). See https://github.com/n3bojs4/octoprint-LCD1602/blob/master/CHANGELOG.md for more details.",
"author": "n3bojs4",
"content": "",
"tags": ["display","loading bar","events"]
},

{
"id": "/plugins/hardwarepwm",
"url": "/plugins/hardwarepwm/",
"date": "2019-02-08 00:00:00 -0600",
"title": "OctoPrint-Hardwarepwm",
"description": "Plugin for true hardware PWM on the Raspberry Pi",
"author": "Daria Rostirolla",
"content": "Plugin that uses the PIGPIO library for hardware PWM, thus creating a flicker free pwm signal for LED strip dimming. Requires you to install pigpio through apt-get and to start/enable the pigpiod daemon.",
"tags": ["hardware pwm","control","pwm","leds"]
},

{
"id": "/plugins/filament_sensor_ng_orangepi",
"url": "/plugins/filament_sensor_ng_orangepi/",
"date": "2019-02-18 00:00:00 -0600",
"title": "FilamentSensor OrangePi",
"description": "A filament monitor that pauses the print when your filament runs out and lets you restart it.",
"author": "Deadly667",
"content": "OverviewPause printing when the 3D printer runs out of filament.Credits:Inspired by and based on the work byOctoPrint-FilamentSensor-ng plugin by Red-M found hereConfigurationAfter installation, configure the plugin via OctoPrint Settings interface.The pin being used needs to be entered by name (e.g. PA01, PC07).OrangePI OS ConfigurationSince we are accessing the GPIO as a non root user we need to configure the OS to allow this. Here’s the copy of the library documentation on how to do it:If you want to be able to use the library as a non root user, you will need to setup a UDEV rule to grant you permissions first. This can be accomplished as follows: $ sudo usermod -aG gpio &lt;current_user&gt; $ sudo nano /etc/udev/rules.d/99-gpio.rulesThat should add your user to the GPIO group, create a new UDEV rule, and open it in the Nano text editor. Enter the following into Nano   SUBSYSTEM==\"gpio\", KERNEL==\"gpiochip*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys/class/gpio/export /sys/class/gpio/unexport ; chmod 220 /sys/class/gpio/export /sys/class/gpio/unexport'\"   SUBSYSTEM==\"gpio\", KERNEL==\"gpio*\", ACTION==\"add\", PROGRAM=\"/bin/sh -c 'chown root:gpio /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value ; chmod 660 /sys%p/active_low /sys%p/direction /sys%p/edge /sys%p/value'\"press ctrl-x, Y, and ENTER to save and close the file. Finally, reboot and you should be ready to use OPi.GPIO as a non root user.Issues with OPI GPIO libraryhttps://github.com/rm-hull/OPi.GPIO/pull/28 solves the issues with PI GPIO library and the race condition that was preventing normal operations. It is available in release v0.3.4 and up so make sure you have latest OPI GPIO library. To upgrade to latest OPI GPIO library login to your octoprint server as user pi and execute: $ cd OctoPrint/ $ venv/bin/pip install --upgrade OPi.GPIO",
"tags": ["filament","sensor","orangePi"]
},

{
"id": "/plugins/printtrack",
"url": "/plugins/printtrack/",
"date": "2019-02-25 00:00:00 -0600",
"title": "OctoPrint-PrintTrack",
"description": "Keep track of your printer and prints with some simple additions & customizability.",
"author": "ElectricSquid",
"content": "OctoPrint-PrintTrackThis plugin is meant to help you keep track of your printers progress and status. Currently it will display the printers status in the tab of OctoPrint in the browser. There are customization options to change how it is displayed and also has adjustable strings so you can translate them or just make them something else.Install &amp; SetupInstall via the bundled Plugin Manager or manually using this URL:https://github.com/ElectricSquid/OctoPrint-PrintTrack/archive/master.zipReporting Issues &amp; ImprovmentsIf you encounter any issues or bugs with the plugin please feel free to make an issue on the repo. I also fully support additions to the plugin from third partys. If you have an idea or an already developed solution that would implement with the plugin well please submit it to the github repo and I will gladly consider additions and contributions.See the github page for more details.",
"tags": ["connection","status","monitor","monitoring","notification","notifications","progress","remote monitoring","title"]
},

{
"id": "/plugins/rgb_status",
"url": "/plugins/rgb_status/",
"date": "2019-02-27 00:00:00 -0600",
"title": "RGB Status",
"description": "Adds RGB LED support to OctoPrint with the ability to choose colors and effects based on the current status of your printer",
"author": "Eric Higdon",
"content": "OctoPrint-Rgb_statusAdds RGB LED support to OctoPrint with the ability to choose effects based on the current status of your printerSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/EricHigdon/OctoPrint-Rgb_status/archive/master.zipRunning Without RootSince OctoPrint should usually not be run as root, the default LED pin is 10 (SPI). For details about what may be required to use SPI on your instance, see https://github.com/jgarff/rpi_ws281x#spiReporting Issues &amp; ImprovmentsIf you encounter any issues or bugs with the plugin please feel free to make an issue on the repo. I also fully support additions to the plugin from third partys. If you have an idea or an already developed solution that would implement with the plugin well please submit it to the github repo and I will gladly consider additions and contributions.See the github page for more details.",
"tags": ["RGB LED","Addressable LED","Progress","Effects","WS2811","WS2812"]
},

{
"id": "/plugins/xMattersIntegration",
"url": "/plugins/xMattersIntegration/",
"date": "2019-03-04 00:00:00 -0600",
"title": "xMatters Integration",
"description": "Event notifications using xMatters",
"author": "svv2014",
"content": "The plugin allows OctoPrint to send notifications on events using xMatters.SetupxMatter integration setup  Open your xMatters page  go to page: Developer &gt; Communication Plans  Import zip file from xMatters/OctoPrintIntegration.zip          this will create communication plan for integration        On communication plan press Edit and choose Integration Builder  You should see one configured Inbound integration          Note if Inbound integrations configuration was not imported you may need to create once with authentication method equals to API key.        Open this configuration and at the bottom you will find all needed credentialsConfiguration  Take API Key, Secret, Integration URL from xMatters integration and set it in plugin configuration          Note: for recipients field use comma separated user id        Choose events you interested in and enjoy.",
"tags": ["xMatters","events","notifications","monitoring"]
},

{
"id": "/plugins/curalegacy",
"url": "/plugins/curalegacy/",
"date": "2019-03-28 00:00:00 -0500",
"title": "CuraEngine Legacy",
"description": "Plugin for slicing via the legacy version of CuraEngine from within OctoPrint, unbundled from OctoPrint starting with version 1.3.11",
"author": "Gina Häußge",
"content": "The CuraEngine Legacy Plugin allows slicing of STL files uploaded to OctoPrint directly via the legacy version of CuraEngine (up to and includingversion 15.04.x). It was bundled with OctoPrint up until version 1.3.10.  📝 Note  Versions of CuraEngine later than 15.04.x have changed their calling parameters in such a way that thisplugin is not compatible to it. For this reason, please use only CuraEngine versions up to and including 15.04,as available in the legacy branch of the CuraEngine repository on Github.The plugin offers a settings module that allows configuring the path to the CuraEngine Legacy executable to use, as well asimporting and managing slicing profiles to be used. Please note that the CuraEngine Legacy plugin will use the printer parametersyou configured within OctoPrint (meaning bed size and extruder count and offsets) for slicing.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/OctoPrint/OctoPrint-CuraEngineLegacy/archive/master.zipFirst StepsBefore you can slice from within OctoPrint, you’ll need to  Install CuraEngine Legacy  Configure the path to CuraEngine Legacy within OctoPrint  Export a slicing profile from Cura &lt;15.04.x and import it within OctoPrintOctoPi ships with steps 1 and 2 already done, you only need to supply one or more slicingprofiles to get going :)If you are coming from an OctoPrint version prior to 1.3.11 and already had the then still bundled version of this pluginconfigured, your configuration &amp; profiles will be migrated.Installing CuraEngine LegacyYou’ll need a build of legacy branch of CuraEngine in order to be able touse the Cura Legacy OctoPrint plugin. You can find the legacy branch here.Compiling for RaspbianBuilding on Raspbian Jessie and later is as easy as:sudo apt-get -y install gcc-4.7 g++-4.7git clone -b legacy https://github.com/Ultimaker/CuraEngine.gitcd CuraEnginemakeAfter this has completed, you’ll find your shiny new build of CuraEngine in the build folder (full path for aboveexample: ~/CuraEngine/build/CuraEngine).Using Cura ProfilesThe CuraEngine Legacy Plugin supports importing your existing profiles for CuraEngine Legacy up to and including Cura 15.04.x. Newer CuraEnginereleases (e.g. 15.06 or 2.x) use a different internal format that will not work with the Cura Legacy Plugin.You can find downloads of Cura 15.04.x for Windows, Mac and Linux on Ultimaker’s download page.In order to export a slicing profile from the legacy Cura desktop UI, open it, set up your profile, then click on “File” andthere on “Save Profile”. You can import the .ini-file this creates via the “Import Profile” button in the CuraEngine Legacy Settingswithin OctoPrint.ConfigurationThe Cura plugin needs to be configured with the full path to your copy of the CuraEngine Legacy executable that it’s supposedto use. You can do this either via the CuraEngine Legacy plugin settings dialog or by manually configuring the path to theexecutable via config.yaml, example:plugins:  curalegacy:    cura_engine: /path/to/CuraEngine",
"tags": ["cura","cura engine","cura legacy","slicer","gcode","stl"]
},

{
"id": "/plugins/bettergrblsupport",
"url": "/plugins/bettergrblsupport/",
"date": "2019-04-01 00:00:00 -0500",
"title": "Better Grbl Support",
"description": "Provides core functionality and UI integration for GRBL based engravers and CNC machines",
"author": "Shell M. Shrader",
"content": "Better Grbl Support Plugin for OctoprintThis plugin was inspired by mic159’s Grbl Support plugin (https://plugins.octoprint.org/plugins/octoprint-grbl-plugin/).  His plugin gets you 90% of the way there for adding Grbl support to Octoprint but had a couple limitations and lacked some bells and whistles from a UI and configuration perspective.Better Grbl Support originally utilized mic159’s gcode receiver parser but at this point I’ve moved well beyond his reference implementation.Here are some of bgs’s capabilities (as of v2.0.0):  Fully supports Laser and CNC operations / workflows  Provides for 10 axes of movement / jogging  Machine and Work Positioning Homing / Origin setup  Allows for full management of All Grbl settings ($$)  Provides rich details for all Grbl settings, messages, alarms, and errors  Supports Z-Probing and customization of Z-Probe settings  9 Point Framing and auto generation of Framing dimensions  Detects and automatically supports Grbl 1.1 Jogging  Fully integrates with Octoprint Start/Pause/Resume/Cancel operations  All global configuration changes to Octoprint are reverted on uninstall  All conversions of typical marlin/repetier/etc commands to Grbl are preset  Disables Octoprint functions which interfere with Grbl  Disables the built-in GCode Viewer  Disables the built-in Temperature tab  Disables the built-in Control tab (It can be re-enabled via Settings)  Supports compressed/shorthand Grbl generated by numerous post processorsSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/synman/OctoPrint-Bettergrblsupport/archive/master.zipNOTE: Installing this pluging directly from the URL above ensures you always have the latest version, but this comes with risk.  I do not always follow a traditional gitflow which means commits to the master branch may not be fully tested and could cause unforeseen issues. Proceed at your own risk.ConfigurationPay special attention to the following config.yaml configuration parameters.  These settings are modified upon plugin installation.  While the uninstaller removes any customizations, please note the below in the event something unexpected happens:  appearance / components / temperature tab  controls (any / all customizations made to it)  feature / temperatureGraph  feature / gcodeVisualizer  feature / modelSizeDetection  serial / neverSendChecksum  serial / checksumRequiringCommands  serial / helloCommand  plugins / _disabled / printer_safety_check  appearance / components / disabled / tab  gcodeViewer",
"tags": ["grbl","laser","engraver","cnc"]
},

{
"id": "/plugins/DryRun",
"url": "/plugins/DryRun/",
"date": "2019-04-02 00:00:00 -0500",
"title": "DryRun",
"description": "Print without heating/extruding.",
"author": "Olli",
"content": "A Octoprint-Plugin that allows to execute a print without heating your bed or nozzle, turning on any fans, or extruding any filament.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)DetailsThe implementation is based on the “test-mode” from OctolapseFor implementation details please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/marlin_flasher",
"url": "/plugins/marlin_flasher/",
"date": "2019-04-02 00:00:00 -0500",
"title": "Marlin Flasher",
"description": "Plugin that allows you to flash your printer to the latest Marlin version",
"author": "Renaud Gaspard",
"content": "Adds the ability to easily update your Arduino and Platform.io based printer firmware with just a few clicks directly through OctoPrint.You can install multiple libraries if your firmware needs it, upload your firmware code, and just hit Flash.Please be aware that I’m not responsible for any damage made to your printer if something had to go wrong during the flashing process.See the README or the wiki for more information on how to configure and use this plugin.",
"tags": ["firmware","updater","flasher","arduino","platformio","marlin"]
},

{
"id": "/plugins/FanSpeedMirror",
"url": "/plugins/FanSpeedMirror/",
"date": "2019-04-13 00:00:00 -0500",
"title": "OctoPrint-FanSpeedMirror",
"description": "Mirror the parameter(s) of GCode commands M106, M107 to scripts on the OctoPrint host",
"author": "Brad Morgan",
"content": "Mirror the parameter(s) of GCode commands M106, M107 to scripts on the OctoPrint hostExample bash scripts and a test gcode file are in extrashttp://plugins.octoprint.org/plugin/FanSpeedMirror/",
"tags": ["UI","Controls"]
},

{
"id": "/plugins/repeatingcommand",
"url": "/plugins/repeatingcommand/",
"date": "2019-04-16 00:00:00 -0500",
"title": "OctoPrint_RepeatingCommand",
"description": "Octoprint plugin for running a command at an interval during prints.",
"author": "Andrew Erickson",
"content": "Runs a command at a specified interval during prints.I use it to trigger my home automation to run an exhaust fan (that normally turns off after 5 minutes) when printing.",
"tags": ["events","control","integration","command","automation"]
},

{
"id": "/plugins/octoprint_complicated",
"url": "/plugins/octoprint_complicated/",
"date": "2019-04-23 00:00:00 -0500",
"title": "OctoPrint-Complicated",
"description": "Display Print Progress on your Apple Watch using the Complicated iOS App",
"author": "Mike Lyons",
"content": "OctoPrint Complicated IntegrationThis plugin allows you to show your 3d print progress on your Apple Watch by integrating withthe Complicated iOS/Apple Watch app.What is Complicated?Complicated is a simple app that lets you update your Apple Watch face complications with WebHooks. You can also use IFTTT and Zapier to update the WebHooks.https://mikelyons.org/complicated?utm_source=octoprint-complicated",
"tags": ["apple watch","ios","progress"]
},

{
"id": "/plugins/PCA9685LEDStripControl",
"url": "/plugins/PCA9685LEDStripControl/",
"date": "2019-05-07 00:00:00 -0500",
"title": "PCA9685 LED Strip Control",
"description": "OctoPrint plugin for controling RGB LED Strips via PCA9685 over I2C",
"author": "Ozgun Ayaz",
"content": "OctoPrint-PCA9685LEDStripControlOctoPrint plugin that intercepts M150 GCode commands and controls LEDs connected to PCA9685 over I2C.Implements the M150 command syntax from the latest Marlin.    M150: Set Status LED Color - Use R-U-B for R-G-B Optional (W)    M150 R255       ; Turn LED red    M150 R255 U127  ; Turn LED orange (PWM only)    M150            ; Turn LED off    M150 R U B      ; Turn LED white    M150 W          ; Turn LED white if using RGBW strips (optional)Setup      Connect PCA9685 (address 0x40) and enable I2C in configuration \tsudo raspi-config        Install via the bundled Plugin Manageror manually using this URL: \thttps://github.com/ozgunawesome/OctoPrint-PCA9685LEDStripControl/archive/master.zip        Restart OctoPrint  ConfigurationConfigure the PCA9685 pins via the OctoPrint settings UI.",
"tags": ["pca9685","i2c","hardware pwm","pwm","raspberry pi","led","rgb","gcode"]
},

{
"id": "/plugins/preprintservice",
"url": "/plugins/preprintservice/",
"date": "2019-05-12 00:00:00 -0500",
"title": "OctoPrint-PrePrintService",
"description": "This service supports your 3D printing workflow by providing auto-rotation and slicing functionality.",
"author": "Christoph Schranz",
"content": "OctoPrint-PrePrintServiceThis service supports your 3D printing workflow by utilizing auto-orientationand slicing functionality.The PrePrint Service is based on:  The auto-rotation software for FDM 3D printing Tweaker-3  The slicing software Slic3rYou can also use a similar and prefered tool-chain by using Curaas the Slicing software and with the Plug-InsAuto-Orientationand Octoprint Connection.WorkflowThe full workflow can be deployed either on a single machine or more generally on two separated nodes as described below:The following steps will be done:  Upload a model on Octoprint and click on the Slice button in the file bar.  The model will be auto-rotated for a proper 3D print by the Tweaker-3 software.  The optimized model will be sliced using Slic3r.  The final machine code will be sent back to the octoprint server.  The printing can be started.Each step can be adjusted as described in the settings.Requirements  One server node that is connected to your 3D printer, like a Raspberry Pi.  One server node for pre-processing, which has at least 2GHz CPU frequency.If the node connected to the printer is strong enough, one server suffices.  Optional: Install Docker version 1.10.0+and Docker Compose version 1.6.0+on the more powerful node.Setup1. Install the PluginInstall the Octoprint-PrePrint Service in the Plugin Manager, e.g., from the archive’s URL https://github.com/christophschranz/OctoPrint-PrePrintService/archive/master.zipor manually using the git’s URL on the Printer-Controller2. Set up the (external) preprocess services in DockerIn order to make the service highly available, it is recommended to deploy thePrePrint-Service in Docker. If you are not familiar with docker yet,have a quick look at the links in the requirements-section.Then run the application locally with:git clone https://github.com/christophschranz/OctoPrint-PrePrintServicecd OctoPrint-PrePrintServicedocker-compose up --build -ddocker-compose logs -fOptional: The docker-compose.yml is also configured to run in a given docker swarm, adapt the docker-compose.yml to your setup and run:docker-compose builddocker-compose pushdocker stack deploy --compose-file docker-compose.yml preprintserviceThe service is available on localhost:2304/tweak(from the hosting node),where a simple UI is provided for testing the PrePrint Service.Use docker-compose down to stop the service. (If you ever wish :wink: )ConfigurationConfigure the plugin in the settings and make sure the url for the PrePrint service is setcorrect:Note that the octoprint URL must not be localhost, as the tweak-service is deployed ina docker network where it is unable to locate it’s hosts local network.Finally, go back to the home UI, click on the Slice-Button of uploaded STL-Models andproduce printable machinecode via this Preprocessing-Plugin.TestingTo test the whole setup, do the following steps:      Visit localhost:2304/tweak, select a stl model fileand make an extended Tweak (auto-rotation) without slicing. The output should bean auto-rotated (binary) STL model. If not, check the logs of the docker-serviceusing docker-compose logs -f in the folder where the docker-compose.yml is located.        Now, do the same with slicing, the resulting file should be a gcode file of the model.Else, check the logs of the docker-service using docker-compose logs -f in thesame folder.        Visit the Octoprint server, click on the Slice-Button of the uploadedSTL-Model in the file bar and produce printable machinecode via thisPrePrint-Service Plugin.. After some seconds a .gco file should be uploaded. Note that in a small time frame a.gco file with only one line and 83 bytes can appear. This is expected and should be overwrittenafterwards after a short time.If this doesn’t work, start the octoprint server per CLI with octoprint serveand track the logs. The following two lines are expected:     2019-04-07 22:28:44,301 - octoprint.plugins.preprintservice - INFO - Connection to PrePrintService on http://192.168.48.81:2304/tweak is ready, status code 200 2019-04-07 22:28:44,321 - octoprint.plugins.preprintservice - INFO - Connection to Octoprint server on http://192.168.48.43:5000/api/version?apikey=A943AB47727A461F9CEF9EXXXXXXXX is ready, status code 200        If the the Octoprint Server’s URL is invalid, you will see this:     2019-04-07 22:27:34,746 - octoprint.plugins.preprintservice - WARNING - \"Connection to Octoprint server on http://192.168.48.43:5000 couldn't be established\"        If you see instead the following, please check the APIKEY: (403 - forbidden)     2019-04-07 22:30:09,570 - octoprint.plugins.preprintservice - WARNING - Connection to Octoprint server on http://192.168.48.43:5000/api/version couldn't be established, status code 403        If the the PrePrint Server can’t be reached, you will see this:     2019-04-07 22:27:34,746 - octoprint.plugins.preprintservice - WARNING - Connection to PrePrint Server on http://192.168.48.81:2304/asdf couldn't be established        Make also sure that your selected profile file is correct.  If you have any troubles in setting this plugin up or tips to improve this instruction, please let me know!PrePrint-Service APIYou can use this API to preprocess your models for 3D printing.import requestsurl = \"http://localhost:2304/tweak\"model_path = 'preprintservice_src/uploads/model.stl'profile_path = 'preprintservice_src/profiles/profile_015mm_brim.profile'output_path = 'gcode_name.gcode'# Auto-rotate file without slicingr = requests.post(url, files={'model': open(model_path, 'rb')},                  data={\"tweak_actions\": \"tweak\"})# Only slice the model to a gcoder = requests.post(url, files={'model': open(model_path, 'rb'),                              'profile': open(profile_path, 'rb')},                data={\"machinecode_name\": output_path,                        \"tweak_actions\": \"slice\"})# Auto-rotate and slice the model filer = requests.post(url, files={'model': open(model_path, 'rb'), 'profile': open(profile_path, 'rb')},                  data={\"machinecode_name\": output_path, \"tweak_actions\": \"tweak slice\"})print(r.status_code)object = r.textThe resulting object, either a tweaked stl file or a gcode file isaccessible via r.text which can be some MB large.Information of how to interact with Octoprint’s API is depicted here.For example, you can test the file upload API like this:import jsonimport requests# Octoprint's URL using the default port 5000 and the API including the API-keyurl = \"http://192.168.48.43:5000/api/files/local?apikey=A943AB47727A461XXXXXXXXXXXX\"model_path = 'preprintservice_src/uploads/model.stl'files = {'file': open(model_path, 'rb')}# Upload a file using Octoprint's APIr = requests.post(url=url, files=files)print(r.status_code)print(json.dumps(r.json(), indent=2))I hope this workflow for 3D print preprocessing helps you!DonationThis plugin, as well as the auto-rotation moduleTweaker-3 was developed in my spare time.If you like it, I would be thankful about a cup of coffee :)Happy Printing!",
"tags": ["slic3r","slicing","gcode","stl","tweak","auto-rotate","orientation"]
},

{
"id": "/plugins/octopod",
"url": "/plugins/octopod/",
"date": "2019-05-28 00:00:00 -0500",
"title": "OctoPrint-OctoPod",
"description": "OctoPrint plugin for OctoPod",
"author": "Gaston Dombiak",
"content": "This plugin sends immediate push notifications to your iOS devices or IFTTT when:  Print finished (includes camera snapshot) or at specific progress percentages  Print reached specified layers (requires DisplayLayerProgress plugin)  Bed warmed up to target temp for a period of time. Helps get smooth first layers  Bed cooled down below specified threshold. Ideal to easily remove prints from bed  Extruder cooled down below specified threshold. Ideal to know when to turn printer off  Printer paused for user. This may happen when running out of filament or when doing manual multi color printing (M600)  Palette 2 / Pro encountered a problem while printing  MMU requires user assistance (requires Prusa firmware)  Firmware errors. Get security alerts like thermal runaway, probing failed, min temp error, max temp error, etc.If you are using the free and open source OctoPodto control your printer from any iOS device then this plugin is a great addition. If younever heard of OctoPodbefore then you are in for a treat. Here are some of its features: multiple printers support,multiple cameras support including full screen with zoom in/out, control your printer usingSiri, your Apple Watch or your Apple TV, temperature charts including temp variance. You can cancel any objectbeing printed since it has support for Cancel object plugin.But that is not the only supported plugin, here are other supported plugins: TPLink,PSU Control, Domoticz,Belkin Wemo, Tasmota andCustom Control . And now with this newOctoPrint plugin we added real time notifications for some very useful features.InstallationInstallation is super easy. There is no need to change your router configuration, doport forwarding or open holes in your firewall. Just follow these steps and you willbe up and running in no time.  Download and install this plugin as you would do with any other OctoPrint plugin  Download OctoPod from the App Store  Start OctoPod soit can receive notifications. This step is required for testing the plugin  Go to OctoPrint settings and configure this plugin          If needed, update Snapshot URL to point to the camera that will provide an image when your print is finished      Click on Send test notification to confirm setup is operational      Configure Bed Notifications to receive cooled down or warm up bed events      Save settings and enjoy      ",
"tags": ["octopod","bed temperature","print finished","iOS","notifications","mmu","ifttt"]
},

{
"id": "/plugins/uploadanything",
"url": "/plugins/uploadanything/",
"date": "2019-05-28 00:00:00 -0500",
"title": "Upload Anything",
"description": "Allows custom file types to be uploaded via the web interface",
"author": "Roberto Lo Giacco",
"content": "If you want to keep your files organized storing project files and models along the sliced GCODE as I do then this plugin will allow you to overcome the default constraint allowing to upload only GCODE files via the file embedded file upload mechanism.By default this plugin adds the following file extensions:  STL  OBJ  3MF  JPG  GIF  PNGYou can add or remove from the above list at your liking via the dedicated plugin settings.",
"tags": ["file upload","upload"]
},

{
"id": "/plugins/Change_Filament",
"url": "/plugins/Change_Filament/",
"date": "2019-05-29 00:00:00 -0500",
"title": "Change_Filament",
"description": "Facilitates changing filament (backs out old, loads new)",
"author": "Jim Pingle",
"content": "This plugin makes it simple to change filament.The plugin mimics the actions taken by the change filament action built intoMarlin. That feature is not available on all printers and also requires usingthe control box to use, instead of doing everything in OctoPrint.Configuration:  Unload Length: Length of filament to reverse extrude when unloading, in mm.  Unload Speed: How fast to unload the filament, in mm/m.  Load Length: Length of filament to extrude when loading, in mm.  Load Speed: How fast to extrude when loading filament, in mm/m.  Y Park: Position on the Y axis where the head will be moved when loading or unloading.  X Park: Position on the X axis where the head will be moved when loading or unloading. Depending on the filament path, may be best set to the midpoint of the X axis.  Z Lift Relative: How high to move the Z axis before unloading, in mm.  Park Speed: How fast to move the head when parking, in mm/m.",
"tags": ["filament"]
},

{
"id": "/plugins/OctoFlat",
"url": "/plugins/OctoFlat/",
"date": "2019-06-03 00:00:00 -0500",
"title": "OctoPrint-OctoFlat",
"description": "A flat theme for OctoPrint.",
"author": "Joseph Geis",
"content": "A nice, sleek OctoPrint theme to get rid of the ugly gradients. It is simply dropped in with no configuration necessary.",
"tags": ["theme","ui","tweak"]
},

{
"id": "/plugins/filamentencore",
"url": "/plugins/filamentencore/",
"date": "2019-06-03 00:00:00 -0500",
"title": "Filament Sensor Encore",
"description": "OctoPrint plug-in that detects when printer is out of filament",
"author": "Dragos Costache",
"content": "Pause printing when the 3D printer runs out of filament.Based on the Filament Sensor Reloaded plugin by kontakt, this plugin adds new features such as the ability to prevent print starting/resuming when no filament detected and offers bug fixes.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/PrinterAlerts",
"url": "/plugins/PrinterAlerts/",
"date": "2019-06-08 00:00:00 -0500",
"title": "OctoPrint-PrinterAlerts",
"description": "Alert the user when their printer is waiting for interaction.",
"author": "Patrick Leiser",
"content": "PrinterAlertsThis plugin detects echo:busy: paused for user messages from the printer and uses OctoPrint’s built in alert system to notify the user that the printer needs their attention.This is especially useful for Prusa’s printers with MultiMaterial Units installed, as the printer prompts you to select the filament to use on the LCD when printing in Single Material Mode.ScreenshotsFeatures  Will bring up a standard alert in octoprint when the printer is waiting for your input.  Configurable alert severity, from “Error” and “Warning”, to “Info”, and “Sucess”  Set alerts to auto-hide, or to stay on screen  Note: For printer like the Prusas that repeatedly give the same message while waiting, I strongly recommend leaving this set to Auto Close.  Optionally can speak the alerts as well (not supported in all browsers)Compatibility  This plugin was designed to work with the Prusa i3 Mk3s MMU2 3D printer, and will likely work with other Prusa printers as well.  It will work with any non-prusa printers that output the same messageecho:busy: paused for user when waiting for user input  For other printers that have a different waiting for user message, create an issue on github, and I’ll be happy to try to implement it for those messages as well  this plugin might not work with files on the SD card. (Untested)",
"tags": ["printer","alert","waiting","notification","multimaterial"]
},

{
"id": "/plugins/PauseForUserEvent",
"url": "/plugins/PauseForUserEvent/",
"date": "2019-06-11 00:00:00 -0500",
"title": "PauseForUser Event",
"description": "Adds a new event 'paused_for_user' when the printer needs manual intervention",
"author": "Thomas Arthofer",
"content": "When echo:busy: paused for user is received on the serial port, this plugin then raises a paused_for_user event, which may then be used with other plugins like OctoPrint-MQTT to alert the user, that the printer needs attention.The primary use for this is the Prusa MMU2S, which when it fails to load/unload filament, will halt the printer and send this message on serial.See the plugin’s README for details.",
"tags": ["paused for user","Prusa MMU2","notification","event"]
},

{
"id": "/plugins/prusaetaoverride",
"url": "/plugins/prusaetaoverride/",
"date": "2019-08-25 00:00:00 -0500",
"title": "Prusa (M73 response) ETA Override",
"description": "Plugin that overrides OctoPrint ETA to values from last M73 gcode response received from printer",
"author": "Anton Skorochod",
"content": "AboutThe last Sli3cr Prusa Edition implemented M73 gcode injecting to the generated gcodes. This M73 sends “NORMAL MODE: Percent done: 0; print time remaining in mins: 3” to serial with perfect time estimation. This plugin overrides ETA to this value.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["progress","eta","estimation","m73"]
},

{
"id": "/plugins/webcamSB",
"url": "/plugins/webcamSB/",
"date": "2019-09-04 00:00:00 -0500",
"title": "OctoPrint-Webcamsb",
"description": "Sidebar webcam viewer",
"author": "Luis Magar Brunner",
"content": "This plugin adds a webcam stream viewer to the sidebar of Octoprint so you can keep an eye on your print at any moment.You can click on the viewer to maximize the view.You can flip the image in the configuration (even if left blank to use the default stream).You can configure up to four streams (IP cam recommended when using multiple streams).",
"tags": ["webcam","sidebar","stream"]
},

{
"id": "/plugins/gslc",
"url": "/plugins/gslc/",
"date": "2019-09-05 00:00:00 -0500",
"title": "GcodeSuperLaserController",
"description": "A plugin for Laser engraving add",
"author": "Skiepp",
"content": "GCodeSuperLaserControllerThis is a basic plugin to work with a Laser Engraver.Printing from the OctoPrint interface with this plugin can turn your 3D printer into a laser engraver!Commands  M3 &lt;p&gt;:  Turns ON the laser with power &lt;p&gt;  M4 &lt;p&gt;:  Turns ON the laser with power 255-&lt;p&gt;  M5:  Turn OFF the laserThe laser power can go from 1 (min) to 255 (MAX)NOTE: It’s highly suggested to add an M400 - Finish Moves before the M3, M4 and M5 commands.How to UseStep 0) Install the pluginStep 1) Connect the Laser driver to pins GPIO18 and GNDStep 2) Create a GCode using the described commandsStep 3) Print using OctoprintHave fun :)Oh, almost forgot, I’m not responsible for you hurting yourself with your cool laser, but please use it with caution.",
"tags": ["gcode","laser","engraver","marlin"]
},

{
"id": "/plugins/dashboard",
"url": "/plugins/dashboard/",
"date": "2019-09-10 00:00:00 -0500",
"title": "OctoPrint-Dashboard",
"description": "A dashboard tab for Octoprint",
"author": "Stefan Cohen, j7126, Willmac16",
"content": "This plugin adds a  dashboard tab in Octoprint that displays the most relevant info regarding the state of the printer and any on-going print job.Features  Adds a new tab first in the list and becomes the default tab when opening OctoPrint  Widgets for current:          RPi host CPU Load, CPU Temp, CPU frequency, Mem Utilization, Storage Utilization.      Printer profile, Connection status, Printer Status      Hotend temp(s), Bed Temp, Chamber Temp, Fan speed      Temperature/Humidity sensors.      Shell command output      Printed file, Job Progress, Layer Progress      Layer Duration Graph      Estimated total time, ETA, Time left, Time since print started      Current layer, Total layers      Current height, Total height      Average layer time      WebCam view        Settings to configure what widgets and info to include in the Dashboard  Supports multiple hotends as configured in the printer profile  Supports chamber temperature if configured in the printer profile  Configurable progress gauge type (Circle, Bar)  Fullscreen mode including job control buttons (Start, Cancel, Pause/Resume)  Full page mode by adding ?dashboard=full parameter at the end of the octoprint url  Uses Estimates from PrintTimeGenius when installed  Theme friendlyThemed screenshot:Fullscreen mode screenshot:For installation and configuration details, please visit the dashboard github page",
"tags": ["dashboard","status","overview","progress"]
},

{
"id": "/plugins/octovox",
"url": "/plugins/octovox/",
"date": "2019-09-11 00:00:00 -0500",
"title": "OctoPrint-OctoVox",
"description": "OctoPrint plugin for OctoVox Amazon Alexa Integration",
"author": "John Ruzick",
"content": "The OctoVox plugin for OctoPrint sends limited printer information to a database for access via Amazon Echo devices.The problem with other Alexa solutions is that they require exposing access to your Octoprint server over the public internetas well as require providing the external service with your Octoprint API key.The OctoVox plugin eliminates that security risk by publishing only small informational status updates about your printerthat can then be retrieved by the Octovox Amazon Alexa Skill. This plugin and Alexa Skill do not allow any manipulation orcontrol over your printer, it is entirely read-only and secured via user accounts.OctoVox Plugin Installation and ConfigurationInstallation is super easy. There is no need to change your router configuration, doport forwarding or open holes in your firewall.  Download and install this plugin from the OctoPrint Plugin Repository or Github URL  Open the Settings tab of the OctoPrint-OctoVox Plugin  Enter a desired name for your printer  Click the Request Printer Registration button  You will be redirected to the OctoVox Login Page. If you do not yet have an account, click “Sign-Up” and enter a validemail address and create a password. You will have to verify your email address and then you will be directed to a pagethat will provide a unique key for your printer.  Enter that unique key in the box for Step 3 on the OctoVox Settings Page.  Click the Verify Registration button to make sure things were configured correctly.  After the info is verified, click Save.Alexa Setup  Use the Alexa companion mobile app or website to find and enable the Octovox Skill.  Once enabled, click on Settings and select Link Account.  Enter the Username and Password created in step 4 of the Plugin Configuration.  You can now ask Alexa for your printer status by saying “Alexa, ask my 3-D print server for my printer status”Setup Walkthrough\tPrivacyThis plugin uses two external services to function. A user management and registration portal, and an API/Database to store printer information.Upon successful configuration, your OctoPrint server will occasionally publish updates to the service via the API. These updates are securedusing your unique printer API key. This is NOT your OctoPrint API key! At no point will you need to provide your OctoPrint API key or Url, andyou do not need to expose your server to the public.Currently, the OctoVox service stores the following information which can be retrieved by Alexa:  Registration Email Address  Printer Name  Encrypted Printer Key Value  Printer Status (Offline, Operational, Printing, etc.)  Hot End Temperature  Bed Temperature  Current Job Completion Percentage  Current Job Z-height  Current Filename  Previous Job Duration  Previous Job Result (Completed, Cancelled, Failed, etc.)Printers that have not updated their status in 10 days will automatically be removed from the database and will have to be re-registered",
"tags": ["octovox","Amazon Echo","Alexa","Printer Status","Printer Temperature"]
},

{
"id": "/plugins/AutostartPrint",
"url": "/plugins/AutostartPrint/",
"date": "2019-09-23 00:00:00 -0500",
"title": "AutostartPrint",
"description": "Autostart a print job after conneting.",
"author": "Olli",
"content": "The Plugin starts a print job after the Printer is connected (e.g. after powering up). It selects the newest uploaded file for print.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)For implementation details please visit the homepage.",
"tags": ["printer"]
},

{
"id": "/plugins/AutoLogout",
"url": "/plugins/AutoLogout/",
"date": "2019-10-03 00:00:00 -0500",
"title": "AutoLogout",
"description": "Plugin logs out the user if there is some time of inactvity or after a print job is finished.",
"author": "Olli",
"content": "Plugin logs out the user if there is some time of inactvity or after a print job is finished.The time of inactivity and also the print status for the logout can be adjusted.Plugin starts a countdown timer after login and if the timer is count to zero, the user is automatically logged out.The timer is restarted each time a user clicks on “something” like a tab-change.For implementation details please visit the homepage.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["printer"]
},

{
"id": "/plugins/metadatapreprocessor",
"url": "/plugins/metadatapreprocessor/",
"date": "2019-10-03 00:00:00 -0500",
"title": "MetadataPreprocessor",
"description": "Plugin to speed up the gcode analysis in OctoPrint",
"author": "awenelo, Sven Lohrmann",
"content": "This OctoPrint plugin uses a generated metadata comment in the gcode file to speed up the analyzing process on systems with limited resources like the Raspberry PI.As an example: Analyzing a 7MB gcode file on my Raspberry PI B+ took ~17min. With included metadata only 2s while generating the metadata itself took additional 8s on my laptop.How it worksThe separate analysis script uses OctoPrint’s gcode interpreter to analyze the given gcode file. After the analysis has finished the metadata is written to the beginning of the file.If the gcode is uploaded the plugin stops the gcode analysis started by OctoPrint and looks whether the file contains such metadata or not. If metadata is found it will be added to the .metadata.yaml and the METADATA_ANALYSIS_FINISHED event will be fired. Otherwise the file will be analyzed by OctoPrint as usual by adding it to the analysis queue again.Installation of the analysis scriptGuides for Linux and Windows can be found in the wiki.",
"tags": ["gcode","metadata"]
},

{
"id": "/plugins/orvibos20",
"url": "/plugins/orvibos20/",
"date": "2019-10-03 00:00:00 -0500",
"title": "OctoPrint-OrviboS20",
"description": "Plugin to control Orvibo S20 Smart Plug from the OctoPrint web interface.",
"author": "cprasmu",
"content": "Orvibo S20Work inspired by OctoPrint TP-Link WiFi SmartPlug and Orvibo, this plugin controls an Orvibo S20 smart-plug via OctoPrint’s nav bar.ScreenshotsSettingsOnce installed go into settings and enter the ip address for your Orvibo S20.  IP          IP or hostname of plug to control.        Label          Label to use for title attribute on hover over button in navbar.        Icon Class          Class name from fontawesome to use for icon on button.        Warn          The left checkbox will always warn when checked.      The right checkbox will only warn when printer is printing.        GCODE          When checked this will enable the processing of M80 and M81 commands from gcode to power on/off plug.  Syntax for gcode command is M80/M81 followed by hostname/ip.  For example if your plug is 192.168.1.133 your gcode command would be M80 192.168.1.133        postConnect          Automatically connect to printer after plug is powered on.      Will wait for number of seconds configured in Auto Connect Delay setting prior to attempting connection to printer.        preDisconnect          Automatically disconnect printer prior to powering off the plug.      Will wait for number of seconds configured in Auto Disconnect Delay prior to powering off the plug.        Cmd On          When checked will run system command configured in System Command On setting after a delay in seconds configured in System Command On Delay.        Cmd Off          When checked will run system command configured in System Command Off setting after a delay in seconds configured in System Command Off Delay.      ",
"tags": ["Orvibo","S20","Smartplug","Power"]
},

{
"id": "/plugins/mmu2filamentselect",
"url": "/plugins/mmu2filamentselect/",
"date": "2019-10-04 00:00:00 -0500",
"title": "OctoPrint-Mmu2filamentselect",
"description": "Select the filament for Prusa MMU2 when printing in single mode.",
"author": "Thomas Köckerbauer, Florian Schütte",
"content": "This plugin shows a dialog to select the filament when a print on a Prusa printer with MMU2 is started in single mode.The dialog is shown, when the plugin detects a ‘Tx’ command in the gcode.So you don’t have to go to your printer and select the filament to be used. It can now be done from within Octoprint.A timeout can be set in the settings (default 30 seconds), after which the dialog is closed. When this happens you have to select the filament on the printer as usual.",
"tags": ["prusa","mmu2","gcode","prusa mmu2","filament","notification"]
},

{
"id": "/plugins/filamentstorage",
"url": "/plugins/filamentstorage/",
"date": "2019-10-25 00:00:00 -0500",
"title": "OctoPrint-Filamentstorage",
"description": "Plugin for OpenSource Filament Storage Containers that report Temp, Humidity, and scale values over USB.",
"author": "Walt Moorhouse",
"content": "Connects to any Filament Storage Box supporting the below serial communications:1) sends periodic updates in the following format:    H:xx.xx% T:xx.xxC S1:x.xxkg S2:x.xxkg S3:x.xxkg S4:x.xxkg P:[ON|OFF]1) accepts the following commands:    1) SET H=xx (sets maxHumidity to xx)    1) SET T=xx (sets maxTemperature to xx)    1) TARE y (Tares scale y, 0&lt;y&lt;5)",
"tags": ["filament","usb"]
},

{
"id": "/plugins/CrealityTemperature",
"url": "/plugins/CrealityTemperature/",
"date": "2019-10-28 00:00:00 -0500",
"title": "Creality Temperature Fix",
"description": "Fix to parse correctly temperatures from Creality printer",
"author": "Romain Odeval, Jean-Christophe Heger",
"content": "Fix to parse correctly temperatures from Creality printers.Originally created by Jean-Christophe Heger on https://community.octoprint.org/t/temperature-info-not-parsed-correctly/3557/12Tested on :  CR-10S Pro  CR-X",
"tags": ["creality","temperature"]
},

{
"id": "/plugins/thingiverse",
"url": "/plugins/thingiverse/",
"date": "2019-10-28 00:00:00 -0500",
"title": "OctoPrint-Thingiverse",
"description": "This plugin creates a new tab where Thingiverse website is embedded.",
"author": "stefancandrea",
"content": "OctoPrint-ThingiverseUPDATE 2020.08.13The plugin will no longer work. This is left here as a reminder for someone who will build a new Octoprint Thingiverse Plugin directly from the Thingiverse API.This is why the plugin doesn’t work anymore, and the Thingiverse team does not allow me to run this plugin inside an iframe, because then have an API.So maybe if someone has time and is willing to build such a thing, that will be great.This repository is open for everyone, for then mentioned task.DescriptionThis plugin adds the ability to browse Thingiverse website from OctoPrint.A lot of people use Thingiverse website for their 3D model portfolio, but they needto change windows all the time (ALT+TAB).No more!Now you can search 3D models inside your OctoPrint environment.Tip:If you have Slic3r or Cura engine plugin, all you need is your OctoPrint. No browser, no external slicing engines.Search the model &gt; Download  &gt; Open zip file &gt; Drag&amp;Drop .stl file &gt; Print!.Here is a YouTube Video that can help you install the latest Slic3r slicer including 3d representation of the model.ScreenshotsInstallInstall via the bundled Plugin Manager or manually using this URL:            https://github.com/stefancandrea/OctoPrint-Thingiverse/archive/master.zip   SetupOnce installed go into OctoPrint Settings &gt; Thingiverse where you can enable/disable this function and follow a small guide for a cleaner and ergonomic view of the website.DisclaimerThis plugin adds a tab to the OctoPrint interface that loads the Thingiverse website within an iframe.The Thingiverse website is copyright, trademark, and owned by MakerBot Industries, LLC, see their T&amp;C for additional information regarding the use of their website and service(s).The author of this plugin is not responsible for any malicious action regarding MakerBot Industries, LLC property.Support the effortIf you found this plugin useful you can support it’s creator.Thank you.",
"tags": ["Thingiverse","embedded website"]
},

{
"id": "/plugins/influxdb",
"url": "/plugins/influxdb/",
"date": "2019-11-02 00:00:00 -0500",
"title": "OctoPrint-InfluxDB",
"description": "Writes temperatures and events to an Influx database.",
"author": "Aaron Griffith",
"content": "An InfluxDB data gathering plugin forOctoPrint. Track your printer’s progress and temperature in InfluxDB!See the plugin settings page to set InfluxDB server, target database,field prefix, and poll interval.",
"tags": ["data","events"]
},

{
"id": "/plugins/obico",
"url": "/plugins/obico/",
"date": "2019-11-07 00:00:00 -0600",
"title": "Obico for OctoPrint",
"description": "Securely monitor and control your OctoPrint-connected printer from anywhere for free with Obico. Get unlimited live webcam streaming, full OctoPrint remote access, printer status notifications, and a free companion mobile app for iOS and Android. The best part? AI-powered failure detection watches your prints so you don’t have to. (Obico is the successor of The Spaghetti Detective.)",
"author": "The Obico team",
"content": "Obico is the successor of The Spaghetti Detective.Welcome to Obico, the all-in-one smart 3D printing platform!Connecting your 3D printer to Obico makes your 3D printer smarter and gives you peace of mind through many great features.Features📹 Unlimited Webcam StreamingCheck in on your prints and watch the livestream from anywhere.🪄  AI Failure DetectionAI watches your prints for failures so you don’t have to.  Configure settings to pause the print or just notify you when a failure is detected.🛎️ Print Status NotificationsFully customizable printer status notifications are available via mobile push notifications, email, SMS, Telegram, Discord and many more channels.🎮 3D Printer Remote ControlStart, stop, pause, and control every espect of your 3D printer from anywhere.📱 Mobile AppThe obico mobile app for iOS and Android gives you an easy way to monitor and control your 3D printer at all times.If you have a favorite OctoPrint mobile app, Obico’s OctoPrint tunneling feature lets you use OctoApp, Polymer, and OctoPod from anywhere.🔥 Easily Manage Multiple PrintersManage multiple printers from one easy to use application from any device.🤝 Share Prints with Your FriendsShare a secure link of your printer’s live webcam stream with your friends so they can watch your prints come to life.PicturesSecure OctoPrint Remote Access from Anywhere with OctoPrint TunnelingAI Failure Detection Watches Your Prints For YouiOS and Android App          Realtime Remote Monitoring            Automatic Failure Detection            Easily  Manage Multiple Printers            Remote 3D Printer Control            Upload G-Code &amp; Start Prints            Full Screen Webcam Streaming  Curious if the AI Failure Detection Really Works?To date, our AI failure detection has watched over 60-million hours of 3D priting and caught hundreds of thousands of failures. Here are a few real-life examples:\tVideo courtesy of TSD user Jimmy.\tVideo courtesy of TSD user Lila.More failure detection examples.Getting StartedSetting up Obico is easy! Just install the Obico plugin and follow the steps in the setup wizard! If you run into any trouble getting started, you can check out the Obico for OctoPrint Setup Guide.Create an Obico Cloud account to run Obico with no extra setup required or you can self-host your own Obico Server. Learn more about the different ways to run Obico.Is Obico Free?The Obico Cloud free plan is 100% free! Some features are limited due to the cost required for us to run and maintain the Obico Cloud. The Pro Plan gives you full access to all of Obico’s features for the price of a couple of coffees per month. See the pricing.Of course, since Obico is open-source, you are free (sorry for the pun!) to self-host your own Obico Server! Compare self-hosting versus Obico Cloud, or read the self-hosting documentation.",
"tags": ["remote","monitor","webcam","phone","control","port forwarding","safe","secure","internet","remote access","remote app","remote camera","remote printing","monitoring","AI","Machine Learning","app","mobile","mobile app","notification","cloud","free","plugin support","alert","smart","email"]
},

{
"id": "/plugins/thespaghettidetective",
"url": "/plugins/thespaghettidetective/",
"date": "2019-11-07 00:00:00 -0600",
"title": "Access Anywhere - The Spaghetti Detective",
"description": "The Spaghetti Detective is now Obico! Please install \"Obico for OctoPrint\" instead.",
"author": "The Obico team",
"content": "Access Anywhere - The Spaghetti Detective plugin has beensucceeded by Obico for OctoPrint.Obico is everything you loved about The Spaghetti Detective, but smarter and more open.Please visit the Obico for OctoPrint plugin page or the Obicowebsite to learn more about Obico.For existing The Spaghetti Detective users, please:  Uninstall The Spaghetti Detective plugin while keep its data in OctoPrint.  Then install the Obico plugin.  All your existing settings in The Spaghetti Detective will be automatically migrated.For more info, go to everything about migrating from The Spaghetti Detective toObico.– The Obico Team (Formally TSD Team)",
"tags": ["remote","monitor","webcam","phone","control","port forwarding","safe","secure","internet","remote access","remote app","remote camera","remote printing","monitoring","AI","Machine Learning","app","mobile","mobile app","push notification","cloud printing","free","plugin support"]
},

{
"id": "/plugins/UltimakerFormatPackage",
"url": "/plugins/UltimakerFormatPackage/",
"date": "2019-11-16 00:00:00 -0600",
"title": "Cura Thumbnails",
"description": "This plugin adds support for Ultimaker Format Package (.ufp) files.",
"author": "jneilliii",
"content": "Cura Thumbnails(formerly Ultimaker Format Package)This plugin adds support for Ultimaker Format Package (.ufp) files. Ultimaker Format Package files are based on Open Packaging Conventions (OPC) and contain compressed gcode and a preview thumbnail. This format will automatically be used by the OctoPrint Connection plugin in Cura (install via Marketplace) if this plugin is installed.The preview thumbnail can be shown in OctoPrint from the files list by clicking the newly added image button.The thumbnail will open in a modal window.If enabled in settings the thumbnail can also be embedded as an inline thumbnail within the file list itself. If you use this option it’s highly recommended to use Themify to make the file list taller and/or adjust the thumbnail’s size.  The image selector for this in Themeify should be div.row-fluid.inline_thumbnail &gt; img but I haven’t yet tested personally.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Ultimaker Format Package","ufp","Cura"]
},

{
"id": "/plugins/filamentrevolutions",
"url": "/plugins/filamentrevolutions/",
"date": "2019-11-29 00:00:00 -0600",
"title": "Filament Sensor Revolutions",
"description": "Use 1 or 2 filament sensors to pause printing or send GCode commands when filament runs out or is jammed.",
"author": "RomRider",
"content": "OctoPrint plugin that integrates with 1 or 2 filament sensors hooked up to a Raspberry Pi GPIO pin and allows the filament spool to be changed during a print if the filament runs out or is jammed.You can pause or send GCode commands when a sensor is tripped. Behaviours can be different between the runout sensor and the jam sensor.An API is available to check the filament sensors status via a GET method:  to /plugin/filamentrevolutions/filament for the filament sensor      to /plugin/filamentrevolutions/jammed for the jam sensor    {status: \"-1\"} if the sensor is not setup  {status: \"0\"} if the sensor is OFF (filament not present/filament not jammed)  {status: \"1\"} if the sensor is ON (filament present/filament jammed)Here’s the settings page:Initial work based on the Octoprint-Filament-Reloaded plugin by kontakt.",
"tags": ["filament","sensor"]
},

{
"id": "/plugins/mystromswitch",
"url": "/plugins/mystromswitch/",
"date": "2019-12-03 00:00:00 -0600",
"title": "OctoPrint-MyStromSwitch",
"description": "Plugin to integrate myStrom Switch into your OctoPrint installation",
"author": "David Zingg",
"content": "Plugin to integrate myStrom Switch into your OctoPrint installation",
"tags": ["MyStrom","Switch","Relay"]
},

{
"id": "/plugins/resource_monitor",
"url": "/plugins/resource_monitor/",
"date": "2019-12-03 00:00:00 -0600",
"title": "Resource Monitor",
"description": "A plugin to view the current CPU, RAM, disk and network usage on your system",
"author": "Renaud Gaspard",
"content": "This plugin adds a neat tab containing various information and graphs about your system resource usage.It displays information about your CPU, memory, disks and network usage.",
"tags": ["resource","monitor","memory","disk","network","cpu","processor","usage"]
},

{
"id": "/plugins/prometheus_exporter",
"url": "/plugins/prometheus_exporter/",
"date": "2019-12-09 00:00:00 -0600",
"title": "Prometheus Exporter",
"description": "A plugin for prometheus compatible metrics endpoint",
"author": "Gergo Torcsvari",
"content": "This is a utility plugin, which enables the prometheus server to scrape metrics from your octoprint instance.Later on, you can use data vizualisation tools (for example grafana) to track and visualize your printer(s) status(es).This plugin has no visible UI!Currently exported metrics:  python version - as info  octoprint version, hostname, os - as info  actual temperature - as gauge with tool identifier label  target temperature - as gauge with tool identifier label  client number - as gauge; the actually connected clients to the host  printer state - as info  started prints - as counter  failed prints - as counter  done prints - as counter  cancelled prints - as counter  timelaps count - as counter  print progress - as gauge with path label  slice progress - as gauge with path label  print total time - as counter  last print time - as gauge  fan speed - as gauge  extrusion total - as counter  x, y and z travel - as a counter  last print extrusion - as gaugeAll of the metrics are prefixed as octoprint_ for easier identification.The metrics endpoint is: http://localhost:5000/plugin/prometheus_exporter/metrics (change the host+port to your actual host+port)Example scrape config (or check it from the project repo):- job_name: 'octoprint'    scrape_interval: 5s    metrics_path: '/plugin/prometheus_exporter/metrics'    static_configs:      - targets: ['octoprint:80']If you have authentication enabled use this version: - job_name: 'octoprint'    scrape_interval: 5s    metrics_path: '/plugin/prometheus_exporter/metrics'    params:      apikey: ['__OCTOPRINT_APIKEY__']    static_configs:      - targets: ['octoprint:80']For example grafana dashboard please visit the github repo.",
"tags": ["prometheus","grafana","monitor","monitoring","usage","status"]
},

{
"id": "/plugins/PrusaLevelingGuide",
"url": "/plugins/PrusaLevelingGuide/",
"date": "2019-12-18 00:00:00 -0600",
"title": "Prusa Leveling Guide",
"description": "Plugin that helps walk you through adjusting the Prusa MK3 heatbed using the nylock mod",
"author": "Scott Rini",
"content": "AboutStart hereBed Leveling without Wave SpringsThis plugin is to help guide you through the fine adjustments of the nylock bed leveling method for Prusa MK3 printers, which is described in the above guide.  Make sure you start there and already have the nylocks applied to your bed before beginning.  This plugin allows you to select a profile for preheating, then begin adjustment.  For each round of adjustment, the plugin will send the configured mesh level code and gcode for retrieving values (generally G80; G81).  Once values are received, you can view how to adjust your bed in a number of ways.  You click continue to proceed with another round of leveling or click finish to finish up.You have the option of viewing the values in a table view or overlayed on a photo of the heatbed.  You can also customize whether you view raw values, degrees, decimal turns, or factional turns.",
"tags": ["prusa","bed level","mesh","nylock"]
},

{
"id": "/plugins/octohue",
"url": "/plugins/octohue/",
"date": "2020-01-31 00:00:00 -0600",
"title": "OctoHue",
"description": "Hue lighting control for Octoprint - Illuminate your printer and signal its status using Phillips Hue lights",
"author": "Simon Beckett",
"content": "OctoPrint-OctoHueIlluminate your print job and signal its status using a Philips Hue light.Features  Light on and off in coordination with the connection between Octoprint and your printer  Configure “Connected” light colour using colour picker or HTML hex colour codes  Customisable default brightness  Available Customisable Statuses:          Connected -  Default White      Print Finished - Default Green      Error - Default Red      See the TODO list at the end of this page for features on the roadmapSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/entrippy/OctoPrint-OctoHue/archive/master.zipHue Bridge ConfigurationOctohue requires 3 settings to function  The IP Address of you Hue Bridge  A User for octoprint to use when contacting your bridge  The numberic ID of your Hue light.Steps to find or configure these can be found in How to Develop for Hue - Getting StartedConfigurationOnce you have the Hue IP, Username, and Light ID, enter these into the appropriate field in Octohues menu in settings.TODO  Make all available statuses customisable  Per status brightness  LightID Discovery",
"tags": ["Philips Hue","Hue","Lights","Status","Automation"]
},

{
"id": "/plugins/progress_title",
"url": "/plugins/progress_title/",
"date": "2020-01-31 00:00:00 -0600",
"title": "Progress Title",
"description": "Show progress percentage in document title",
"author": "pwnbus",
"content": "A simple plugin that adds the completed print percentage in the web page title.",
"tags": ["progress","title"]
},

{
"id": "/plugins/terminalcommandsextended",
"url": "/plugins/terminalcommandsextended/",
"date": "2020-02-07 00:00:00 -0600",
"title": "Terminal Commands Extended",
"description": "Plugin that adds custom gcode command buttons to the Terminal tab.",
"author": "jneilliii",
"content": "Terminal Commands ExtendedThis plugin adds additional command buttons to the Terminal tab of OctoPrint.ConfigurationAdd buttons in settings. Use drop-down on added button to choose the icon and click added button to configure specific options for that button, including the command to run and optional paramaters.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["terminal tab","gcode","commands"]
},

{
"id": "/plugins/OctoPrint-hueCommands",
"url": "/plugins/OctoPrint-hueCommands/",
"date": "2020-03-18 00:00:00 -0500",
"title": "Add GCODE like HUE commands to OctoPrint",
"description": "Illuminate your print job and signal its status using a Philips Hue light. Enter a GCODE equivalent anywhere you want.",
"author": "LMS0815",
"content": "",
"tags": ["hue","gcode","automation","lights","philips hue","status","philips","gcode"]
},

{
"id": "/plugins/remove_ttys_ports",
"url": "/plugins/remove_ttys_ports/",
"date": "2020-03-23 00:00:00 -0500",
"title": "Remove /dev/ttyS* Ports (port auto detection fix)",
"description": "Removes any matched /dev/ttyS* ports from the serial port list again and thus works around autodetection issues with 1.4.0 on systems with such ports",
"author": "Gina Häußge",
"content": "This plugin patches the internal method inside OctoPrint that creates a list of the serial ports in your system tofilter out /dev/ttyS* entries, which were added to the default port pattern in OctoPrint 1.4.0.Install this plugin if you are running into issues with port auto detection no longer working on your instance whichworked flawlessly on earlier versions, especially if you have a Raspberry Pi camera or a touch screen installed (whichappear to add a /dev/ttyS port to the system at least in some cases).This is a work around for OctoPrint 1.4.0 until a generally better port auto detection solution can be released with1.4.1, and thus currently only works with OctoPrint 1.4.0.",
"tags": ["workaround","fix","auto detection","autodetection","serial port","port"]
},

{
"id": "/plugins/fixcbdfirmware",
"url": "/plugins/fixcbdfirmware/",
"date": "2020-03-25 00:00:00 -0500",
"title": "Fix CBD Firmware",
"description": "Fixes communication with a broken firmware making its rounds that identifies as \"CBD make it\"",
"author": "Gina Häußge",
"content": "This plugin works around issues with a firmware that identifies itself only with the string CBD make it in responseto M115 - hence the name “CBD Firmware” due to a lack of alternatives - and which wrongly implements some parts ofthe established communication protocol, causing severe issues when trying to communicate and print with it fromOctoPrint.You can read more about this firmware and what printers are currently known to ship with itin this FAQ entry.Installing this plugin should make any printers shipped with this broken firmware work with OctoPrint.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/OctoPrint/OctoPrint-Fix-CBD-Firmware/archive/master.zip",
"tags": ["workaround","communication","firmware","broken firmware","anycubic","xinkebot","qidi tech","tronxy","cbd","zwlf"]
},

{
"id": "/plugins/Plabric",
"url": "/plugins/Plabric/",
"date": "2020-03-26 00:00:00 -0500",
"title": "Plabric",
"description": "Manage and control your 3D printer anywhere without port forwarding or VPN.",
"author": "Plabric",
"content": "PlabricManage and control your 3D printer anywhere without port forwarding or VPN.Plabric plugin allows you to link your 3D printer with Plabric app (currently available for Android, iOS not yet available). Discover all features on https://plabric.comFor the moment, video stream is only available on x86_64 and armv7l (Raspberry) linux systems.How to installCheck our tutorial: Install PlabricOr install via the bundled Plugin Manageror manually using this URL: https://github.com/plabric/Octoprint-Plabric/archive/master.zipOnce the plugin is installed, follow the steps provided by te plugin for connect with your Plabric account.You can find the steps accessing to plugin options:    Click settings icon on Octoprint navigation bar.    On the left scrollable panel, search Plabric menu option and click it.    Follow the instructions provided.SupportDo you have any question or problem installing the plugin? Contact us at contact@plabric.com",
"tags": ["control","manage","remote","webcam stream","phone","cloud printing","remote access"]
},

{
"id": "/plugins/Python3PluginCompatibilityCheck",
"url": "/plugins/Python3PluginCompatibilityCheck/",
"date": "2020-03-31 00:00:00 -0500",
"title": "Python 3 Check",
"description": "Checks installed plugins for Python 3 compatibility based on their entry in Plugin Repository.",
"author": "jneilliii",
"content": "Python 3 CheckThis plugin simply adds a section in settings that allows you to check your installed plugins against the OctoPrint Plugin Repository list to see which ones are not yet Python 3 compatible.Checking CompatibilityAfter installing, open OctoPrint’s settings and click Python 3 Check in the plugins section. Press the Check Compatibility button and a list of links to the plugin’s homepages will be generated. Click the link and open a new issue in the plugin’s repository requesting for Python 3 compatibility.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": []
},

{
"id": "/plugins/AutoTerminalInput",
"url": "/plugins/AutoTerminalInput/",
"date": "2020-04-01 00:00:00 -0500",
"title": "Auto Terminal Input",
"description": "Automatically focuses the command input when switching to the Terminal tab in OctoPrint.",
"author": "jneilliii",
"content": "OctoPrint-AutoTerminalInputSimple plugin that will automatically activate the command input field when switching to the Terminal tab of OctoPrint.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["terminal"]
},

{
"id": "/plugins/prusaslicerthumbnails",
"url": "/plugins/prusaslicerthumbnails/",
"date": "2020-04-22 00:00:00 -0500",
"title": "Slicer Thumbnails",
"description": "Extracts various slicer's embedded thumbnails from gcode files.",
"author": "jneilliii",
"content": "Slicer ThumbnailsThis plugin will extract embedded thumbnails from gcode files created from PrusaSlicer, SuperSlicer, Cura, or Simplify3D.The preview thumbnail can be shown in OctoPrint from the files list by clicking the newly added image button.The thumbnail will open in a modal window.If enabled in settings the thumbnail can also be embedded as an inline thumbnail within the file list itself. If you use this option it’s highly recommended to also set the option to set file list height or position inline image to the left.ConfigurationPrusaSlicerAvailable via the UI since version 2.3, requires expert mode to be enabled in the upper right corner of the program to see the setting.Warning: the higher the resolution of the thumbnail you use in this setting the larger your gcode file will be when sliced.SuperSlicerAvailable via the UI since version 2.2.53, requires expert mode to be enabled in the upper right corner of the program to see the setting.Warning: the higher the resolution of the thumbnail you use in this setting the larger your gcode file will be when sliced.CuraA post-processing script has been bundled since version 4.9. For older versions you can manually add the post-processing script as described here.Simplify3DAvailable as a post-processing script for windows or linux thanks to @boweeble and @NotExpectedYet.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["thumbnail","preview","PrusaSlicer"]
},

{
"id": "/plugins/filamentsensorsimplified",
"url": "/plugins/filamentsensorsimplified/",
"date": "2020-04-23 00:00:00 -0500",
"title": "Filament Sensor Simplified",
"description": "This plugin reacts to filament sensor output. If triggered it issues desired gcode to printer.",
"author": "Lukáš Malatinský",
"content": "DescriptionThis plugin reacts to short lever microswitch output like thisIf triggered it issues configured command to printer.Let’s check some features:  pop-up notification when printer runs out of filament  very handy pop-up when printer requires user input while changing filament  test button so you know if your sensor really works or not  filament check at the start of the print - if no filament present it won’t start printing, again pop-up will appear  filament check at the end of filament change - just to be sure you won’t start printing with no filament  navbar icon where you can immediately see if the filament’s in  info pop-up when plugin hasn’t been configured  filament runouts can be repeatable  user-friendly and easy to configure  pin validation so you don’t accidentally save wrong pin number  detection of used GPIO mode - this makes it compatible with other plugins  handles delibrate M600 filament change  if your printer doesn’t support M600 you have option to use Octoprint pause and the plugin will park the head to X0 Y0  runs on OctoPrint 1.3.0 and higherNOTE: this plugin won’t work if you use OctoPrint only to start printing from SD cardSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/luckyx182/Filament_sensor_simplified/archive/master.zipConfigurationConfiguration consists of these parameters:  Board mode - Physical/BOARD or GPIO/BCM mode, Physical/BOARD mode - referring to the pins by the number, GPIO/BCM mode - referring to the pinsby the “Broadcom SOC channel”, if this is selected by 3rd party, this option will be disabled with note on GUI  pin number - pin number based on selected mode  power input to sensor - input is connected to ground or 3.3 V  switch type - switch should be triggered when opened (input of the sensor doesn’t transfer to its output) or triggered when closed (input of the sensor is transferred to its output)  runout action - choose whether you want or send M600 X0 Y0 or other G-code or use Octoprint pause  g-code to send to printer on filament runout - default is M600 X0 Y0Default pin is 0 (not configured) and ground (as it is safer, read warning below).After configuring it is best to restart Octoprint and dry-run to check if the filament change works correctly to avoid any problems.WARNING! Never connect the switch input to 5V as it could fry the GPIO section of your Raspberry!AdviceYou might experience the same problem as I experienced - the sensor was randomly triggered. Turns out that if running sensor wires along motor wires, it was enough to interfere with sensor reading.To solve this connect a shielded wire to your sensor and ground the shielding, ideally on both ends.If you are unsure about your sensor being triggered, check OctoPrint logsSupport meThis plugin was developed in my spare time.If you find it useful and like it, you can support me by clicking the button below :)",
"tags": ["filament","sensor","simplified","simple","trigger","runout","gpio","raspberry"]
},

{
"id": "/plugins/continuousprint",
"url": "/plugins/continuousprint/",
"date": "2020-04-24 00:00:00 -0500",
"title": "Continuous Print",
"description": "This plugin automates your printer! Queue your prints, push the button, and walk away - now with auto bed clearing and failure recovery.",
"author": "Scott Martin (Current), Louis Sarwal, Paul Goddard",
"content": "  Add files to the queue and set a number of copies. The plugin will print the files in sequence, clearing the bed after each print to set up for the next one.  Group files together to run them as a unit. Don’t make 10 boxes by printing 10 bases, then 10 lids - instead, define a “box” job and print box/lid combos in sequence.  Use failure recovery to stop wasting time and filament. Optional Spaghetti Detective integration detects bed adhesion failures and recovers automatically.WARNING: Your printer must have a method of clearing the bed automatically, with correct GCODE instructions set up in this plugin’s settings page - damage to your printer may occur if this is not done correctly. If you want to manually remove prints, look in the plugin settings for details on how to use @pause so the queue is paused before another print starts.",
"tags": ["continuous print","queueing","automation","failure detection"]
},

{
"id": "/plugins/FriendlyNeighborhoodBeeper",
"url": "/plugins/FriendlyNeighborhoodBeeper/",
"date": "2020-04-25 00:00:00 -0500",
"title": "Friendly Neighborhood Beeper",
"description": "Beeps after completion/failure of a print, but only during the specified hours",
"author": "Alex Bahm",
"content": "This plugin is designed to be used to notify when a print is complete. While gcode to beep on print completion can easily be added to the slicer/octoprint, I wanted a way to only beep during certain time frames as I don’t want my neighbors to hate me for my printer beeping at 2 in the morning.Requirements  Currently requires the use of Gcode M300 to trigger the beepConfigurationActive HoursThese settings define the hours the printer may beep when the printer completes. These default to 8am - 10pm as I won’t likely be checking my printer outside those hours.Beep Tone SettingsIf you want to change the tone, or duration of the beep the printer makes, these can be changed to modify that.Can be configured for custom tonesBeep SettingsNotify On Pause: Allow notification on pause eventsWait for Cooldown: Will delay the beep until the bed has reached the indicated temperature (while respecting active hours)",
"tags": ["notification","beep","print finished","simple","control"]
},

{
"id": "/plugins/TemperatureLegendMover",
"url": "/plugins/TemperatureLegendMover/",
"date": "2020-04-26 00:00:00 -0500",
"title": "TemperatureLegendMover",
"description": "Move the Temperature-Legend into a specific corner",
"author": "Olli",
"content": "For implementation details please visit the homepage.Support my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["temperature","legend"]
},

{
"id": "/plugins/emergencystopsimplified",
"url": "/plugins/emergencystopsimplified/",
"date": "2020-04-26 00:00:00 -0500",
"title": "Emergency Stop Simplified",
"description": "This plugin reacts to a switch or button, if triggered (switch open) it issues M112 command to printer.",
"author": "Mechazawa",
"content": "DescriptionThis plugin reacts to a switch or button, if triggered (switch open) it issues M112 command to printer.Let’s check some features:  info pop-up when plugin hasn’t been configured  user-friendly and easy to configure  runs on OctoPrint 1.3.0 and higherSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/Mechazawa/Emergency_stop_simplifiedConfigurationConfiguration couldn’t be simpler, all you need is to configure listening board pin (board mode) and if the second switch terminal is connected to ground or 3.3V.Default pin is -1 (not configured) and ground (as it is safer, read below).WARNING! Never connect the switch input to 5V as it could fry the GPIO section of your Raspberry!",
"tags": ["emergency","stop","simplified","simple","trigger","button"]
},

{
"id": "/plugins/webhooks",
"url": "/plugins/webhooks/",
"date": "2020-04-29 00:00:00 -0500",
"title": "OctoPrint-Webhooks",
"description": "This allows you to send a webhook to any URL when events happen on OctoPrint.",
"author": "Blane Townsend",
"content": "OctoPrint-WebhooksThis allows you to send a webhook (a.k.a. API Request) to any URL when certain events happen on OctoPrint such as whena print starts, finishes, fails, …This plugin supports snapshot photos, OAuth, custom HTTP Methods (GET, POST, PUT, DELETE), custom headers, custom data and data format, custom encoding (json vs. x-www-form-urlencoded), and much more. It is very advanced and can send almost any kind of request to your server when an OctoPrint action occurs.Blog PostI wrote a blog post to explain more about what this plugin is and why I built it. Blog PostSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/2blane/OctoPrint-Webhooks/archive/master.zipOnce you’ve installed the plugin, go to the settings page for this plugin. The page is called “Webhooks”.Select which events will trigger a webhook, then change the following:URLThe url that will be called when an event occurs such as https://www.myapi.com/v1/methodHTTP METHODThe type of HTTP request to make… Usually this is POST.CONTENT TYPEThis determines how the data is encoded before it is sent to your server. Usually, JSONwill work, but on some older systems x-www-form-urlencoded might be needed.NOTE: The proper HTTP header will be set for ‘Content-Type’ if you don’t supply one that allows the data to be sent properly. For instance, if you set the Content Type setting to JSON, then ‘application/json’ must appear somewhere your ‘Content-Type’ header. If ‘application/json’ does not appear in your ‘Content-Type’ header or is set to some other value, it will get replaced. So, you could set it to ‘application/json charset=utf8;’ if you wanted to, but not ‘application/yoyo’ as that would get replaced to ‘application/json’.API SECRETThis field is optional. If you want to provide a secret key/password that you can check on the server this is the easiest way to do that. For instance, if you set the API Secret to ‘abcdef123456’, then on your server you can check to make sure the API Secret is ‘abcdef123456’. If it is not, then the request came from something other than your OctoPrint Server and you should ignore the request (Somebody is trying to hack you!). Also, for security reasons you should set this to some long random string instead of something like ‘password’.DEVICE IDENTIFIERA name or id that you can provide to your printer to distinguish printers from each other. You can use this service with multiple printers using the same settings. Just set this device identifier to something different and you’ll be able to detect which printer sent the event.Webhook RequestBy default, the webhook will be called with the following data:{  \"deviceIdentifier\": \"the DEVICE IDENTIFIER in settings\",  \"apiSecret\": \"the API SECRET in settings\",  \"topic\": \"the name of the event - see below for events\",  \"message\": \"a description of the event - can be used for display purposes\",  \"extra\": {...} //a json object of data related to the event - different for each event}To change the format of the request, there are some advanced configuration parameters you can modify.Advanced ConfigurationHeadersProvide a JSON dictionary of HTTP headers that will be passed along with the request such as:{  \"Content-Type\": \"application/json\"}DataProvide a JSON dictionary of parameters that will be passed along with the request such as:{  \"deviceIdentifier\":\"@deviceIdentifier\",  \"apiSecret\":\"@apiSecret\",  \"topic\":\"@topic\",  \"message\":\"@message\",  \"extra\":\"@extra\",  \"custom1\":\"my custom data\",  \"custom2\":\"my second piece of custom data\",  \"print_name\":\"@job.file.name\",  \"estimated_print_time\":\"@job.estimatedPrintTime\"}You can use @param syntax to insert variables into the JSON for both theHeaders and Data. For instance, if above you set ‘DEVICE IDENTIFIER’ to “Blane’s Printer”,then @deviceIdentifer will get replaced with “Blane’s Printer” when the webhook requestis made.You can also use dot notation to grab only parts of a dictionary. For instance,if there was a param named @job that contained the following:{  \"file\": {    \"name\": \"myFile.gcode\", //the name of your file    \"path\": \"/myFile.gcode\",    ...  }}Then, you could use the notation @job.file.name to just retrieve the file’s nameinstead of the entire dictionary.You can also use multiple @param variables in the same string. For instance:{  \"custom1\": \"@param1 some text here @param2 - @param3\"}Just make sure to put a space after each @param.See below for the list of available variables that you can use with the @param syntax.Available Variables@deviceIdentifier - the user set DEVICE IDENTIFIER found in settings@apiSecret - the user set API SECRET found in settings@topic - the type of event that was triggered. See below for a list of topics/events.@message - a short description of the type of event that was triggered.@extra - a dictionary of extra data that was passed along by OctoPrint. This dictionary depends on the event, but is usually something like the following:{  \"origin\": \"local\",  \"name\": \"myFile.gcode\",  \"user\": \"myUserName\",  \"owner\": \"owner of the file\",  \"path\": \"/someFolder/myFile.gcode\",  \"size\": 10890569}See this linkfor the data that is passed with each event.@state - a dictionary of data showing the current state of the printer{  \"text\": \"Operational\",  \"flags\": {    \"operational\": true,    \"printing\": false,    \"cancelling\": false,    \"pausing\": false,    \"resuming\": false,    \"finishing\": false,    \"closedOrError\": false,    \"error\": false,    \"paused\": false,    \"ready\": true,    \"sdReady\": true  }}See this linkfor more information.@job - a dictionary of data about the current print job{  \"file\": {    \"name\": \"DarwinKeycap.gcode\",    \"path\": \"DarwinKeycap.gcode\",    \"display\": \"DarwinKeycap.gcode\",    \"origin\": \"local\",    \"size\": 242038,    \"date\": 1588195405  },  \"estimatedPrintTime\": 476.05552375713864,  \"averagePrintTime\": 48.8202253183409,  \"lastPrintTime\": 31.290278981000007,  \"filament\": {    \"tool0\": {      \"volume\": 0.8077585001602579,      \"length\": 335.8269600000015    }  },  \"user\": \"iAmLegend\"}See this linkfor more information.@progress - a dictionary of data about the current print job’s progress{  \"completion\": 14.496484023169915, //percent complete  \"filepos\": 35087, //the current byte position in the file being printed  \"printTime\": 29, //seconds already spent printing  \"printTimeLeft\": 40, //seconds remaining  \"printTimeLeftOrigin\": \"average\" //how the time remaining was calculated.}See this linkfor more information.@currentZ - the current z height of the print head in mm.@offsets - any print offsets if applicable … otherwise an empty dictionary.@meta - a dictionary of metadata for the file you are printing.{  \"statistics\": {    \"averagePrintTime\": {      \"_default\": 49.04197595574509    },    \"lastPrintTime\": {      \"_default\": 50.53992706    }  },  \"hash\": \"2d2f2c6a410f8786b62604422799c9f3c0721367\",  \"analysis\": {    \"estimatedPrintTime\": 476.05552375713864,    \"printingArea\": {      \"maxZ\": 5.6,      \"maxX\": 136.67,      \"maxY\": 116.672,      \"minX\": 0.0,      \"minY\": -3.0,      \"minZ\": 0.0    },    \"dimensions\": {      \"width\": 136.67,      \"depth\": 119.672,      \"height\": 5.6    },    \"filament\": {      \"tool0\": {        \"volume\": 0.8077585001602579,        \"length\": 335.8269600000015      }    }  },  \"history\": [    {      \"timestamp\": 1588195498.7716029,      \"printTime\": 50.352958230999995,      \"printerProfile\": \"_default\",      \"success\": True    },    ...  ]}@currentTime - The time of the event in number of seconds since the epoch.The epoch is usually January 1 1970, 00:00:00 (UTC).@percentCompleteMilestone - The last percent complete milestone.Usually this is used with the Print Progress event for the message text.@snapshot - This is a special parameter that can only be used on the first levelof a dictionary. For instance, you can use it like this:{  \"snap\": \"@snapshot\"}but not like this:{  \"snap\": {    \"image\": \"@snapshot\"  }}The @snapshot parameter will be replaced with a jpeg image if a snapshot can be retrievedfrom your connected webcam.Make sure under FEATURES -&gt; Webcam &amp; Timelapse -&gt; the ‘Snapshot URL’ is set and working.This is what is used to grab a snapshot. The snapshot is then resized so that it can bequickly transported, and then sent along with your webhook under the key name you providedto the @snapshot parameter. If for some reason an image can’t be taken or there is an imageprocessing issue, then the @snapshot parameter’s key will be deleted and removed fromthe request. So, it is recommended that you make the image parameter optional on your server.NOTE: If you use the @snapshot parameter, the data will automatically be encoding usingmultipart/form-data and will override your settings and headers to match.NOTE: In some cases the data might not be available. For instance @meta.statistics.lastPrintTime might not exist. If this happens, the @param will be replaced with an empty string.Strategy - Getting all dataYou can copy and paste the following in the DATA box to get all the available data.Then, you can remove and rearrange things as necessary.{  \"deviceIdentifier\":\"@deviceIdentifier\",  \"apiSecret\":\"@apiSecret\",  \"topic\":\"@topic\",  \"message\":\"@message\",  \"extra\":\"@extra\",  \"state\": \"@state\",  \"job\": \"@job\",  \"progress\": \"@progress\",  \"currentZ\": \"@currentZ\",  \"offsets\": \"@offsets\",  \"meta\": \"@meta\",  \"currentTime\": \"@currentTime\",  \"snapshot\": \"@snapshot\"}Events / TopicsThe following is the list of topics that can trigger a webhook.  Print StartedThe print has started.  Print DoneThe print has finished.  Print FailedThe print has failed.  Print PausedThe print has been paused.  User Action NeededCalled on Prusa Printers when a color change is necessary.  ErrorAn error has occurred. Can refer to many different types of errors.  Print ProgressSends progress reports every ‘x’ percent where ‘x’ is defined by you.For instance, you can send a progress webhook every 10%, 25%, or 7% if you wanted. For instance, if you set ‘x’ to 5, then you would get a notification at 5%, 10%, 15%, 20%, …, 95%.NOTE: 0% and 100% are not triggered by this event, use ‘Print Started’ and ‘Print Done’for those events.Event DataFor details on what ‘extra’ data is provided with each event, check out the following.https://docs.octoprint.org/en/master/events/index.html#printingOAuthOAuth is a common authentication mechanism used by many APIs.If your server requires you to first make an API call trading credentialsfor tokens so that you can use those tokens in your API request,then OAuth should be enabled. You can then access the properties of theOAuth response using something like @access_token in the DATA and HEADER settings foryour webhook request.Once you’ve ticked the box to enable OAuth, you’ll see some fields that you need tofill out such as the url to call, the HTTP Method, Content-Type, Headers, and Data.These work similar to the webhook settings, except you cannot use the @param sytax.When an event triggers a webhook, this OAuth request will be called first (if enabled).The response is expected to be JSON and will be parsed. All the keys in the JSON dictionarywill be available as @params that will be passed into the webhook request.For instance, if the reponse of the OAuth request was{  \"access_token\": \"abc123\",  \"refresh_token\": \"efg456\",  \"expires_in\": 3600}then you could use @access_token, @refresh_token, and @expires_in inside the‘DATA’ and ‘HEADERS’ Advanced Settings to pass them into your webhook request.TESTINGAt the bottom of the settings page, you can simulate events to test out your API and make sure everything is working. Just choose the event type and click the ‘Send Test Webhook’ button. You’ll see a popup message (usually in the top left of the screen) showing you the result of the webhook and if there were any errors. You’ll be notified if there are any JSON parsing issues with the settings you provided or any networking issues etc. The API requests that are sent are expected to return HTTP status codes between 200 and 399. Anything outside of that range will be considered an error.NOTE: If you see a popup telling you that settings need to be reloaded - ignore this. Don’t select an option, instead click outside the box on the screen. You can get into a weird state where you change the settings and they aren’t being updated. If this happens just refresh the page and try again.",
"tags": ["webhook","api","url","events","prusa","color change","notification"]
},

{
"id": "/plugins/printoid",
"url": "/plugins/printoid/",
"date": "2020-04-30 00:00:00 -0500",
"title": "OctoPrint-Printoid",
"description": "Notifications plugin for Printoid (Android app for OctoPrint)",
"author": "Anthony Stéphan",
"content": "This is the official plugin made for the Printoid for OctoPrint application.It aims to send you push notifications to your device(s) on specific events on your OctoPrint server.This plugin has been inspired by the great plugin made by the developer of OctoPod for iOS.He plugin (the original one) can be found here.If you like the Printoid Plugin, then please support the developer of the OctoPod plugin, because he did an amazing work!The Printoid Plugin communicates with Firebase Cloud Messaging server over a Google Cloud Function, located at the following URL:https://us-central1-firebase-printoid.cloudfunctions.net/printoidPluginGatewayPrerequisitesPrintoid v15.01 (at least) should be available and installed on your phoneWhat CAN this plugin do for you?This plugin sends immediate push notifications to your Android devices runningPrintoid for OctoPrint when:  The state of your printer is changing (to PRINTING, to PAUSED, to ERROR, and back to OPERATIONAL, for example)  The print job reached a certain progress (every 10%, every 25% or at 50% only)  Your print is now complete (progress = 100%)  Your print reached specified layers (requires plugin DisplayLayerProgress plugin to be installed too)  Your heated bed reached a specific temperature (useful to know when you can easily remove your prints from the bed, or when you can get smooth first layer)  Your extruder cooled down below a specific temperature (useful to be informed when you can safely turn off your printer)  Your printer has been paused because it requires a user action (out of filament, or manual multi color printing or M600 detection)  Palette 2 / Pro encountered a problem while printing  MMU requires user assistance (it requires Prusa firmware)  Firmware errors (get security alerts like thermal runaway, probing failed, min temp error, max temp error…)This plugin does not need your phone to be connected to the same network as your OctoPrint server to send the notifications.You will be able to receive the notifications even if you are out of your home and/or connected to the cellular network (3G/4G/5G) for example.This plugin does not need your network to be opened to the Internet. You do not need to do port forwarding, and you do not need to setup a VPN ;)Printoid does not need to be opened on your device to receive the notifications from the plugin. The app can be killed and your phone can be sleeping, you will receive the notifications whatever happens!What CAN’T this plugin do for you?This plugin is not a plugin to control your 3D printer remotely. Please be nice, don’t yell at me because this was what you expected…May be this will be possible in the future, but for the moment it would require me too much work.This plugin only sends push to your device in order to show you notifications on your device for specific events.This way it will not update the information contained in the app (at least for the moment).SetupInstall the plugin via the bundled Plugin Manageror manually using this URL:https://github.com/anthonyst91/OctoPrint-Printoid/archive/master.zipConfigurationOnce the plugin has been installed:  Open the Settings panel of OctoPrint  Navigate to the Plugins section and select Printoid Notifications  Open the Printoid application on your phone, and connect it to your OctoPrint server  Wait few seconds for the app to be fully refreshed  From the OctoPrint interface, click on the Send test notification button  Check on your phone, you should receive your first notification!  The Printoid app is now paired with the Printoid plugin, you will receive notifications!",
"tags": ["printoid","bed temperature","print finished","Android","notifications"]
},

{
"id": "/plugins/smartpreheat",
"url": "/plugins/smartpreheat/",
"date": "2020-05-02 00:00:00 -0500",
"title": "Smart Preheat",
"description": "Parses GCode files and provides variables that can be accessed in GCode scripts. Reduces heatup time and allows for preheating before bed leveling.",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-SmartPreheat for more information.",
"tags": ["preheat","temperature"]
},

{
"id": "/plugins/terminalresponse",
"url": "/plugins/terminalresponse/",
"date": "2020-05-07 00:00:00 -0500",
"title": "Terminal Response",
"description": "Monitors terminal for a regular expression and allows you to respond with your own commands.",
"author": "Xiao Jin",
"content": "This plugin will monitor the terminal for regular expressions that you define. You can use parentheses to extract values from matches. You can then define commands to run in response to your regex matches and substitute the matches values to your liking.",
"tags": ["regex","regular","expressions","gcode","command","commands","terminal","monitor","send"]
},

{
"id": "/plugins/FlashForge",
"url": "/plugins/FlashForge/",
"date": "2020-05-18 00:00:00 -0500",
"title": "Flashforge/Dremel/PowerSpec Printer Support",
"description": "Enable OctoPrint to connect to certain FlashForge, Dremel and PowerSpec printers.",
"author": "Mrnt",
"content": "The plugin allows control of some FlashForge, Dremel and PowerSpec printers(such as the FlashForge Finder, Dreamer, etc) that connect via USB and do notappear as a serial port under OctoPrint.IMPORTANTFor details of which printers are supported and the level of functionalitysee the homepageSupport Additional DevelopmentThis plugin was/is developed by painstakingly reverse engineering the communicationbetween FlashPrint and FlashForge printers and much trial and error. If you find ituseful and/or want to see continued development, please consider making a donation.",
"tags": ["FlashForge","Dremel","PowerSpec"]
},

{
"id": "/plugins/EasyServo",
"url": "/plugins/EasyServo/",
"date": "2020-05-21 00:00:00 -0500",
"title": "Easy Servo",
"description": "Plugin to control two servos attached to a camera gimbal to control motion.",
"author": "iFrostizz, jneilliii",
"content": "Easy ServoHere is a simple plugin to control two servos using the OctoPrint Control tab. It has been programmed in conjuction with a camera gimbal mount design I published on Thingiverse here.It utilizes the SimpleApiPlugin from Octoprint in order to send commands to the GPIO pins.Example: EASYSERVO_REL 12 10 will move the servo attached to GPIO number 12 10 degrees in the positive direction from the current position. EASYSERVO_REL 13 -10 will move the servo attached to GPIO number 13 10 degrees in the negative direction from the current position.Note: The servos will initialize at 90 degrees on OctoPrint start up and is limited to a 90 degree rotation in either direction.A later update will support continous servos (you can do the mod yourself).Pre-Installation RequirementsPigpio installationPlease follow the steps below in order for this plugin to properly operate. Without these steps the plugin will not be able to control the assigned GPIO numbers on your Pi and as a result the servos will not move.  SSH to the pi and run the following command.sudo raspi-configSelect Interface OptionsSelect I2CSelect Yes to enable the ARM I2C interfacePress OkSelect Finish to exit raspi-config.  Now run the following commands to install and configure the required pigpio daemon.sudo apt-get install pigpiodsudo nano /lib/systemd/system/pigpiod.serviceThis will open a text editor. Change the ExecStart line to be /usr/bin/pigpiod -x -1 like the screenshot below in order to enable write access to all GPIO pins. You can adjust this command to fit your specific needs or to limit write capabilities to only the GPIO pins you are using. The plugin uses the default GPIO pins 12 for the X Axis and 13 for the Y axis. Check the pigpiod site for possible comand-line options and the Raspberry Pi Foundation site for additional GPIO information.Note: the last character at the end of the example line above is the number one.Press CTRL+X to exit, Press Y to save, Press enter to keep the original name.  Now run the following commands.sudo systemctl enable pigpiodsudo service pigpiod startsudo shutdownYour pi will shutdown and you are now ready to connect your servos.Warning: Make sure you Pi has enough time to cleanly shutdown and then unplug the power supply before continuing.Pimoroni installationSince the 0.2.2, the EasyServo plugin also support the Pimoroni library.This library can be installed by following the steps described here: https://github.com/pimoroni/pantilt-hat/blob/master/README.mdYou will need this library if you are using the Pan-Tilt hat from Pimoroni.WiringConnect the 5V and GND wires of your servos (recommended exernal power source) followed by the signal wires to the two GPIO numbers that you want to control with the plugin. The below diagram schows the servos connected to GPIO numbers 12 and 13 (the default plugin’s GPIO number assignments) on a Pi 3B+.Use the chart below to identify the GPIO numbers to use in the plugin’s settings after install if you choose anything other than 12 or 13 as diagrammed above. The GPIO numbers in yellow are the ones that can be controlled by this plugin.Grounding the external power supply may be a solution if your servos are doing anything strange!You are now ready to continue with the plugin install/configuration.InstallInstall via the bundled Plugin Manageror manually using this URL:https://github.com/iFrostizz/OctoPrint-EasyServo/archive/master.zipSettingsThe plugin supports the ability to configure the GPIO numbers used for controlling the servos for the X and Y axes.FeaturesBasic controlYou can either control the servos from the Octoprint interface or using the M118 command. This can be useful if you need a servo movement in a specific moment of your print job.Note that the servo movement is not blocking (your print head will not wait for the servo movement to finish in order to execute the next gcode command). You should then set some “Dwell Time” using the G4 command https://marlinfw.org/docs/gcode/G004.html if you need so.Here is the syntax of the M118 commands:  M118 EASYSERVO_REL    example: M118 EASYSERVO_REL 12 10 will move the servo attached to the GPIO 12 at a relative angle of 10°.  M118 EASYSERVO_ABS    example: M118 EASYSERVO_ABS 13 79 will move the servo attached to the GPIO 13 at the absolute angle of 79°. Note that the range is 0-180°.  M118 EASYSERVOAUTOHOME  ()  example: M118 EASYSERVOAUTOHOME 13 12 will set both servos at their autohome angle. It is working the same way as an absolute positioning command. Note that you don't need to home both axis at the same time.Also, a “Relative Angle” has been added in the settings. This will modify the relative angle amount in order to make bigger or smaller movements between each use of the arrows.Z-TrackingThis new feature will track the Z position of your printer in real time when the button is locked. It will only work in absolute positioning and will update each time a movement command comporting a “Z” is performed.Before trying this feature, you have to enter the x and y offsets in the settings to let the plugin compute the angle.The xOffset correspond to the horizontal length in mm between the axis of the servo and the point that you want to track (let’s say the center of the print bed)The yOffset correspond to the vertical length in mm between the eye of the camera when this last one is at 90° and this same point.Black: Print bedRed: Target pointGreen: CameraOrange: Servo range (Here, the camera is at 90°)Custom pointNow, you will be able to move until a point you want to save in just one click. Take for example the position of your servos when you see your spool ?  Move until you see the spool  Hit the button “Get Current Position” in the settings in order to get the X and Y position of your servos  Edit your custom point just above while naming it, and setting the angle read.  The custom point should appear in the control tab and should lead to your wonderful spool after clicking on it.DisclaimerAlthough I have used this plugin and it has worked for me without issues, I take no resposiblity for any damage caused by using this plugin or connecting servos to your Pi. Please make sure to do your reseach and understand the dangers and please be careful.",
"tags": ["GPIO","servos","PWM"]
},

{
"id": "/plugins/multilineterminal",
"url": "/plugins/multilineterminal/",
"date": "2020-05-21 00:00:00 -0500",
"title": "Multi Line Terminal",
"description": "Makes the terminal input a multi line text area.",
"author": "jneilliii",
"content": "Multi Line TerminalThis plugin simply replaces the single line gcode input into a multi-line text area. Once installed you can use the Send button or shift+enter to send the gcode commands to your printer. Use shift+up and shift+down to navigate through command history.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["terminal","input","gcode"]
},

{
"id": "/plugins/ikea_tradfri",
"url": "/plugins/ikea_tradfri/",
"date": "2020-05-24 00:00:00 -0500",
"title": "Ikea Tradfri",
"description": "Control Ikea Tradfri outlet",
"author": "Mathieu \"ralmn\" HIREL",
"content": "OctoPrint-Ikea-tradfriTurn on your printer with Ikea Tradfri Outlet.Requirements  Ikea Tradfri Gateway  Ikea Tradfri OutletSetupInstall pluginInstall manually using this URL:https://github.com/ralmn/OctoPrint-Ikea-tradfri/archive/master.zipConfigurationFollow setup wizard or go to OctoPrint settings:  Indicate your gateway ip and your security code (found under your gateway)  Save  Select your outlet  Save",
"tags": ["ikea","tradfri","outlet"]
},

{
"id": "/plugins/CooldownNotification",
"url": "/plugins/CooldownNotification/",
"date": "2020-05-26 00:00:00 -0500",
"title": "CooldownNotification",
"description": "A plugin to execute gcode commands when the print bed cools to a certain temperature",
"author": "George McCauley",
"content": "CooldownNotificationThis plugin is designed to execute gcode commands when the print bed cools to a certain temperature.The intended usage is to utilize the M300 gcode to alert that the bed has cooled and it’s safe to remove prints printed in PETG.Settings",
"tags": ["gcode","heated bed","notification","cooldown"]
},

{
"id": "/plugins/PrintJobHistory",
"url": "/plugins/PrintJobHistory/",
"date": "2020-05-28 00:00:00 -0500",
"title": "PrintJobHistory",
"description": "The OctoPrint-Plugin stores all print-job informations of a print in a database.",
"author": "Olli",
"content": "Print Job History-Plugin collects a lot of attributes from OctoPrint itself, like Filename, Start/End-Time, Status, Username, Slicer-Settings and many more. But it also grabs informations from other plugins: Thumbnail, Layer-Information, Filament usage…For a full overview of the latest feature set and planed features, please visit the Git Hub HomepageSupport my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["printer","history"]
},

{
"id": "/plugins/mqttsubscribe",
"url": "/plugins/mqttsubscribe/",
"date": "2020-05-29 00:00:00 -0500",
"title": "MQTT Subscribe",
"description": "This plugin allows controlling OctoPrint via MQTT messages.",
"author": "jneilliii",
"content": "MQTT SubscribeThis plugin can control OctoPrint by submitting commands to the OctoPrint REST API.PrerequisitesInstall the MQTT plugin via the Plugin Manager or manually using this url:https://github.com/OctoPrint/OctoPrint-MQTT/archive/master.zipOnce installed configure the MQTT server connection in the MQTT plugin’s settings. This will be the same server that the MQTT Subscribe plugin will connect to for subscribing configured topics.SetupInstall via the Plugin Manager or manually using this URL:https://github.com/jneilliii/OctoPrint-MQTTSubscribe/archive/master.zipConfigurationOnce both plugins are installed configure the topics/commands you want to subscribe/submit to and generate your API key.SettingsTopics  List of configured topics          Click the plus button in the top right to add new topics      Click the pencil button to edit a configured topic      Click the copy button to duplicate a topic      Click the trash icon to delete a topic        General              API Key: API key to use to authenticate to the OctoPrint REST API          Click the plus button to generate your API key and accept the request      Click the trash icon to clear your API key      Click the copy button to copy the API key to your clipboard      MQTT Topic Editor  Topic: MQTT topic to subscribe  JSONPath Extract: JSON Path expression to extract from sent data, see here for an example, leave blank if substitution is not necessary in the REST Parameters described below  Type: The type of REST API submission, either post or get  REST API: The OctoPrint REST API command that you want to submit  REST Parameters: The JSON parameters to submit to the REST API configured aboveGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins here.Support My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["MQTT","control"]
},

{
"id": "/plugins/lametric",
"url": "/plugins/lametric/",
"date": "2020-06-01 00:00:00 -0500",
"title": "Lametric",
"description": "Display progress of your Octoprint instance on your LaMetric smart clock.",
"author": "Thijs Bekke",
"content": "This plugin adds support for your LaMetric smart clock (LaMetric time) to OctoPrint.When you start printing OctoPrint will send the current temperature or progress to your LaMetric.The following notifications will be send to your LaMetric:  Temperature of Tool and Bed  Percentage complete  Job is Failed  Job is completed",
"tags": ["notification","notifications","lametric"]
},

{
"id": "/plugins/M300Player",
"url": "/plugins/M300Player/",
"date": "2020-06-02 00:00:00 -0500",
"title": "M300 Player",
"description": "Plugin that will play M300 beeps in the web interface.",
"author": "jneilliii",
"content": "M300 PlayerOctoprint plugin to send M300 gcode messages to OctoPrint’s web interface using a webkitAudioContext and oscillatorNode on supported browsers. Tested in Chrome.Note:  This plugin does NOT work with files on the SD card.  This plugin does NOT work in Internet Explorer.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["M300","notifications","music"]
},

{
"id": "/plugins/setandwait",
"url": "/plugins/setandwait/",
"date": "2020-06-02 00:00:00 -0500",
"title": "Set And Wait",
"description": "This OctoPrint plugin implements Set And Wait commands M109 & M190 into OctoPrint and sends their non-blocking counterparts to the controller.",
"author": "Shawn Bruce",
"content": "Benefits:  Prints can be canceled during the heating phase without waiting for the temperature to be reached.  Fixes an issue where Smoothieware only reports temperatures for the probe being heated which in turn causes gaps on the OctoPrint temperature graph for other probes.  Works around odd behavior in Klipper where setting the temperature to a lower value will result in waiting for the heater to cool instead of simply continuting (S being treated as R). See KevinOConnor/klipper#1108See https://github.com/kantlivelong/OctoPrint-SetAndWait for information.",
"tags": ["m109","m190","heating","smoothieware","cancel","klipper"]
},

{
"id": "/plugins/stickypad",
"url": "/plugins/stickypad/",
"date": "2020-06-02 00:00:00 -0500",
"title": "Sticky Pad",
"description": "This plugin adds a persistent sticky pad to the web interface for keeping random notes.",
"author": "jneilliii",
"content": "Sticky PadThis plugin adds a persistent sticky pad to the web interface for keeping random notes.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["notes","reminders"]
},

{
"id": "/plugins/webcam_iframe",
"url": "/plugins/webcam_iframe/",
"date": "2020-06-02 00:00:00 -0500",
"title": "Webcam Iframe",
"description": "Simple plugin that replaces the webcam image on the control tab with an iframe that loads the webcam url from the default settings.",
"author": "jneilliii",
"content": "Webcam IframeSimple plugin that replaces the webcam image on the control tab with an iframe that loads the webcam url from the default settings.ConfigurationSet your webcam stream url to the address of a web page to load within the iframe that replaces the default image on the control tab. For example, for a twitch url you can use something like https://player.twitch.tv/?channel=jneilliii&amp;muted=trueGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["webcam"]
},

{
"id": "/plugins/restorelevelingafterg28",
"url": "/plugins/restorelevelingafterg28/",
"date": "2020-06-03 00:00:00 -0500",
"title": "Restore Leveling After G28",
"description": "Automatically keeps bed leveling on after G28 (Auto Home).",
"author": "Xennis",
"content": "Marlin code G28 disables bed leveling. The plugin restores the prior state:  Before the G28 command a M420 V is send to check if leveling is enabled or not.  If leveling was enabled: After the G28 command a M420 S1 is send to enable leveling.That same behaviour can be enabled in the Marlin firmware via RESTORE_LEVELING_AFTER_G28.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/Xennis/OctoPrint-RestoreLevelingAfterG28/archive/master.zipConfigurationThe plugin has no configuration and does not adjust the UI.",
"tags": ["leveling","bed leveling","marlin"]
},

{
"id": "/plugins/widescreen",
"url": "/plugins/widescreen/",
"date": "2020-06-03 00:00:00 -0500",
"title": "OctoPrint-WideScreen",
"description": "Plugin that adds a right sidebar panel and moves configured panels from left sidebar to the right sidebar.",
"author": "jneilliii",
"content": "OctoPrint-WideScreenThis plugin adds a right sidebar panel and moves configured panels from left sidebar to the right sidebar.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/jneilliii/OctoPrint-WideScreen/archive/master.zipConfigurationOnce installed open settings and drag the panels between the left and right sidebars.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["sidebar","widescreen"]
},

{
"id": "/plugins/prusa_mini_eta",
"url": "/plugins/prusa_mini_eta/",
"date": "2020-06-04 00:00:00 -0500",
"title": "OctoPrint-Prusa-Mini-ETA",
"description": "Prusa ETA detection from the gcode files prepared by the Prusa Slicer.",
"author": "Etienne G. (current), Michal Duda",
"content": "The Octoprint plugin for retrieving the estimated time of printing using the Prusa printer.The estimated time will be accurate only if the gcode was generated by the Prusa Slicerfor the Prusa Mini printer.There are two methods available for getting the estimated printing time.      Read estimated time during the gcode file upload operation.The first Prusa Mini ETA code is read and used as the total time required for printing.            Read the estimated time during the printing.All codes being sent to the printer are analyzed and all ETA values are reported back to the Octoprint.      If either of the mentioned methods fails then the fallback mechanism shall leverage the original ETA computation.This plugin can be configured to take into account the silent mode for MK3s",
"tags": ["estimation","eta","progress","prusa","prusa mini","prusa mk3s","prusaslicer"]
},

{
"id": "/plugins/signalclirestapi",
"url": "/plugins/signalclirestapi/",
"date": "2020-06-06 00:00:00 -0500",
"title": "Signalclirestapi",
"description": "Another Signal Messenger Integration based on the signal-cli-rest-api docker image. Supports Signal Messenger groups and print progress.",
"author": "Bernhard B.",
"content": "Features      Support for Signal Messenger groups:    It’s possible to create a Signal Messenger group for every print job. That way, all the messages and webcam snapshots are nicely grouped together.        Support for Print Progress:    If enabled, a message will be sent when the print job progress reaches 20%, 40, 80%.        Support for all Print Events:    The plugin supports the Print Started, Print Failed, Print Cancelled, Print Paused, Print Resumed, Print Done events.        Support for signal-cli-rest-api:    The signal-cli-rest-api is a small REST API wrapper around the awesome signal-cli commandline tool. The main advantage is, that you don’t need to run signal-cli on the same host as your Octoprint instance. That’s especially useful, if you use other services in your home network (like Home Assistant) that also send Signal Messenger notifications.  InstallationThis plugin requires the signal-cli-rest-api docker container. Without the docker container, the plugin won’t work! The following document describes how to set up the docker container and register your phone number.",
"tags": ["notification"]
},

{
"id": "/plugins/SMuFF",
"url": "/plugins/SMuFF/",
"date": "2020-06-11 00:00:00 -0500",
"title": "OctoPrint-Smuff",
"description": "A plugin for controlling tool changes on the SMuFF from OctoPrint as published on Thingiverse https://www.thingiverse.com/thing:3431438",
"author": "Technik Gegg",
"content": "This is a plugin for OctoPrint which handles tool changes for the SMuFF (as published on Thingiverse).This plugin runs in the background and tracks tool changes (Tx) via the octoprint.comm.protocol.gcode.queuing hook of OctoPrint.When triggered, it’ll send the according command to the SMuFF via the Raspberry’s second onboard UART ttyS0.For further information on how to configure your Raspberry Pi, please visit this Github repository.",
"tags": ["SMuFF","MMU","Tool changer","Multi material","Marlin 2.0"]
},

{
"id": "/plugins/consolidate_temp_control",
"url": "/plugins/consolidate_temp_control/",
"date": "2020-06-12 00:00:00 -0500",
"title": "Consolidate Temp Control",
"description": "This plugin consolidates the temperature and control tabs into one.",
"author": "jneilliii",
"content": "Consolidate Temp ControlBased on foosel’s original Proof of Concept, this plugin consolidates the temperature and control tabs into one. Modifications to foosel’s original source includes making the layout vertical as in the original or horizontal (default setting) to be more compatible with widescreen displays. Also implemented hack to hide original Temperature and Control tabs from view and ordering.Known Issues  Occasionaly the webcam stream isn’t detected.  Swapping tabs or refreshing the page usually brings it back.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["temperature","control","widescreen"]
},

{
"id": "/plugins/simple_filament_change_buttons",
"url": "/plugins/simple_filament_change_buttons/",
"date": "2020-06-12 00:00:00 -0500",
"title": "Simple Filament Change Buttons",
"description": "Simply adds some buttons to send the filament load/unload/change commands for Marlin, so you don't have to use the LCD menu",
"author": "Gareth Martin",
"content": "Simple Filament Change ButtonsThis plugin simply adds some buttons to send the filament load/unload/change commands for Marlin, so you don’t have to use the LCD menu.UseTo use automated filament change (M600):  Click Change Filament to automatically park the head and then unload filament.  When new filament is ready to load, click the LCD button or the Resume button in Octoprint.To manually unload/load (M702/M701):  Make sure the nozzle is heated  On the Control tab, click Unload to unload the old filament  Feed in the new filament to the extruder gear. Then click Load to load the new filamentConfigurationEnable ADVANCED_PAUSE_FEATURE in your Marlin firmware, along with PARK_HEAD_ON_PAUSE and FILAMENT_LOAD_UNLOAD_GCODES. I also recommend having EMERGENCY_PARSER enabled.",
"tags": ["filament"]
},

{
"id": "/plugins/homeassistant",
"url": "/plugins/homeassistant/",
"date": "2020-06-14 00:00:00 -0500",
"title": "HomeAssistant Discovery",
"description": "Automatically add your OctoPrint server to Home Assistant with MQTT",
"author": "Clifford Roche",
"content": "Enable MQTT based discovery of your OctoPrint server with Home Assistant.You will also need the OctoPrint-MQTT plugin installed and configured to connected to your Home Assistant MQTT service, and MQTT discovery enabled (should be the default). With these, by using the OctoPrint-HomeAssistant plugin your OctoPrint instance will automatically register a device and several sensors to follow your printer status, printing and slicing progress.",
"tags": ["notification","iot","automation","mqtt"]
},

{
"id": "/plugins/z_probe_offset",
"url": "/plugins/z_probe_offset/",
"date": "2020-06-14 00:00:00 -0500",
"title": "Z Probe Offset Control",
"description": "Add input to the control view for editing the z probe offset on marlin based printers",
"author": "razer",
"content": "Z Probe Offset ControlAdd input to the control view for editing the z probe offset on marlin based printers.Needs Marlin firmware with z probe capability enabled.Currently, firmwares that have been tested are:  Stock Marlin v1.x and v2.x  Creality3D Marlin fork (Ver 1.70.0 BL)  Prusa Marlin fork (Prusa-Firmware 3.9.0)Note:If your firmware is a marlin derivate and is not listed as tested, please report it as a working one in order to add it to the list, or report any issues",
"tags": ["probe","marlin"]
},

{
"id": "/plugins/geeks3d",
"url": "/plugins/geeks3d/",
"date": "2020-06-22 00:00:00 -0500",
"title": "OctoPrint-3DGeeks",
"description": "Companion plugin for 3D Geeks (Android & iOS App)",
"author": "Toby from 3D Geeks",
"content": "3D Geeks\tThis plugin is created as a companion plugin to the 3D Geeks app.It allows you to connect your OctoPrint instance with the 3D Geeks app for quick one-click configuration. Which removes the needs to manually type in IP addresses en port numbers, which is super error-prone.The plugin also allows you to receive push notifications with a status update from your OctoPrint instance. It currently supports the following events:  Print started  Print finished  Print failed  Print progress  Printer connected  Printer disconnected  Octoprint startup  Octoprint shutdownSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/2BWorks/OctoPrint-3DGeeks/archive/master.zipUsageInstance configurationAfter installation restart OctoPrint, and go to Settings. You should see a new section in plugins named 3D Geeks, go to that section and you should be presented with a QR Code.On your Android powered device open the 3D Geeks app, go to:Settings &gt; OctoPrint settingsPress the +-Icon in the bottom-right hand corner.Press the scan icon, scan the QR code you’re being presented. If everything goes well all the necessary fields will be filled in automatically for you. You can now press Test connection for a quick test of the connection to your OctoPrint instance.NOTE: Be sure you’re Android device is connected to the same network as your OctoPrint instance, as they communicate through the local network. When the test succeeds you can press Create. Your OctoPrint instance is now saved and can receive files from 3D Geeks.NOTE: You can create as many OctoPrint instances as you desire. When uploading a file, the app will ask you which instance to upload to.Push notificationsEnable remote notifications from within the app. And press the Send test notification-button from the 3D Geeks OctoPrint settings. If everything is filled in correctly you should receive a test notification on your phone.Select the push notification categories which you would like to receive.Don’t forget to save your OctoPrint instance on the app.DisclaimerSending push notifications happens via a proxy in the form of an AWS Lambda Function. Which on it’s turn triggers an Firebase Message.If you don’t want your OctoPrint instance to send requests to AWS, don’t install this plugin.The called url is:https://qx8eve27wk.execute-api.eu-west-2.amazonaws.com/prod/octoprint_push",
"tags": ["3dgeeks","push","print finished","print started","Android","notifications"]
},

{
"id": "/plugins/RewriteM600",
"url": "/plugins/RewriteM600/",
"date": "2020-06-23 00:00:00 -0500",
"title": "Rewrite M600 - For M600 Unsupported",
"description": "Implement M600 for pinters that can't support M600 by default (TFT with out marlin mode support, like Artilelry X1 and Genius)",
"author": "Gustavo Cevallos",
"content": "This plugin implement M600 with out Marlin support.Implement M600 for pinters that can’t support M600 by default (TFT with out Marlin Mode support, like Artilelry X1 and Genius). You can use M600, is going to stop wait until you change and press resume. If you have a TFT 28 (Like the Artillery) i would recomend you to check Rawr TFT Firmware to implement M600 direct in the TFT and do not need Octoprint.",
"tags": ["filament","simplified","trigger","color change","hook","M600"]
},

{
"id": "/plugins/ngrok",
"url": "/plugins/ngrok/",
"date": "2020-06-23 00:00:00 -0500",
"title": "Ngrok Tunnel",
"description": "A plugin to securely access your OctoPrint instance remotely through ngrok",
"author": "fieldOfView",
"content": "This plugin creates a secure tunnel to access OctoPrint remotely. It provides a more secure alternative to using port forwarding to expose your OctoPrint instance to the internet.Forwarding a port and setting up a dynamic dns record unfortunately remains a popular way to make an OctoPrint instance accessible through the internet. This is very insecure (especially when not using HTTPS with a proper certificate), and requires changes to the local network (static IP for the OctoPrint instance, configuration changes to the router). The truly safe way to access an OctoPrint instance is to use a VPN, but this is hard to set up and properly configure.The OctoPrint Ngrok Tunnel plugin sets up a secure tunnel to your OctoPrint instance via the ngrok service. The tunnel is encrypted with SSL and proper certificates (even if your OctoPrint instance is not accessible via HTTPS locally), and is further protected with Basic Authentication (username and password) out of the box.There is no configuration of the local network necessary, and there are no ports to open or forward. No certificates to set up, and no changes to make to HAProxy. Just full access to your OctoPrint instance, including both the web interface and the API, from anywhere in the world. With the standard OctoPi confguration, you even get a working webcam stream remotely (if your home internet connection can keep up with the demands of streaming mjpeg).You only need to sign up for a free account at ngrok.com. There is one caveat: with a free account, you get assigned a random subdomain of ngrok.com, and this subdomain changes each time OctoPrint gets restarted. The tunnel address is shown within the OctoPrint interface, but it can also be looked up in the ngrok service dashboard. With a paid ngrok account, you can configure a static subdomain to use. A paid plan gives you additional features, such as using more than one tunnel (printer) and creating an IP whitelist to limit who can access the tunnel.ConfigurationThe Ngrok Tunnel plugin can be configured via the OctoPrint settings panel.The ngrok auth token is used to authenticate you on the ngrok service and can be found by logging in to the ngrok dashboard. Though not strictly required for an ngrok tunnel, the plugin requires you to set up Basic Authentication on the tunnel in addition to the access control already set up on your OctoPrint instance. Any username and password combination can be chosen, but it is recommended to use a different username and password than your OctoPrint credentials. If you wish, you can use the same username and password you use for logging in to OctoPrint and have the login to the tunnel automatically log you in to OctoPrint too.DisclaimerThe authors of the plugin have no affiliation with ngrok. The plugin uses pyngrok by Alex Laird to setup and manage ngrok tunnels.Security is a serious topic, especially when there’s a 3d printer involved. This plugin is provided “as is”, without warranty of any kind. In no event shall the authors be liable for any claim, damages or other liability arising from, out of or in connection with the plugin or the use or other dealings in the plugin.",
"tags": ["remote access","authentication","security","password","ngrok","tunnel","ssl"]
},

{
"id": "/plugins/DuCalibrator",
"url": "/plugins/DuCalibrator/",
"date": "2020-06-24 00:00:00 -0500",
"title": "Delta Micro Calibrator",
"description": "An OctoPrint Plugin for performing micro calibration in linear delta machines.",
"author": "Fabio Santos",
"content": "Delta Micro Calibrator “ΔµCalibrator”An OctoPrint Plugin for performing micro calibration in linear delta machines.READMEKey features:  Automatic probing  Calibrates up to 18 geometry parameters  3D visualization of probed points and estimated points after proposed calibrationDemo\tWatch it in full screen",
"tags": ["delta","calibration","3d","visualization"]
},

{
"id": "/plugins/ThermalRunaway",
"url": "/plugins/ThermalRunaway/",
"date": "2020-06-28 00:00:00 -0500",
"title": "Thermal Runaway",
"description": "An Octoprint Plugin to provide some basic Thermal Runaway protection",
"author": "Alex Verrico",
"content": "What this plugin does: Sends the configured GCode command when a heater on the printer is outside of configured maximum/minimum temperatures and not heading towards the set temperatureWhat this plugin does not do:This plugin does not stop a thermal runaway, it just sends a GCode command, and it is up to you to find a way to handle that GCode command appropriately. As such, I strongly recommend that you watch your printer at all timesFor more details, see https://github.com/AlexVerrico/Octoprint-ThermalRunawayDisclaimer:I, the plugin author, strongly recommend that you NEVER leave you printer unattended while powered. This plugin is not a replacement for firmware thermal runaway detection. I, the plugin author, cannot be held responsible for any damage to equipment or injuries that may arise from leaving your 3D Printer unattended. I, the plugin author, make no guarantees that this plugin will work or continue to work.",
"tags": ["thermal runaway","temperature","temp"]
},

{
"id": "/plugins/macro",
"url": "/plugins/macro/",
"date": "2020-06-28 00:00:00 -0500",
"title": "Sidebar Macros",
"description": "Plugin for Octoprint to add macros list in sidebar",
"author": "Mikhail Poluboyarinov",
"content": "Adds feature to create various gcode macros and display them in sidebar menu",
"tags": ["sidebar","macros","helpers","gcode"]
},

{
"id": "/plugins/swapxy",
"url": "/plugins/swapxy/",
"date": "2020-07-02 00:00:00 -0500",
"title": "SwapXY",
"description": "Swap the X and Y axes used by the jog controls",
"author": "Andy Castille ",
"content": "SetupAs long as the plugin is enabled, the jog buttons for X and Y willdrive the other axis instead.To drive one or both of these axes in the opposite direction (negative/positive), enable the reverse option for that axis.ConfigThese options can also be changed from the web UI settings window.Default config:plugins:    swapxy:        reverse:            X: false            Y: falseDeveloped by Wolfram Manufacturing",
"tags": ["controls","ui"]
},

{
"id": "/plugins/GPIOShutdown",
"url": "/plugins/GPIOShutdown/",
"date": "2020-07-03 00:00:00 -0500",
"title": "GPIO Shutdown",
"description": "A plugin that shutdown the Rasperry Pi if you connect ground to one of the selected GPIO ports.",
"author": "Farhad Malekpour",
"content": "DescriptionGPIO Shutdown is a simple plugin that can shutdown the Raspberry Pi if a switch connected to ground and one of the GPIO pins pressed. This plugin also turns On a led when Octoprint server is up and running. Connect a led to one of the GPIO pins and other end to ground, then set the pin number (BCM Mode) in plugin settings in web interface.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/fmalekpour/OctoPrint-Gpioshutdown/archive/master.zipConfigurationIn web interface, install the plugin and reload if necessary, then click on GPIO Shutdown, you will have:  Pin Shutdown: Raspberry Pi GPIO pin (BCM Mode) your shutdown switch is attached to.  Pin Led: Raspberry Pi GPIO pin your ready-to-run led attached to. This led will turn On when OctoPrint is up and ready to run/connect.  Debounce Time: When press the shutdown switch, wait for this amount of time to wait for the signal to stabilize.You can find the GPIO pin number assignments at Raspberry Pi GPIO Pinout.Support meThis plugin was developed in my spare time.If you find it useful and like it Buy me a beer, cheers :)",
"tags": ["GPIO","shutdown","system ready","ready to run"]
},

{
"id": "/plugins/M150Control",
"url": "/plugins/M150Control/",
"date": "2020-07-03 00:00:00 -0500",
"title": "OctoPrint-M150control",
"description": "Send M150 control through the UI",
"author": "Jean-Philippe Alexandre",
"content": "This plugin allow you to control led directly with a custom ui control. It send M150 command to the printer, which can be intercepted by Octoprint with plugins like PCA9685LedStrip.You can click and drag the color you want or validate every color to avoid flooding the printer.http://plugins.octoprint.org/plugin/M150Control/",
"tags": ["M150","color","LED"]
},

{
"id": "/plugins/gridspace",
"url": "/plugins/gridspace/",
"date": "2020-07-04 00:00:00 -0500",
"title": "OctoPrint-GridSpace",
"description": "Allows for direct printing from GridSpace's Kiri:Moto slicer",
"author": "Stewart Allen",
"content": "This plugin allows for direct printing from GridSpace’s Kiri:Moto slicerto any OctoPrint servers on your local network with zero configuration.It also adds an iframe tab to OctoPrint’s interface that embeds theKiri:Moto web-based slicer. In addition to being a full-blown slicer,Kiri:Moto includes gcode visualization.",
"tags": ["gcode","spooler","browser","network","slicer","slicer print","remote print","print export","print spooler"]
},

{
"id": "/plugins/ArduCamFocus",
"url": "/plugins/ArduCamFocus/",
"date": "2020-07-11 00:00:00 -0500",
"title": "ArduCamFocus",
"description": "Plugin to control ArduCam with motorized focus control on octopi",
"author": "moof, jneilliii",
"content": "ArduCamFocusHere is a simple plugin to control an ArduCam motorized focus camera using the OctoPrint Control tab. It uses I2C and it is expected the user followed the ArduCam installation instructions and enabled I2C support.It utilizes these custom commands from your slicer to adjust focus while printing:  @ARDUCAMFOCUS &lt;RELATIVE-FOCUS&gt; to adjust focus  @ARDUCAMFOCUSSET &lt;ABS-FOCUS&gt; to specify an absolute focus. This command is handy to reset the focus when starting a new print after a power failure.Example: @ARDUCAMFOCUSSET 100 will move the focus to 100.Pre-Installation RequirementsPlease follow the instructions here in order for this plugin to properly operate. Without these steps the plugin will not be able to control the I2C camera on your Pi and as a result the focus will not change.SettingsThis plugin has no configurable settings.DisclaimerAlthough I use this plugin and it works for me without issues, I take no resposiblity for any damage caused by using this plugin. Your camera version, i2c address, or system configuration may be different from mine.  Please make sure to do your reseach and understand the dangers and please be careful.",
"tags": ["ArduCam","camera","focus"]
},

{
"id": "/plugins/GPIOCoolDownFan",
"url": "/plugins/GPIOCoolDownFan/",
"date": "2020-07-16 00:00:00 -0500",
"title": "OctoPrint-Cooldownfan",
"description": "Turn on the cooldown fan after printing finished",
"author": "Farhad Malekpour",
"content": "DescriptionAt the end of printing, I had to wait a long time for hotbed to cool down in order to remove the print. So I attached two large fan to top of the printer, connected them to a relay module and signalled it from GPIO on Raspberry Pi. This plugin controlls the relay module and turns ON the fan for defined amount of time at the end of printing.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/fmalekpour/OctoPrint-Cooldownfan/archive/master.zipConfigurationIn web interface, install the plugin and reload if necessary, then click on GPIO Shutdown, you will have:  Pin Cooldown: Which Raspberry Pi GPIO pin (BCM Mode) your cooldown fan relay or mosfet is attached to.  Run time: When printing finished, run the external cooldown fan for this amount of time.  Normal State: State of the GPIO pin when fan is OFF.In configuration screen, there are two buttons (Fan ON and Fan OFF) to test the fan functionality.You can find the GPIO pin number assignments at Raspberry Pi GPIO Pinout.Support meThis plugin was developed in my spare time.If you find it useful and like it Buy me a beer, cheers :)",
"tags": ["GPIO","Cool down","Fan","External Fan","Cool Down Fan"]
},

{
"id": "/plugins/marlinbft",
"url": "/plugins/marlinbft/",
"date": "2020-07-26 00:00:00 -0500",
"title": "OctoPrint-MarlinBft",
"description": "Upload files using Marlin Binary File Transfer Mark II",
"author": "Charles Willis",
"content": "DEVELOPER NOTEThere are several major issues currently reported:  Installation on systems with python 3 but not python 2  Failed transfers on latest Marlin bugfix-2.0.xI am not currently in a position to maintain this plugin, or the library that handlesthe actual binary transfer. If you’re interested, please respond to the pinned issues onthe repositories:  https://github.com/CharlesWillis3/OctoPrint-MarlinBft  https://github.com/CharlesWillis3/marlin-binary-protocolThis will transfer a file to a printer using Marlin firmware’s experimental binary file transfer protocol.  Marlin bugfix-2.0.x  Enable BINARY_FILE_TRANSFER feature in Configuration_adv.h  Ensure capability reporting is enabledGeneral use:  Connect to the printer  Click the Marlin BFT icon in the Nav bar to open the transfer dialog  Click the gear icon to adjust the timeouts in the settings dialog  Back in the transfer dialog, adjust the transfer settings “Reconnect” and “Send GCode after Transfer”  Click the upload button to select the file. Transfer will start immediately  The dialog will close automatically when the transfer and post-transfer phases are completeUpdating firmware on BigTreeTech boards:  In settings:          Ensure bin is in the “Accept file extensions” list      Set “Wait before reconnect” to a reasonable value like 12000 (12 seconds)        In the transfer dialog:          Enable “Send GCode after transfer” and set the Gcode to M997 (marlin reset)      Click the upload button and select the firmware.bin file. Click OK.      After the M997 reset, reconnect the printer (or enable “Reconnect after transfer”)      It’s also possible to transfer a file using the http api.  Upload the file to OctoPrint using the files api  Disconnect the printer using the connection api  POST a json object to the marlinbft api:```POST /api/plugin/marlinbftContent-Type: application/jsonX-Api-Key: abcdef…Body:{  “command”:                    “start_transfer”,  “handler_type”:               “api”  “port”:                       “/dev/ttyACM0”,  “baudrate”:                   250000,  “local_path”:                 “marlinbft/firmware.bin”,  “comm_timeout_ms”:            1000,  “wait_after_connect_ms”:      3000,  “post_transfer_gcode_enable”: true,  “post_transfer_gcode”:        [“M997”]}```The properties:  command  required. must be the value “start_transfer”  api  required. must be the value “api”  port  required. the serial port the printer is connected on  baudrate  required.  local_path  required. the local path on the server to the uploaded file  comm_timeout_ms  optional, settings override, int. the communication timeout  wait_after_connect_ms  optional, settings override, int. if provided, how long to wait after establishing connection  post_transfer_gcode_enable  optional, settings override, bool. whether to send gcode after the transfer completes  post_transfer_gcode  optional, settings override, string array. the gcode to sendFor settings override properties, if no value is provided the current configuration will be used.",
"tags": ["marlin","file","transfer","firmware.bin","binary"]
},

{
"id": "/plugins/printhistory",
"url": "/plugins/printhistory/",
"date": "2020-07-27 00:00:00 -0500",
"title": "Print History",
"description": "Saves filename, print time and filament usage for each print",
"author": "Jarek Szczepanski, Guy Sheffer",
"content": "",
"tags": ["history","log"]
},

{
"id": "/plugins/ws281x_led_status",
"url": "/plugins/ws281x_led_status/",
"date": "2020-07-28 00:00:00 -0500",
"title": "WS281x LED Status",
"description": "Add some WS281x type RGB LEDs to your printer for a quick status update!",
"author": "Charlie Powell",
"content": "A highly configurable yet easy to use plugin for attaching WS2811, WS2812 and SK6812 or LEDs to your Raspberry Pi for a printer status update!With lots of options effects and integrations to choose from, you can customise the plugin to do things exactly as you want them.Most prominent features include:  Printer status effects  Tracking heating, printing and cooling progress  Intercepting M150 commands &amp; controlling with @ commands  Easy controls for turning lights on and off from the navbar  Theme-friendly torch button to temporarily light up your printer  Timers to turn the LEDs off at certain times of day or after a print is done.  Custom Triggers - add your own events, @ commands or gcode matching to trigger effects  Powerful integration with OctoApp for Android  …and more!For the most up-to-date feature list, please checkout the plugin’s homepage as well as the documentation for more information.SetupSetting up the plugin couldn’t be easier! There are 3 main steps, with the heavy lifting done for you via a configuration wizard:  Wiring your LEDs  Configuring SPI  Configuring plugin settingsLike the sound of it? Follow the detailed setup guide in the documentation.Getting helpPlease read the Get Help Guide as well as the rest of the documentation, to see if your question has been answered there. Still got questions? Get in touch:  On the OctoPrint Discord  On the Community Forums  Open an issue with the question templateReporting problemsWhilst I don’t like bugs, I want to hear about them! Let me know by opening an issue on GithubBefore you report a bug, please read the Get Help Guide as well, there is a section on reporting bugs.Support my work!I created this plugin in my spare time, so if you have enjoyed using it then please support it’s development!",
"tags": ["rgb led","led","status","progress","neopixel","ws281x","ws2811","ws2812","sk6812"]
},

{
"id": "/plugins/virtual_printerconfig",
"url": "/plugins/virtual_printerconfig/",
"date": "2020-08-04 00:00:00 -0500",
"title": "Virtual Printer Settings",
"description": "Add configurable settings to the Virtual Printer plugin under OctoPrint's settings",
"author": "Charlie Powell",
"content": "Add easily configurable and well organised settings for OctoPrint’s virtual printer.Overrides the default template which only has an enabling checkbox.Very useful if you are developing plugins, or even core OctoPrint. No more digging deep into config.yaml and hoping you typed the settings correctly!This plugin is not under active development, but if you have any problems, or feature requests I would be happy to take a look &amp; see what I can do.CompatibilityThe lastest version of the plugin is only compatible with OctoPrint 1.5.x.To find a version compatible with your instance, take a look in the table below            OctoPrint version      Plugin version      Install URL                  1.5.x      1.5.x      https://github.com/cp2004/OctoPrint-VirtualPrinterSettings/archive/1.5.0.zip              1.4.1/2      0.1.3      https://github.com/cp2004/OctoPrint-VirtualPrinterSettings/archive/0.1.3.zip      Use the above URLs in OctoPrint’s Plugin Manager &gt;Get More &gt; …from URL field.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/cp2004/OctoPrint-VirtualPrinterSettings/archive/master.zipConfigurationPlugin adds settings to OctoPrint’s UI that are documented hereIt replaces the original implementation, introduced in OctoPrint 1.4.1",
"tags": ["development","settings","virtual printer"]
},

{
"id": "/plugins/consolidatedtabs",
"url": "/plugins/consolidatedtabs/",
"date": "2020-08-06 00:00:00 -0500",
"title": "Consolidated Tabs",
"description": "Combines configured tabs into a single tab as draggable and resizable panels.",
"author": "jneilliii",
"content": "Consolidated TabsThis plugin will allow you to consolidate any OctoPrint tab into a single Consolidated Tab as a draggable and resizable panel. Click the screenshot below to see an example YouTube video. Since version 1.0.0 the plugin utilizes gridstack.js for positioning and sizing.\tSettingsClick the screenshot below to open a YouTube video demonstrating setting up Consolidated Tabs.\t  Resize Navbar: whether to resize the width of the top navbar to 100% or not.  Remove Tab Name: don’t show the name of the consolidated tab, only possible if all tabs are consolidated.  Use Full Width of Browser: if enabled the tab area will be sized to fit the entire width of the browser, and the sidebar will be moved to the left.  Enable Floating Panels: if enabled the panels will not auto collapse into available open space. Can be helpful when panels are jumping around a lot.  Don’t Show Instructions: if enabled the instructions will not be displayed when enabling edit mode.  Don’t Show Edit Button: if enabled the edit button in the navbar will be hidden.InstructionsTips  The name of the tab will match what is configured in OctoPrint’s Title appearance setting.  It’s best to consolidate the desired tabs first and save, reload, and then enable edit mode again to resize and position.  Panels will become full width automatically and realign once the tab’s area width drops below a certain size.ThemeifyIf using Themeify you may want to add extra settings to your Advanced options. These are the relevant css selectors that you can adjust.            Selector      CSS-Rule      Value      Context      Hidden Tab Name Specific                  .grid-stack-item.consolidated .grid-stack-item-content      background-color      #2f3136      Each Panel                     .grid-stack-item.consolidated .grid-stack-item-content      border      1px solid #fc8003      Panels Border                     #tabs_content      box-shadow      unset      Tab content wrapper      Yes              #tabs_content      background-color      unset      Tab content wrapper      Yes      Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["tab","widescreen","style","styling","UI"]
},

{
"id": "/plugins/octotweet",
"url": "/plugins/octotweet/",
"date": "2020-08-08 00:00:00 -0500",
"title": "OctoPrint-Octotweet",
"description": "Twitter plugin for OctoPrint",
"author": "Jean Pierre GARCIA",
"content": "Octoprint-OctoTweet 1.0.0OctoTweet is a plugin allowing Octoprint to send notifications to Twitter.This is a fork of the amazing plugin Octorant by @bchanudet.SETUPInstall the pluginInstall manually using this url :https://github.com/jpg32/OctoPrint-Octotweet/archive/master.zipCreate Twitter AppLogin with your Twitter account on developer.twitter.com.Click on App and then on Create an app:Select Student:Follow steps to complete the subscription to Twitter’s Developer Program:Now you can create a new app:The next step show you your API Key &amp; API secret keys:Copy them to the OctoTweet plugin configuration:Edit app’s permissions:Go to Keys and tokens :Generate Access Token &amp; Secret:Copy generated tokens to Octoprint :Message SettingsHere you can customize every message handled by Octoprint.  Toggle the message : by unchecking the checkbox in front of the message title, you can disable the message. It won’t be sent to Twitter.  Message : you can change the default content here. See the section Message format for more information.  Include snapshot : if you have a snapshot URL defined in the Octoprint settings, you can choose to upload a snapshot with the message to Twitter.  Notify every XX% : specific to the printing progress message, this setting allows you to change the frequency of the notification :          10% means you’ll receive a message at 10%, 20%, 30%, 40% … 80%, 90% of the printing process.      5% means you’ll receive a message at 5%, 10%, 15%, 20% … 80%, 85%, 90%, 95% of the printing process.      etc.      Scripts SettingsOctotweet allows you to launch scripts everytime a message is sent:  Before sending: perfect for turning some LED on to ensure the webcam will always have enough light when taking the snapshot.  After sending: perfect for turning the same LED off :smiley:.Script configuration was deliberately made a little harder, as running scripts exposes much more on the host computer. You can find more indications on the wiki.Message formatMessages are regular twitter messages, which means you can use:  :emoji: shortcuts to display emojis.  @mentions to notify someone.Some events also support variables, here is a basic list:Printing process : started event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage locationPrinting process : failed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage locationPrinting process : done event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin} : the origin storage location  {time}: time needed for the print (in seconds)  {time_formatted} : same as {time}, but in a human-readable format (HH:MM:SS)Printing process : failed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting process : paused event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting process : resumed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting progress event  {progress} : progress in % of the print  {spent}: time spent since the start of the print (in seconds)  {spent_formatted} : same as {spent}, but in a human-readable format (HH:MM:SS)  {remaining}: time remaining until the end of the print (in seconds)  {remaining_formatted} : same as {remaining}, but in a human-readable format (HH:MM:SS)Printer state : error  {error} : The error receivedFor more reference, you can go to the Octoprint documentation on Events.",
"tags": ["twitter","notifications","snapshots"]
},

{
"id": "/plugins/heatbedsavety",
"url": "/plugins/heatbedsavety/",
"date": "2020-08-14 00:00:00 -0500",
"title": "OctoPrint-HeatBedSavety",
"description": "HighPower HeatBedSavety Plugin",
"author": "linux-paul",
"content": "This plugin is able to control a relay in serial connection to a solid state relay of a high power heatbed solution.Solid state relay sometimes get shorted when they are damaged and will heat the bed up to ~200°C with no control from the printer.This plugin cuts the solid state relay from power when a configured temperature is reached or an error is thrown by the printer.In some countries, not everybody is allowed to connect or modify 230V/130V electrical cicuits.In this case you’ll do the changes !! AT YOUR OWN RISK !! and no insurance will cover damage.",
"tags": ["heat","bed","heatbed"]
},

{
"id": "/plugins/ophom",
"url": "/plugins/ophom/",
"date": "2020-08-16 00:00:00 -0500",
"title": "Ophom",
"description": "Octoprint Philips Hue Outlet Manager",
"author": "Stéphane Z.",
"content": "OphomAutomatic ShudownSwitch a Philips Hue that your printer is connected to ON or OFF.You can set an automatic switch-off based on a minimum temperature.The Philips Hue bridge have an internal clock. Ophom can create à delayed power off for a conventional shutdown of the system (eg: Raspberry Pi powered by printer PSU)Security ShudownThere are different security option for cuting power in case there is a problem:  If the data connection to the printer is lost  If an ermegency stop (M112 GCODE) is send to the printer  If a maximum temperature is reached by the nozzle or the bedHue Sytem RulesYou can create rules on your Bridge for automatic power on/off other Hue devices at the same time your change the state of your plug.This rules are not controlled by Ophom but directly by the Philips Hue BridgeConfigurationAfter the installation go to the plugin configuration screen and follow the guide.ℹ️ Follow this instruction if your USB plug is powering your motherboard print",
"tags": ["hue","outlet","auto off","power manage","philips"]
},

{
"id": "/plugins/prettygcode",
"url": "/plugins/prettygcode/",
"date": "2020-08-17 00:00:00 -0500",
"title": "OctoPrint-PrettyGCode",
"description": "A pretty GCode visualizer for Octoprint",
"author": "Kragrathea",
"content": "This plugin adds a 3D GCode visualizer tab in Octoprint. It displays colored lines to give you some idea what the printer is doing and animates progress during printing.Features  3D Gcode visualizer  Sync progress to print job  Full screen and tabbed interface  Uses Dashboard plugin from Dashboard github page when installed  Customize the UI via CSS injection (see Instructions on tab in OctoPrint)For and configuration details, please see the instructions on the PrettyGcode tab in OctoPrint. Report bugs via the PrettyGCode github page.",
"tags": ["Gcode","visualizer","WebGL","progress"]
},

{
"id": "/plugins/procastinator",
"url": "/plugins/procastinator/",
"date": "2020-08-21 00:00:00 -0500",
"title": "Procastinator",
"description": "Puts printjobs on hold until a certain time",
"author": "Juergen Pabel",
"content": "Ever wanted to start a printjob sometime later? Instead of scheduliing a printjob by other means(cron &amp; curl via API), this plugin allows for a printjob to be started and immediately put on holduntil a given time (or immediately, if so desired).This might be useful if you want to start a printjob in the middle of the night (while sleeping)or even just a little later on (without the risk of forgetting to actually start the printjob later on).The plugin is configurable as to:  a time window during which a printjob is put on hold (like only in the evening)  5 options as for times when to actually start the printjobIf a printjob is started during the configured time window then it is immediately put on hold and theuser is shown a dialog for selecting the time at which the job is to be continued (the first option isalways “NOW”, just in case).",
"tags": ["schedule","scheduling","delay","pause","wait","procastinator"]
},

{
"id": "/plugins/SpoolManager",
"url": "/plugins/SpoolManager/",
"date": "2020-08-23 00:00:00 -0500",
"title": "SpoolManager",
"description": "The OctoPrint-Plugin manages all spool informations and stores it in a database.",
"author": "Olli",
"content": "SpoolManager offers the possibility to save many properties of a Spool in a database. Like: material, color, weight, length, purchase-info, last/first-usage, …For a full overview of the latest feature set and planed features, please visit the Git Hub HomepageSupport my EffortsThis plugin, as well as my other plugins were developed in my spare time.If you like it, I would be thankful about a cup of coffee :)",
"tags": ["printer","spool","filament"]
},

{
"id": "/plugins/ender3v2tempfix",
"url": "/plugins/ender3v2tempfix/",
"date": "2020-09-07 00:00:00 -0500",
"title": "Creality 2x temperature reporting fix",
"description": "Fixes the temperature reporting from Creality printers shipped with the new mainboard (new Ender-3 Pro's, Ender-3 Pro v2, CR-6 SE & possibly more)",
"author": "Albert MN. @ SimplyPrint, b-morgan",
"content": "Fixes the double temperature reporting from the Creality Ender-3 v2 printer described in this OctoPrint forum topic.Some of the newer Creality firmware has an issue where, when reporting its temperature, it writes everything twice.Example; should report tool; 27.76, bed; 39.35TT::27.7627.76  //0.000.00  BB::39.3539.35  //0.000.00  @@::00  BB@@::00This plugin turns the input into the correct format, like this;T:23.84 /0.00 B:24.05 /0.00 @:0 B@:0This fix is confirmed to work for the following printers:  Creality Ender-3 Pro v2  Creality CR-6 SE  Creality Ender-3 Pro (newly produced ones that ship with the new mainboard)  probably all other Creality printers with the new main board as well",
"tags": ["creality","ender-3 v2","ender-3 pro","double temperature","temperature"]
},

{
"id": "/plugins/backupscheduler",
"url": "/plugins/backupscheduler/",
"date": "2020-09-19 00:00:00 -0500",
"title": "Backup Scheduler",
"description": "Schedule OctoPrint backups at regular intervals.",
"author": "jneilliii",
"content": "Backup SchedulerThis plugin allows you to schedule OctoPrint backups at regular configured intervals.WARNING: This plugin currently does not monitor your disk usage or limit/reduce your backup count in any way.SettingsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["backup","schedule"]
},

{
"id": "/plugins/googledrivebackup",
"url": "/plugins/googledrivebackup/",
"date": "2020-09-21 00:00:00 -0500",
"title": "Google Drive Backup",
"description": "This plugin will automatically save a copy of your OctoPrint backup to Google Drive upon completion.",
"author": "jneilliii",
"content": "Google Drive BackupThis plugin will automatically upload a backup upon completion to your authorized Google Drive. In order for the plugin to work properly you will have to create a Google OAuth App to authorize access. To create your own Google OAuth app please follow the directions outlined in the Prerequisites.ConfigurationOnce the Prerequisite are met and you have downloaded your client_secrets.json file follow the steps here to authorize the plugin to your newly created OAuth app.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["Google Drive","Backup","OAuth"]
},

{
"id": "/plugins/terminalmessaging",
"url": "/plugins/terminalmessaging/",
"date": "2020-09-22 00:00:00 -0500",
"title": "Terminal Messaging",
"description": "Adds styling to the terminal tab that makes it easier to see where a message is from.",
"author": "jeffeb3",
"content": "Octoprint-TerminalMessagingPlugin that adds styling to the terminal tab that makes it easier to see where a message is from.Messages you send are on the right and are in green. Messages the printer sends back are on the leftand in blue.This is similar to how a text messaging app would differentiate between sender and receiver in theUI.This plugin is very small, and just edits the css of the elements in the terminal for readability.Enjoy!Special Thanks@jneilliii wrote this plugin after I asked about it in the forums. Thank you!",
"tags": ["terminal","ui","style","gcode"]
},

{
"id": "/plugins/octoprint_hd44780",
"url": "/plugins/octoprint_hd44780/",
"date": "2020-09-26 00:00:00 -0500",
"title": "Octoprint-LCD-HD44780",
"description": "Output status information on a 20x4 LCD screen",
"author": "Kunsi",
"content": "This Plugin allows you to connect a HD44780-compatible LCD screen to your Raspberry Pi running OctoPrint.Currently, the screen size is fixed to 20x4 characters. The used GPIO pins are fixed, too.",
"tags": ["status","gpio","lcd"]
},

{
"id": "/plugins/marlingcodedocumentation",
"url": "/plugins/marlingcodedocumentation/",
"date": "2020-09-27 00:00:00 -0500",
"title": "MarlinGcodeDocumentation",
"description": "Provides documentation for Marlin, RepRap, and Klipper, GCode commands in the Terminal tab",
"author": "Costas Basdekis",
"content": "It displays GCode documentation for Marlin, RepRap, and Klipper, in the terminal command line.Type a command and you will get explanation for the command and the parameters.Type ‘?’ and some terms and you’ll be shown commands that reference those terms.Features:  Commands from Marlin,RepRap, andKlipper official documentations  Support for search by prepending ?  Add and manage favourite commands  Support for Multiline Terminal plugin  If you use Terminal Messaging, it allows you to explain sent commands",
"tags": ["terminal","gcode","marlin","reprap","klipper","documentation"]
},

{
"id": "/plugins/MakerOS",
"url": "/plugins/MakerOS/",
"date": "2020-10-05 00:00:00 -0500",
"title": "MakerOS",
"description": "An OctoPrint plugin integration with the MakerOS Platform API.",
"author": "Thomas Lawton",
"content": "This plugin requires a MakerOS business account. Pleasenote that there is no free subscription tier.The official MakerOS OctoPrint plugin will allow you to interface with yourMakerOS projects from within OctoPrint. Once installed you will be able to queryyour projects and download both .gcode and .STL files from your projects to yourOctoPrint instance.On the initial call to the MakerOS API a MakerOS folder will be created in yourfiles. From there, upon downloading a file, a project specific folder will becreated for you within the MakerOS folder.  Please note that downloading .STL files will require you to install theCuraEngine Legacy plugin which can be installed in the same way as you installedthe MakerOS plugin.Setting up the plugin is simple - you may install via the Plugin Manager ormanually using this URL: https://github.com/makeros3d/Octoprint-Makeros/archive/master.zipOnce the plugin is installed it is easily configurable via the plugin’s settingsin the settings menu. All that you’ll need are your MakerOS Provider ID, APIkey, and API URL.",
"tags": ["api","addon","makeros","files"]
},

{
"id": "/plugins/wifistatus",
"url": "/plugins/wifistatus/",
"date": "2020-10-08 00:00:00 -0500",
"title": "WiFi Status",
"description": "Displays the WiFi connection status on the OctoPrint navigation bar.",
"author": "Manuel McLure",
"content": "This plugin will add a WiFi status indicator to the OctoPrint navigation bar to give an at-a-glance indication of the quality of the WiFi connection. Hovering over (or clicking on mobile) the indicator will provide more details on the connection.This plugin will only work on Linux and if OctoPrint is running under Python 3.7 or higher. See https://github.com/cp2004/Octoprint-Upgrade-To-Py3 if you wish to upgrade your OctoPrint installation to use Python 3.",
"tags": ["navbar","network","status","ui"]
},

{
"id": "/plugins/raisecloud",
"url": "/plugins/raisecloud/",
"date": "2020-10-10 00:00:00 -0500",
"title": "RaiseCloud",
"description": "Manage your OctoPi powered 3D printer through our powerful cloud management platform, RaiseCloud (web or app).",
"author": "Raise3D",
"content": "What is RaiseCloud?The RaiseCloud management platform is compatible with most open-source printers tomanage, monitor, and process 3D prints anytime and anywhere. The four key functionshelp you maximize work-flow efficiency and accessibility for your 3D printing process:1.Connect to OctoPi powered 3D printersDo you have different brands of printers but want to manage your printer efficiently?RaiseCloud would connect to OctoPi powered printers and help you manage your printers efficiently.2.Remote MonitoringDon’t want to work overtime to check on your 3D printer? RaiseCloud provides a cloud managementplatform for you to monitor your printing process anytime anywhere.3.Multi-Task ManagementAre you struggling to manage multiple tasks on different 3D printers? RaiseCloud would provide youa dashboard to easily manage print jobs across one or multiple 3D printers.4.Printer Management by TeamDo you want you and your team could manage the 3D printers together? RaiseCloud could help tocustomize the printing workflow through you and your team.How to Connect your Printers to RaiseCloud?Please follow video tutorial or the instructions Document\tResource LimitThe standard limit for connecting to the user’s raisecloud account through this plug-in is a printer.If the free limit of the account is exceeded, users need to purchase resources to expand the number of connections. (the price is not yet determined)In order to help maker better use and print objects in the epidemic situation. Raise3d now removes restrictions and gives users access to the basic features of raisecloud for free.The time of re charging shall be subject to the official notice.",
"tags": ["remote monitoring","webcam","cloud printing","control","task queue","print local files"]
},

{
"id": "/plugins/smartfilamentsensor",
"url": "/plugins/smartfilamentsensor/",
"date": "2020-10-16 00:00:00 -0500",
"title": "Octoprint-Smart-Filament-Sensor",
"description": "A plugin to directly add Smart Filament Sensors like BigTreeTech Smart Filament Sensor to Octoprint.",
"author": "Royrdan, Anni Lange",
"content": "Octoprint-Smart-Filament-SensorOctoPrint plugin that lets integrate Smart Filament Sensors like BigTreeTechs SmartFilamentSensor directly to RaspberryPi GPIO pins. This enables that this sensor can also be used on 3D Printers, that do not have a E0-Stop like e.g. Creality 1.1.4 Mainboard of Ender 3.Initial work based on the Octoprint-Filament-Reloaded plugin by kontakt.Fork of Octoprint-Filament-Revolutions plugin by RomRider.The solution for this plugin is inspired by Marlin FirmwareRequired sensorTo use this plugin a Filament Sensor is needed that sends a toogling digital signal (0-1-0…) during movement.This plugin can use the GPIO.BOARD or GPIO.BCM numbering scheme.Features  Configurable GPIO pins.  Support movement detection sensors, e.g. Smart-Filament-Sensor.  Detect if filament is not moving anymore (jammed or runout)          Detection based on timeout      Detection based on filament position returned bei M114 (unfortunately imprecise compared with firmware)      Alternative pausing commands if M600 is not supported by the printer      Installation  Install via the bundled Plugin Manager.  Manually using this URL: https://github.com/Royrdan/Octoprint-Smart-Filament-Sensor/archive/master.zipAfter installation a restart of Octoprint is recommended.ConfigurationGPIO Pin  Choose any free GPIO pin you for data usage, but I would recommend to use GPIO pins without special functionalities like e.g. I2C  Run the sensor only on 3.3V, because GPIO pins don’t like 5V for a long timeDetection timeCurrently it is necessary to configure a maximum time period no filament movement was detected. This time could be depended on the print speed and maximum print line length. For the beginning - until I figured out how to estimate the best detection time - you can run a test print and messearue your maximum time and configure this value.The default value 45 seconds was estimated on max. print speed 10mm/s, for faster prints it could be smaller.Detection distanceVersion 1.1.0 of this plugin detects the movement depending on the moved distance. Therefore it is necessary to configure a distance without movement being detected. In Marlin Firmware the default value is set to 7mm. According to this the value is set for the plugin.Sampling timeTo reduce the negative effects on the print quality a sampling time must be set. Periodically M114 code is sent to the printer to receive the current filament position. This increases the load on the printer, i.e. if the sampling time is set to small the printer starts stuttering, because it cannot process all commands fast enough. I  assume the value could differ according to the mainboard architecture (8-bit or 32-bit).Octoprint - Firmware &amp; ProtocolSince currently GCode command M600 is used to interrupt the print, it is recommended to add M600 to the setting “Pausing commands”.Since v1.1.3 there are also alternative pausing commands [M0, M1, M25, M226, M600, M601] available, for those whose printer don’t support M600.Octoprint - GCode ScriptsIf you do not want that the print is paused right on your print, I recommend to add a GCode Script for “After print job is paused”. Also adding GCode script “Before print job is resumed” might be useful, in the case you hit the heatbed or print head during the change of the filament or removing the blockage.Disclaimer  I as author of this plugin am not responsible for any damages on your print or printer. As user you are responsible for a sensible usage of this plugin.  Be cautious not to damage your Raspberry Pi, because of wrong voltage. I don’t take any responsibility for wrong wiring.Outlook  Integrated sensor connection test  Support of multiple sensors for multiextruders like 4 channel kraken hotendContact  Issues  Smart-Filament-Sensor Discord  Octoprint Discord",
"tags": ["Sensor","Filament"]
},

{
"id": "/plugins/mattacloud",
"url": "/plugins/mattacloud/",
"date": "2020-10-17 00:00:00 -0500",
"title": "Mattacloud Beta",
"description": "Making 3D printers intelligent. Remote 3D printer control and management from anywhere with advanced AI error detection and informative notifications.",
"author": "Mattalabs",
"content": "What is MattacloudFull remote control, management and access from anywhere in addition to automatic and intelligent error detection and process monitoring for your OctoPrint-enabled 3D printer. Additionally, receive notifications and updates alerting you of failures and keeping you updated on the state of your 3D print. Overview your print history and gain insights into filament use, print times and your printer reliability.Learn more about Mattacloud and its features here.Note: Mattacloud is currently still in development for OctoPrint integration so users may experience changes and errors during use.Printer SetupThe setup progress takes less than 5 minutes and consists of 5 simple steps. If you follow these, all the benefits of Mattacloud will apply to your printer. Happy printing!  Sign up to the Mattacloud Free Plan currently undergoing beta testing. If you already have, just login. This plan will remain free after the beta testing period has finished.  Select your membership type - at this stage you can only choose the free beta membership.  Add a printer to your Mattacloud by following the setup guide.  After installing the OctoPrint-Mattacloud Plugin on your OctoPrint enabled device, copy the authorization token from your newly created printer on Mattacloud into the authorization token input box presented in the OctoPrint-Mattacloud plugin settings. You can see all of your printers and their respective tokens here.  Test your token using the Activate button adjacent to the input box.  You are all setup. Happy printing!Installation with WebRTC for live video streamsOctoPrint-Mattacloud uses WebRTC to enable real-time video streams from the printer to your device. In order to utilise this capability a few additional packages need to be installed on your Raspberry Pi (or other device) running OctoPrint. These packages are not required for using the main features of the plugin.If you are not using the Mattacloud SD image then you need to install the following packages:sudo apt-get install libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libavfilter-dev libswscale-dev libswresample-dev python-dev python3-dev libsrtp2-dev libsrtp2-1 libopus-dev libvpx-dev pkg-configThese packages are required for OpenCV and are also needed to build pylibsrtp a requirement of aiortc for WebRTC.Once you have installed the above packages you can activate your Python 3 virtualenv where OctoPrint is installed. It will be something like source oprint/bin/activate. Then install the following using pip:pip install aiohttp==3.6.2 aiortc==0.9.7 numpy==1.19.1 opencv-python==4.4.0.40or if you have the plugin downloaded / cloned you can use:pip install -r webrtc_requirements.txtWhen the plugin has installed, restart OctoPrint and begin the Printer Setup process outlined below.Report problemsIf something does not appear to be working correctly and you think you may have found a bug in the OctoPrint-Mattacloud Plugin, please create an issue on the official page here. In this way your issue can be understood and fixed quickly.Or feel free to contact us via whatsthematta@mattalabs.com.Error detection and process monitoring3D printers are not the most reliable of machines. All of us have suffered from errors whilst printing and many users find themselves handcuffed to their printers, having to constantly check the printer every 5 minutes to make sure that the print is still okay! If this sounds familiar to you… hopefully this plugin will help.Numerous computer vision techniques are used to determine if an error has occurred during your 3D print. Using a mixture of machine learning, 3D printing heuristics and the direct comparison of g-code to the current state of the 3D print, an errors are reliably determined in an image of the print.Errors that the personal and industrial plans are capable of detecting are:  Detatchment from print bed  Offset  Warping  Poor bed adhesion  Spaghetti  Blocked extruder / out of filament  Hotend too close to print bedAt present, the Beta plan does not support error detection as we are still testing our AI models in house.Remote control and managementAccess your 3D printer from anywhere in the world (provided that there is an internet connection…) via the OctoPrint-Mattacloud Plugin.At present, the plugin enables you to do the following:  View and update hotend, bed and chamber temperatures  Control and home X, Y and Z axes  Select prints to retrieve information  Start, cancel, pause, resume and restart 3D prints  Upload g-code files remotely to your printer for printing  Delete g-code files remotely  Receive the latest images/snapshots from your printer  See your prints progress (time remaining and percentage completion)Notifications and updatesBy installing this plugin and linking a printer to your Mattacloud account, you can receive useful notifications and updates concerning your 3D printer via various channels. When an error occurs during the 3D printing process, you will receive an alert with an attached image showing the error in addition to current progress, material usage and other useful statistics; you can then deside to take action. Additionally, you can also set up other checkpoints to receive notifications, such as upon object completion, or when a print has reached the half way mark.The communication channels which are currently supported are:  Email (in Beta plan)  SMS (personal and industrial plans)  WhatsApp (personal and industrial plans)  Facebook Messenger (personal and industrial plans)LicenseView the OctoPrint-Mattacloud plugin license",
"tags": ["remote monitoring","cloud printing","webcam","print queue","remote control","ai","machine learning","error detection","beta"]
},

{
"id": "/plugins/arc_welder",
"url": "/plugins/arc_welder/",
"date": "2020-10-24 00:00:00 -0500",
"title": "Arc Welder",
"description": "Anti-Stutter and GCode Compression.  Replaces G0/G1 with G2/G3 where possible.",
"author": "Brad Hochgesang",
"content": "Arc Welder: Anti Stutter and GCode Compression    \t            Makers Mashup Review of Arc Welder                                The Arc Welder Tab            How To Use Arc WelderPlease read the readme file in the Github Repository for installation and usage instructions.  I am planning to add a complete wiki for the plugin in the near future and will link to that here when it is complete.Please note that if you are using Python 3, you may need to install the python3-dev package before Arc Welder will install. This is detailed in the prerequisites section of the readme file linked to above.Support Arc Welder DevelopmentPlease consider supporting my work by becoming a patron, a Github Sponsor, or by sending me beer money via PayPal.  Almost all of the donations go towards offsetting the cost of development, which is substantial. Plus, it always makes my day!  If you cannot afford to leave a tip or just don’t want to, that is fine too! Arc Welder is free and open source after all.What Arc Welder DoesArc Welder attempts to replace G0/G1 (linear move) GCodes with G2/G3 (arc move) GCodes.  This can substantially compress many GCode files and may reduce stuttering caused by sending many tiny movements in rapid succession over a slower serial connection.  Here is an example of the before and after of a single layer of a cylinder with archimedean infill produced by PrusaSlicer:                            Before:  GCode generated by PrusaSlicer.  After: GCode processed by ArcWelder.  Visualized with ncviewer. View the Full Sized Image.    Each dot in the image above represents the start or endpoint of an extrusion.  You can see that the After GCode above has far fewer moves. The processed GCode is 76.1% smaller with 96.4% fewer extrusion/retraction commands than the original file.  Detailed statistics are created and stored for each GCode file processed:                Statistics of the arc-welded file, showing a substantial reduction in file size and extrusion/retraction moves.    The results above are not typical since the source file is almost entirely circular.  A better real world example, the first layer of the famous 3DBenchy, sliced with PrusaSlicer using archimedean infill is shown below:                            Before:  GCode generated by PrusaSlicer.  After: GCode processed by Arc Welder.  Visualized with ncviewer.  View the Full Sized Image.    The result is a GCode file that is 56.2% smaller (2.3 compression ratio) with 75.0% fewer extrusion/retraction commands.  In this case, Arc Welder shows a massive decrease in small extrusion moves between 0.01mm and 1mm in length:   Min          Max   Source  Target  Change--------------------------------------------  0.000mm to   0.002mm     0      0     0.0%  0.002mm to   0.005mm     0      0     0.0%  0.005mm to   0.010mm     0      0     0.0%  0.010mm to   0.050mm     7      1   -85.7%  0.050mm to   0.100mm    29      6   -79.3%  0.100mm to   0.500mm  1342     74   -94.5%  0.500mm to   1.000mm   810    114   -85.9%  1.000mm to   5.000mm   145    341   135.2%  5.000mm to  10.000mm     1     25  2400.0% 10.000mm to  20.000mm     2     14   600.0% 20.000mm to  50.000mm     8      8     0.0% 50.000mm to 100.000mm     2      2     0.0%          &gt;= 100.000mm     2      2     0.0%--------------------------------------------       Total distance:............1929.879mm   Total count source:..................2348   Total count target:...................587 Total percent change:................-75.0%How Arc Welder WorksArc Welder reads each GCode in the source file, searching for three extrusion or retraction commands in a row.  It adds adds these points to a special shape detection class that determines if the collected points can be represented by an arc command (G2/G3).  Once an arc is detected, Arc Welder compares the original GCode path with the resulting arc command to ensure that any deviation is within the specified resolution (by default, +-0.025mm).  Arc Welder will continue to add new points to the arc until it detects either a significant deviation from the original GCode or a change in the printer’s state (a new layer, a feedrate or offset change, etc.).  It will then pull off the final point from the arc, output the altered G2/G3 command, and continue to process the file.  The resulting GCode will not vary from the source file by more than half of the specified resolution, which is configurable.  Here is a rudimentary illustration:                            An illustration of how arcs are generated.  View the Full Sized Image.    In the example above, Arc Welder has created two arcs.  The first arc starts at P1 and ends at P5 on the blue line. The original path is shown in red.  In this example Arc Welder first adds three consecutive points (P1-P3) to its shape detection class and determines that the generated arc does not deviate significantly from the original path.  It then adds P4 and P5, again detecting no significant deviation.  However, at P6, the detected deviation exceeds the maximum, so P6 is not added, and an arc is generated that replaces P1-P5.  Arc Welder then starts a new arc from P5, P6, and P7 and continues the process.  Note:  The endpoints of every arc will ALWAYS line up exactly with the original GCode.It is important to note that the example above is zoomed WAY in so that the deviation looks very large.  It is, in fact, extremely small and almost impossible to see with the naked eye.  You can customize the resolution in the plugin settings if 0.05mm (+- 0.025mm) is too large for you.Arc Welder Plugin Features  Customizable Resolution - You control the maximum allowable deviation from the original tool path.  Higher values will result in more compression but more deviation.  Lower values will produce more accurate GCode but less compression.  The default value of 0.05mm (+- 0.025mm) produces excellent results in most cases.  I would recommend a lower value only for extreme cases, like extremely high resolution models with small nozzles and very low layer heights.  Values higher than 0.05 are not recommended.  Automatic and/or Manual Processing - Arc Welder can be configured to automatically process newly added file or to allow manual processing via an integration with the OctoPrint file manager.  You can enable one or both of these methods depending on your preference.  Rename or Overwrite the Source File - Choose to keep the original source GCode file or replace it entirely with the arc-welded file.  You can also add a custom prefix or postfix to the output file.  Delete the Source File After Processing - You can create a new file and have Arc Welder delete the original file automatically in most cases.  See Detailed Conversion Statistics - Arc Welder creates and stores statistics for each converted file, including compression percentage and ratio, source/target file size, and line count, as well as a detailed comparison of extrusion/retraction counts at various lengths between the source and target file.  You can view statistics for any arc-welded file by selecting it in the file manager or by clicking on the icon within the file manager.  Detailed Conversion Progress Bar - See real time progress info as Arc Welder processes your file, including several useful statistics.  You can cancel the conversion at any time.  Enable/Disable Notifications - Tired of popup messages?  Turn them off in the settings.  Advanced Logging Settings - You can control logging from within the plugin’s settings page if you run into problems.  You can even delete the existing log(s) completely.  Restore Plugin Defaults - Easily restore the default settings if you run into trouble.  Receive Notifications for New Development or Maintenance Release Candidates - Get early notifications about new features and bug fixes.  Help contribute to the project!  Arc Welder also supports plugin-specific release channels in a future version of OctoPrint (if that feature is eventually released).Arc Welder Library and Console ApplicationThe core of the Arc Welder plugin is a set of libraries written in c++ based on code that was originally designed for the Octolapse plugin.  This code allows Arc Welder to parse GCode and determine the printer’s position and extruder state after each command.  Since the code is written entirely in c++, it is orders of magnitude faster than similar code written in Python.  The complete source, as well as a console version and inverse processor (convert G2/G3 to G0/G1), can be found here.  There are also pre-compiled binaries, though I’ve not gotten them to work properly in MacOS or in some flavors of Linux.  There are currently no GitHub hosted runners for any Raspberry Pi.  I am working on these issues.Using the console application, it is possible to arc-weld files via most slicers as a post-processor.  However, all slicers that I have tested except for Simplify 3D fail to correctly visualize the G2/G3 commands.  Simplify 3D does seem to work perfectly for this, but other slicers make it look like the GCode is faulty.  Keep that in mind if you plan to integrate the Arc Welder Console Application with your slicer.Firmware ConsiderationsYour printer’s firmware must be capable of printing G2/G3 commands to use the GCode produced by Arc Welder.  Additionally, arc support must be enabled and properly configured.  Firmware support varies, and many older versions produce arcs less accurately and more slowly than expected.MarlinMarlin has supported arc commands for a long time.  However, starting with version 2.0.6 arc support has been greatly enhanced.  I recommend you upgrade to at least this version before using Arc Welder because your experience will be much better.  Arc support must be enabled in your Configuration_adv.h file.For recent versions of Marlin (2.0.6 and above), you can send an M115 to see if your firmware has ARC_SUPPORT enabled.  For earlier versions you can send an empty G2 or G3 command.  If your printer responds with unknown command, arc support is not enabled.If your printer is running a fork of Marlin, but arc support is not enabled or is buggy, I recommend creating an issue within the fork’s repository.  “A plugin that can convert curves into arcs will be massively welcome and should make a great improvement in performance and print results.”  Scott Lahteine - Creator of Marlin FirmwarePrusa FirmwarePrusa’s fork of Marlin does support G2/G3 commands, however the default settings can produce sharp corners for very small arcs.  I’ve only noticed this in a few of my test prints, so it is not a particularly common issue.  You should be able to see it on the roof of a Benchy if you look closely.  Reducing the MM_PER_ARC_SEGMENT setting slightly can correct this but can also introduce stuttering.  Reducing the value massively (say to 0.1mm) will introduce a LOT of stutter and is NOT recommended.  Please note that adjusting this setting currently requires a manual firmware recompile.I have been toying with the firmware and have submitted a pull request to enhance the capabilities, but it hasn’t made it into the firmware yet and may require further modifications.  I am planning to add some enhancements from Marlin 2.0.6 as well.  I also added some new GCodes for adjusting arc interpolating and for retrieving the firmware settings for arc generation.  You can view the pull request here.  Feel free to give this pull request a thumbs up, but realize that it needs some work and that the good folks at Prusa Research have a lot on their plates.Also, some very old versions of Prusa’s firmware (I’m not sure exactly how old) do not support bed leveling adjustments during arc movements.  Please make sure you are using a recent version of the firmware so that interpolated movements are properly leveled.KlipperKlipper seems to handle G2/G3 commands with ease, as long as the GCode_arcs config section is enabled.  G2/G3 support was added on September 13, 2019, so make sure you update Klipper if you are using an older version.Other FirmwareThough G2/G3 support is not universal, nor are all implementations equal, it is relatively easy to test.  You can do so in the OctoPrint terminal by sending the the following commands, one at a time:G90G28 X YG0 X0 Y0G2 X40 I20If your printer supports arc commands, it should move across a small arc from the origin.  Please feel free to let me know if your firmware supports arc movements, and I may add it to the list.Warning:  The above GCode has not been tested on all printers.  Please use it with caution and report any issues here.Other Firmware ConsiderationsMost firmware will convert G2/G3 commands to many small segments through a process called interpolation.  The length of these segments varies by implementation.  In most cases the interpolated segments are much closer together than the linear segments you will find within your GCode file, but it’s impossible to know for sure without examining the firmware in detail.All firmware that I am aware of will inscribe these interpolated segments within the arc.  These segments will be entirely within the arc, only touching it at the endpoints.  This will reduce the average radius slightly.  In most cases, this effect is minimal and has no practical impact.  However, in some odd cases, like a snap fitting that is extremely sensitive to changes in diameter, the effect may be noticeable.  The smaller the interpolated segments (all firmware controlled), the less of an effect there is.  In general, it will be a much smaller effect than normal variations in filament diameter.  I hope to find a solution to this problem.G2/G3 support is not perfect at the moment, but I suspect things will start to improve as they become more common.  If you are willing and have the skills to improve G2/G3 support in any way, please do!LicenseView the Arc Welder license.",
"tags": ["gcode","compression","arc","preprocessing","g2","g3","stutter"]
},

{
"id": "/plugins/octoeverywhere",
"url": "/plugins/octoeverywhere/",
"date": "2020-11-07 00:00:00 -0600",
"title": "OctoEverywhere - Free Remote Monitoring, Notifications, And Control!",
"description": "Free, simple, and secure remote monitoring and control of your OctoPrint printer anywhere in the world! OctoEverywhere gives you unlimited OctoPrint access on any web browser and can empower your favorite OctoPrint Android and iOS apps to work everywhere! With our new instant notification technology, you can stay on top of your prints from any device, anywhere!",
"author": "Quinn Damerell",
"content": "Now including OctoPrint app support, full framerate webcam streaming, print status live streaming, printer notifications, and much more! Your full OctoPrint portal, plugins, apps, and webcam everywhere!👋 Hello!Welcome aboard the OctoEverywhere.com rocket! After a free and easy 10 second setup you will have access to your full OctoPrint powered printer… everywhere!With a 4.9/5 star rating and over 56k makers already enjoying full remote control and loads of other features, what are you waiting for? Try OctoEverywhere now!🚀 Free Remote Access Everywhere?Yes! OctoEverywhere.com empowers your printing with secure &amp; full access to the entire OctoPrint web portal you know and love. Your customizations, your webcam stream, your plugins… everywhere!Features⚡ Free &amp; full OctoPrint portal access from anywhere🎥 Free full framerate and full resolution webcam streaming📱 Empower your favorite OctoPrint iOS and Android apps to work everywhere🔔 Instant printer alerts and detailed progress notifications sent to SMS, Email, Discord, Telegram, Android, Slack, and more📺 Live stream you prints to your friends or the entire world with OctoEverywhere Live Links🔌 Full OctoPrint plugin functionality🔐 Share secure access of your OctoPrint portal with others🥰 One of the top rated OctoPrint remote access plugins🎥 Full multi-cam support🤩 ...and much, much moreIs It Safe?Safety is our #1 priority and is extensively validated in every feature we design. OctoEverywhere is a 100% secure remote solution. We utilize bank-level encryption to secure the connection between you and your printer. The service doesn’t require any complicated setup or port forwarding - just install the plugin, create an account, and you’re done!To learn more about our state-of-the-art security design and practices, checkout this blog post.Try It Now!Sounds amazing right? Seeing is believing! Head over to OctoEverywhere.com or install our OctoPrint plugin to get started in 30 seconds or less!Want to learn more?You are curious, we like you. For more information about our features, in-depth security information, and more, visit our website.Questions, Comments, Or Feedback?We build OctoEverywhere with the maker community for the maker community. We love to hear from you. Send us a message to chat directly with the development team.",
"tags": ["remote access","remote camera","remote app","remote printing","monitor","monitoring","remote","control","3rd party app support","phone","app","plugin support","webcam","video streaming","free","secure","safe","cloud printing","internet","cloud","smart","port forwarding","notifications","notification","push notifications","sms","email","telegram","discord","slack","pushover","pushbullet","desktop","windows","mac","android","iphone","ios","smart plug","mobile","mobile app","mobile alerts","alerts","filament runout","eta","snapshots","alert","progress","status","octoapp","octopod","polymer","printoid","octoremote","live streaming","streaming","sharing","twitch","youtube","tiktok","instagram","social networks","live links","print status"]
},

{
"id": "/plugins/lightsout",
"url": "/plugins/lightsout/",
"date": "2020-11-08 00:00:00 -0600",
"title": "OctoPrint-LightsOut",
"description": "Automatically shuts off lights after some delay when printing completes",
"author": "Daniel Miller",
"content": "LightsOut PluginAutomatically turns out the lights after a set period of time. Automaticallyresets the timer when:  you use M150 to turn the lights on manually,  a print finishes (completed, stopped, or failed),  or the settings are updated",
"tags": ["lights","timer","LED","M150"]
},

{
"id": "/plugins/autologin_config",
"url": "/plugins/autologin_config/",
"date": "2020-11-15 00:00:00 -0600",
"title": "OctoPrint-AutoLoginConfig",
"description": "Configure AutoLoginLocal from the UI with ease.",
"author": "Charlie Powell",
"content": "Allows for UI configuration of AutoLoginLocal - an OctoPrint feature that automatically logs in a user from a local network.                                    Do not use this if you cannot trust EVERYONE on your local network. And I really            mean everyone. If you ignore this and then someone takes over your OctoPrint instance, installs            malware on it and makes your printer print an endless stream of benchies, that's on you.            This plugin requires access control to be enabled &amp; set up correctly on OctoPrint 1.4.0 or newer.Problems, bugs, need help? Get in touch:  on the OctoPrint Community Forum  on the Issue Tracker  on the OctoPrint discordSupport my work with OctoPrint Thanks to JetBrains for sponsoring an open source license for their IDEsYou can support my work through Github here!AutoLoginLocal Configuration by Charlie Powell and contributors",
"tags": ["settings","configuration","autologin","autologinlocal","accesscontrol"]
},

{
"id": "/plugins/gcodeleveling",
"url": "/plugins/gcodeleveling/",
"date": "2020-11-29 00:00:00 -0600",
"title": "OctoPrint-GcodeLeveling",
"description": "Leveling of Z values in Gcode using manually measured positions",
"author": "Will MacCormack",
"content": "Gcode LevelingThis plugin creates a model of the work surface (using the least squares method on user provided points), allowing for leveling of machines through gcode that otherwise cannot be leveled (e.g. for a grbl machine). A user just needs to measure some z values at a variety of x and y values (e.g. with the paper test), then configure a couple of settings, and the plugin will handle the leveling on file upload.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/willmac16/OctoPrint-GcodeLeveling/archive/master.zip  The plugin depends on numpy, so it will need to install this (if it is not already installed), which can take some time on a raspberry pi.          Numpy in a python3 environment requires libatlas3-base, so some instances may need to run sudo apt install libatlas3-base to install properly.      ConfigurationSee the GitHub page for up-to-date configuration information.",
"tags": ["leveling","gcode","manual bed leveling","grbl","cnc"]
},

{
"id": "/plugins/uicustomizer",
"url": "/plugins/uicustomizer/",
"date": "2020-11-30 00:00:00 -0600",
"title": "UI Customizer",
"description": "Customize Octoprint with 5+ awesome themes, webcam and gcode widgets, rearrange layout and support mobile/tablets and much more...",
"author": "Mikkel Skovgaard",
"content": "UI CustomizerA OctoPrint plugin that allows you to customize the look and feel of the user interface.It also features a lot of other fixes and improvements:  Themes/skins - choose between 6 themes and more are coming soon  Customize tabs: Change icon, labels, order, show/hide  Change width of the columns  Sort the order to icons in the menu bar (top icons)  Move “widgets” around in columns  Turn on/off responsive layout  Improved settings window  Fixed header/topbar  Fixed footer/bottombar  Fluid/full width layout  Hide temperature background graphics  Zoomed/Floating webcam option  Extra Webcam “widget”  Extra Gcode viewer “widget”  Compact Navbar temp icons  Hide widgets  Hide main camera  Center top bar icons  Realtime preview of changesSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/LazeMSS/OctoPrint-UICustomizer/archive/main.zipConfigurationThe configuration is split into 6 tabs - all have an preview option in the top right menuGeneral  Improve mobile/responsive - enable the improved responsive modes including settings for mobile screens etc.  Fluid/full width layout - should the entire screen width be used or not  Fixed header/topbar - should the top menubar stay fixed when scrolling or not  Hide temp. graph background - Hide temperature background graphics  Fixed footer/bottombar - should the bottom bar stay fixed when scrolling or not  Hide main camera - should the main camera be hidden - only acive if the webcam widget is enabled  Compact menu - should the “dropdown” menu be a single compact menu  Zoom/float webcam icon - will add an zoom icon to the webcam live feed that will popup out the webcam video feed into a floating resizeable overlay  Gcode full-size - maximize the main gcode viewer to take up as much space as possible  Compress temp. controls - compress/minimize the temperature controls in the temperature main tabThemesSelect a theme - notice you can enable preview and see the theme in a realtime previewLayoutThe layout of the screen can be made into 1,2 or 3 columns and the size of the columns can be adjusted. The total width of the columns added together must not be greater than 12. Each column can contain zero or more widgets, widgets are the diffent “containers” for all the user interface, ie. the webcam, files etc.If you want a two or one column layout then just drag the “widgets” all the widgets into the left hand side columns.Each widget can be moved by draging. The widgets can also be hidden by clicking the eye on the right hand side of the widget.Notice there is 2 extras widgets include with UI Customizer:  Webcam widget which allows you to have a webcam outside the main tabs  Gcode widget which allows you to have a gcode viewer outside the main tabsMain tabsThe main/center tabs can be changed using this settings panel.  The up and down arrow is used to change the order of the tabs when they are displayed  The first field is for entering a custom name for the tab, if left blank it will use default.  The “eye” icon can show or hide the entire tab and its content - click to toggle show/hide.  The next icon is used to the change the icon and color of icon, shown in the tab. If no icon is selected then a blue magnifying glass is shown. Click the icon to get a dialog up for searching icons and picking a color. Enter a searchword and the icon you want and color using the “eye-dropper”. Click the trashcan icon if you dont want to select an icon.  The last dropdown is to change what is shown on the tab: Icon + Text (Icon on the left - text on the right), Text + Icon, Icon only, Text only - notice its not possible to make “empty” tabs ie. selecting “Icon only” and then no icon is selected.Top iconsThis allows you to change the look &amp; feel of the top icons in top menu  Compact “Navbar temperature plugin” - will add icons and shrink the temperature display on this awesome plugin  Center topbar icons - will horizontal center the extra plugins/top icons in the topbar  Icon order - change the order in which the icons are displayed in the top menu bar - notice some icons can be hidden. Turn on “Preview” to see themAdvanced  Disable terminal when hidden - Disables the terminal update when the terminal tab is in the background - gives a small perfomance boost.",
"tags": ["theme","themes","skin","skins","dark","style","styling","responsive","mobile","webcam","zoom","fixed","settings"]
},

{
"id": "/plugins/customcss",
"url": "/plugins/customcss/",
"date": "2020-12-10 00:00:00 -0600",
"title": "OctoPrint-CustomCSS",
"description": "Quickly add custom CSS to modify your OctoPrint UI.",
"author": "Neal Lambert",
"content": "Add your CSS by navigating to Settings -&gt; Plugins -&gt; Custom CSS.Originally developed to fix an issue with overly large thumbnails on mobile when using PrusaSlicer Thumbnails and TouchUI together.PrusaSlicer Thumbnails + TouchUI CSS Fixes/* Fix PrusaSlicer Thumbnails size when using TouchUI  */@media (max-width: 980px) {  #touch .inline_prusa_thumbnail {    max-width: 140px;    margin-right: 10px;    float: left;  }}/* Optional: Make the file list taller (reccomended by PrusaSlicer Thumbnails)  */#files &gt; div &gt; div.gcode_files &gt; div.scroll-wrapper {  min-height: 800px !important;}",
"tags": ["css","settings"]
},

{
"id": "/plugins/display_panel",
"url": "/plugins/display_panel/",
"date": "2020-12-16 00:00:00 -0600",
"title": "OctoPrint Micro Panel",
"description": "Simple control and status paired with a physical button panel and OLED display",
"author": "Seth Voltz",
"content": "This plugin implements the software control side of an OctoPrint Control Panel for Octopi. The hardware half is a series of 4 buttons, an OLED screen and a 3D printed case that mounts on the printer next to the Raspnerry Pi so it can be plugged in to the header pins.Watch a demo of the panel in action! More photos are at the end of this readme.Hardware3D models are available on Thingiverse.Please see the plugin repository for the latest hardware and wiring instructions. The wiring instructions at the time of publishing are below.SetupNOTE: This plugin required OctoPrint to be updated to run on Python 3. Please follow these instructions if you are not already on Python 3.Install via the bundled Plugin Manageror manually using this URL:https://github.com/sethvoltz/OctoPrint-DisplayPanel/archive/main.zip",
"tags": ["monitoring","hardware","physical hardware","oled"]
},

{
"id": "/plugins/octoprint_nanny",
"url": "/plugins/octoprint_nanny/",
"date": "2020-12-25 00:00:00 -0600",
"title": "OctoPrint Nanny",
"description": "Get notified of print defects and safety hazards",
"author": "Leigh Johnson",
"content": "What is Print Nanny?  Full remote control from anywhere, plus automatic defect and safety hazard detection.  Push notifications to SMS, Email, Slack, Discord, and more!  Build custom workflows to handle shipping, filament resupply, or update product availability in your online store.  Send print-on-demand orders to job queue.  Smart slicer recommendations - perfect for beginners.  Developer API &amp; Webhooks for advanced automation.Learn more about Print Nanny: https://www.print-nanny.com/Note: currently in closed Beta. Please request an invite if you’re interested in a preview of Print Nanny.Setup  Create an account  Install the OctoPrint Nanny plugin using the Plugin Manager or clone the Github repo.  Copy your Print Nanny authentication token.  Open OctoPrint’s settings and paste your token. Don’t forget to test your connection and save!  That’s it! Print Nanny will automatically discover new printers, save your profiles, and generate detailed reports about your print jobs.Note: Print Nanny requires a webcam to function!You’ll receive email notifications by default. Additional setup may be required for other notification sources and custom workflows.Stay Tuned!This document will be updated when Print Nanny v1.0.0 is released. By requesting a Beta invitation, you are opting in to receive email updates about new features and development.  Read the Developer Blog  Join DiscordWill this plugin cost money?Short answer: yesLonger answer: Print Nanny will be released under an Open Source license in 2021, financially supported by a cloud-hosted subscription service and business licensing model. That means the OctoPrint plugin, webapp, data &amp; training pipelines, and machine learning model architechtures &amp; trained weights will be 100% Open Source. 🦾 My mission is to provide:  Free (“free” as in “freedom”, not “free” as in “free beer”) self-hosted, self-supported community distribution.  Low-cost hosted tier for hobbyists with one or two printers.  Premium support for print shops and e-commerce stores.Details about pricing will be announced before launch.Participation in the Beta test will be rewarded with special discounts and swag giveaways.",
"tags": ["ai","automation","quality control","remote","monitor","monitoring","alert","alerting","workflow","automation"]
},

{
"id": "/plugins/LongPathSDList",
"url": "/plugins/LongPathSDList/",
"date": "2021-01-03 00:00:00 -0600",
"title": "OctoPrint-Longpathsdlist",
"description": "Could block serial communication - read more at the plugin homepage! This is a simple plugin to show long path names in the SD List.",
"author": "Petttkous",
"content": "Long Path SD LISTThis is a very simple plugin that enhances the SD list filenames",
"tags": ["SD Long Path List","SD List","M20","M33"]
},

{
"id": "/plugins/TimeToFilament",
"url": "/plugins/TimeToFilament/",
"date": "2021-01-14 00:00:00 -0600",
"title": "OctoPrint-TimeToFilament",
"description": "Display time until next filament change",
"author": "eyal0",
"content": "This plugin requires OctoPrint-PrintTimeGenius.TimeToFilament can show you the time until the next filament change inyour print.  It can also show the time until your next layer willstart.  In fact, it’s extensible and can show you whatever you want ifyou configure it through the settings!How it works:TimeToFilament scans through your gcode looking for a line that youspecify.  Then it parses the text on that line and sends it to yourbrowser along with how many seconds until the printer will reach thatline.  Your browser will use that to create some text to display rightbelow the total time to print.If you know how to write a regularexpression, you can make your own.  If youneed this and have trouble with it, file a request.http://plugins.octoprint.org/plugin/TimeToFilament/",
"tags": ["filament","time","remaining","change"]
},

{
"id": "/plugins/webdavbackup",
"url": "/plugins/webdavbackup/",
"date": "2021-01-16 00:00:00 -0600",
"title": "WebDAV Backup",
"description": "This plugin will automatically save a copy of your OctoPrint backup to a WebDAV server upon completion.",
"author": "edekeijzer",
"content": "WebDAV BackupThis plugin will automatically upload a backup upon completion to a WebDAV compatible storage server.ConfigurationPlease note that the password to connect to the WebDAV server will be stored in the OctoPrint configuration in plain text, so use an app specific password if possible. See documentation how to configure this for Nextcloud, OwnCloudGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["Backup","WebDAV","Nextcloud","OwnCloud"]
},

{
"id": "/plugins/OctoBuddy",
"url": "/plugins/OctoBuddy/",
"date": "2021-01-17 00:00:00 -0600",
"title": "OctoBuddy",
"description": "A plugin that allows common printer actions to be performed with physical buttons via GPIO",
"author": "Mark Lorenz",
"content": "OctoBuddy is 3D printable button panel with an accompanying OctoPrint plugin that lets perform common printer actions like moving your print head with the push of a single button.  It let’s you speed up things like maintenance, troubleshooting, and filament changes much quicker and easier by bypassing the need to access OctoPrint interface or cumbersome printer menus.  The concept is simple, connect a button to the Raspberry Pi GPIO interface and tell the plugin which what action you want the port to perform.  You can mount your buttons to one of the  my button panels  or make your own.OctoBuddy can currently perform the following actions:    Home Printer    Jog any Axis by a configurable distance    Toggle bed temperature between a configurable temperature and 0    Toggle nozzle temperature between a configurable temperature and 0For a full how-to on building your own OctoBuddy go here: https://www.factoryrestart.com/octobuddyI build these things cause I like it.  I make them available to you because… well, why not.  If you like my work and would like to donate just click here.  All contributions are much appreciated.",
"tags": ["control","heat bed","GPIO","easy control","heat nozzle","jog axis","home printer","push button","pushbutton","printer interface"]
},

{
"id": "/plugins/octolight",
"url": "/plugins/octolight/",
"date": "2021-01-18 00:00:00 -0600",
"title": "OctoLight",
"description": "A simple plugin, that add's a button to the navbar, toggleing GPIO on the RPi. It can be used for turning on and off a light.",
"author": "Žiga Kralj",
"content": "A simple plugin that adds a button to the navigation bar for toggleing a GPIO pin on the Raspberry Pi. I use it for turning ON and OFF the light on my 3D printer.",
"tags": ["raspberry pi","gpio"]
},

{
"id": "/plugins/usb_keyboard",
"url": "/plugins/usb_keyboard/",
"date": "2021-01-20 00:00:00 -0600",
"title": "USB Keyboard",
"description": "Use a USB Keyboard to control your printer and Octoprint!",
"author": "Barrett Ford",
"content": "Life3D printer interfaces are a pain to navigate using that encoder wheel.Octoprint’s interface always seems to take forever to reload on a tablet.Wouldn’t it be nice if you just had some easy hardware buttons to do those simple things you do all the time?Wait no more!A fully configurable USB Keyboard plugin has arrived!Features  Fully customizable keyboard key layouts with self-assigned keys/keycodes  Several configurable command types including arbitrary gcode and variable manipulation  Documentation found in-settings. Look for the [i] buttons!  Keyboard troubleshooting and setup tools  Keyboard Profiles and easy profile duplication",
"tags": ["usb","keyboard","control","printer","configure","gcode","macros","psu","plugin"]
},

{
"id": "/plugins/toptemp",
"url": "/plugins/toptemp/",
"date": "2021-01-24 00:00:00 -0600",
"title": "Top Temp",
"description": "Show the temperatures of everything in the navbar/topbar of OctoPrint. It can display the hotend, chamber, all tools/hotends and also add an unlimited number of your own “top widgets” for example showing cpu temperature, fan speed - well anything that is a number (for now) that you can get back from running a command.",
"author": "Mikkel Skovgaard",
"content": "Top TempA plugin that will show you the temperatures in the navbar/topbar of OctoPrint. It can display the hotend, chamber, all tools/hotends and also add an unlimited number of your own “top widgets” for example showing cpu temperature, fan speed - well anything that is a number (for now) that you can get back from running a command.It can all be customized and setup to fit your needs:  Add a small background graph to show the history directly in the topbar  Customizable “widgets” can have different run intervals  4 different custom types:          Command: Run a local command on the RPI/PC and get the result back      GCode sent: Get data from the GCode being sent. For example: Cooling fan speed, Feedrate, Z-height      From printer: Get data based on data from the printer. For example:M105 commands with ambient and probe temp if you printer support its      Server data: CPU percentage/frequency, load average, memory total/avail/used/free, swap, disk free/total/used, all sensors (temperatures and fans), battery timeleft/percentage        Popover graphs with full history with a quick clance  Show temperature in Celsius or Fahrenheit  Hide printer temperatures when not operational  Set padding between each and outer margin  Sort the order of the “widgets”  Show target temperature  Show target progress aka getting hotter or colder  Show temperature symbol  Set label or no label to be shown  Icon or no icon to be shown  Colorize icons to indicate when hot  Number of digits to display  Set background graph transparency, height, line width and color  Realtime previewPlanned features  Small font options  Max width per “widget”SetupInstall via the bundled Plugin Manageror manually using this URL:    https://github.com/LazeMSS/OctoPrint-TopTemp/archive/main.zipConfigurationInstall and read the onscreen information - it should be pretty self-explanatory else play with it :)Custom commandsThe custom commands allow you to run any OS command by entering a command into the “Command” field. There is a Test button that will run the command and let you validate the returned data. At the moment the returned data has to be a number (float or integer) and will be fixedIf the plugin has detected any known ways of finding interesting data on startup this will be shown in Predefined dropdown button.At the moment it only looks for known CPU temperature, but if you know of any good generic ways to display interesting data then post it here https://github.com/LazeMSS/OctoPrint-TopTemp/issues3RD Party software      http://gionkunz.github.io/chartist-js/index.htmlThis plugin uses the wonderful CHARTIST.JS library to make the svg graphs        https://psutil.readthedocs.io/en/latest/#The included psutil in octoprint is used and gives all the important cpu/disk etc. data.  ",
"tags": ["temperature","widgets","customize","fan","navbar","temp","heater","tool","chamber"]
},

{
"id": "/plugins/meatpack",
"url": "/plugins/meatpack/",
"date": "2021-01-26 00:00:00 -0600",
"title": "MeatPack",
"description": "Automatic G-Code Compression",
"author": "Scott Mudge",
"content": "MeatPackEasy, fast, effective, and automatic g-code compression!MeatPack is a plugin which automatically compresses/packs outgoing g-code to compatible firmware (*see below!). It uses a unique data packing method which leverages the limited character-set inherent to most g-code. It is able to pack the most common characters in g-code into 4-bit blocks, while also retaining the ability to send full-width characters where needed. It also has the option to strip outgoing whitespace characters for an even greater compression ratio (ensure your firmware supports this).It compresses/packs outgoing g-code by a ratio of 0.55 (or 0.61 without whitespace removal enabled). Meaning that what would normally be a 115,200 baud connection effectively becomes a 210,000 baud connection, with no changes to hardware. And it does all this with virtually zero computational overhead, so it is compatible with even the most speed-limited 16-MHz controllers.MeatPack does require firmware support!, so do NOT install this plugin without first upgrading your firmware to a compatible build (where available). If you do not have a compatible firmware and install this plugin, connection to your printer may fail.Firmware with MeatPack Support:To check if your firmware has MeatPack support, please check here: https://github.com/scottmudge/OctoPrint-MeatPack#firmware-with-meatpack-supportAdding support is fairly straight-forward, so if you’d like to add support into other firmware, please contact me and I can provide the latest firmware-side source code (also available in Prusa fork above).",
"tags": ["gcode","compression","firmware","serial","packing","prusa","marlin"]
},

{
"id": "/plugins/SimplyPrint",
"url": "/plugins/SimplyPrint/",
"date": "2021-02-02 00:00:00 -0600",
"title": "SimplyPrint Cloud",
"description": "3D print online anywhere; elevate your 3D printing experience from your computer or phone, with smart features like filament manager, livestream, print queue, and much more. Simple, beautiful, smart.",
"author": "SimplyPrint",
"content": "Connect your printer to the SimplyPrint cloud in minutes\tInstalling SimplyPrint on your Raspberry Pi instantly elevates your 3D printing experience. You will get full control of your printer from anywhere in the world.  Manage multiple printers from one unified panel  Start, stop, pause and monitor your prints from anywhere (see webcam, estimated finish, current print %)  Use a slicer that knows your printer, and what filament is in use  Manage your filament from the filament management system  Bring your 3D files with you anywhere, in your personal, secure file storage  Queue the prints you can’t wait to print!  And much more…Read more about SimplyPrint and its features on https://simplyprint.io/SimplyPrint installation  Install the SimplyPrint Cloud plugin  Follow the instruction that appears after install (finish install on the SimplyPrint website)  You’re done in less than 2 minutes!Companion appBring your printer with you in your pocket, at all times, using our Android or iOS app.Does it cost anything?We have a free plan called “Basic”, which will remain free forever. This plan includes the use of 2 printers connected to the cloud, accessible even when you’re not home.For those who want a little more out of their 3D printer, we have two subscription plans with features like; smart filament changing, smart-rotation in slicer, up to 1 FPS webcam stream, SMS notifications, statistics, print queue &amp; much moreSee the full list of features that our different subscription plans have on the SimplyPrint website.Future plans for SimplyPrintWe have a lot of stuff planned for the near future, we’re still in beta, so this is just the beginning!Check out our public roadmap at; https://simplyprint.io/roadmapHow does SimplyPrint change OctoPrint?To enhance the user experience as much as possible, SimplyPrint takes control of two core OctoPrint features;  GCODE scripts          If you use the “GCODE scripts” feature, the “cancel”, “pause” and “resume” GCODE scripts will be syncronized to SimplyPrint and stored in our “GCODE profiles” system. So they won’t disappear, you’ll just have to modify them via the SimplyPrint platform instead.        Printer profiles          When you select which printer you have in SimplyPrint, we know what its details are (print volume, nozzle, etc.), and you can modify it as much as you want. We automatically create a printer profile with all the details your printer has in SimplyPrint, and set it as your default profile. Your old profile(s) will not be removed :)        That’s it! You can use OctoPrint just like before. There’s even a “Go to OctoPrint” button on your printer, that takes you to OctoPrint when you’re on the same network as your Pi. When you’re out, SimplyPrint has got your back!Questions, comments or want to join the community?We have a live chat support on our website (open 5 hours all week days, in our local timezone, GMT+1, sorry, we’re just 3 guys on the project, living in Denmark :)). You can also always send us an email at contact@simplyprint.ioAlso, come hang out with us in our Facebook group! A strong community is important to us, and we always listen to suggestions (and often implement them), we and usually fix problems lighning fast ;)  ",
"tags": ["cloud","simplyprint","remote monitoring","remote access","print local files","print queue","control","webcam"]
},

{
"id": "/plugins/robotcontrol",
"url": "/plugins/robotcontrol/",
"date": "2021-02-11 00:00:00 -0600",
"title": "Robot Control",
"description": "Plugin to control a robot over i2c",
"author": "Louis Sarwal",
"content": "Robot Control PluginPlugin for controling my robot via the i2c bus.ConfigurationCurrently For a four servo robot(I plan to add support for more).You will also need to enable i2c bus via sudo raspi-cofig through the terminal, accessible through ssh pi@octopi.local:22theninterface options&gt;enable i2c&gt;yes&gt;finishFor the raspi, addresses cannot be lower than 3, and the arduino only use addresses higher than 8, so the address must be an integer 8-127, and must be the same for the adruino and the raspi.There are sliders in the robot control tab, and gcodes can be used with the format @servo[1..4]:[ANGLE], such as @servo2:90 or @servo4:12.Screenshot",
"tags": ["i2c","automation","robot","robotics","GPIO"]
},

{
"id": "/plugins/inlineconfirm",
"url": "/plugins/inlineconfirm/",
"date": "2021-02-14 00:00:00 -0600",
"title": "OctoPrint-InlineConfirm",
"description": "Removes the confirm cancel print dialog and replaces it with confirmation by clicking the cancel buton twice.",
"author": "j7126",
"content": "This plugin changes the behaviour of the cancel print button, so that instead of bringing up a dialog to confirm you want to cancel the print, the cancel print button will expand and say ‘click again to confirm cancel’.To confirm canceling the print, press the button again. If it is not clicked again within 5 seconds it will not cancel the print.This allows you to quickly and easily cancel a print with a double click, while being more likley to prevent an acidental cancelation than disabling confirm cancel in octoprint settings.",
"tags": ["ui","control","cancel"]
},

{
"id": "/plugins/gpiocontrol",
"url": "/plugins/gpiocontrol/",
"date": "2021-02-16 00:00:00 -0600",
"title": "GPIO Control",
"description": "GPIO Control adds a sidebar with on/off buttons. You can add as many buttons as you want that will control each device connected to your Raspberry Pi.",
"author": "Damian Wójcik",
"content": "Very useful if you want to add some electronic/improvements to your printer.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/catgiggle/OctoPrint-GpioControl/archive/master.zipConfigurationJust add correct GPIO configuration:  select icon using icon picker (or typing manually) for better identification  type name for your device connected to GPIO  type pin number according to BCM numeration - for more details please visit this page  select if device is driven for low or high state of GPIO          active high means that device is on for high state of GPIO and off for low state      active low means that device is on for low state of GPIO and off for high state        select if device should be on or off by default eg. after startup",
"tags": ["raspberry pi","gpio","control"]
},

{
"id": "/plugins/TpLinkAutoShutdown",
"url": "/plugins/TpLinkAutoShutdown/",
"date": "2021-02-17 00:00:00 -0600",
"title": "OctoPrint-TpLinkAutoShutdown",
"description": "This plugin is designed to help you integrate your IoT TP-Link Kasa wireless plug into OctoPrint. The basis of the plug-in is to enable you to automatically switch-off your 3D printer once a print has successfully completed.",
"author": "James D. McCannon",
"content": "This plugin is designed to help you integrate your IoT TP-Link Kasa wireless plug into OctoPrint. The basis of the plug-in is to enable you to automatically switch-off your 3D printeronce a print has successfully completed.Requirements  Python &gt;=3.7, &lt;4.0SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/jamesmccannon02/OctoPrint-Tplinkautoshutdown/archive/master.zipSimple installationInstallation can be achieved through two options. The first and simplest option is to use the plugin manager within OctoPrint and search for TpLinkHandler. Then upon installation all you need to do is re-start you device and the plugin will be installed and ready for use.Manual installationTo manually install your plugin, follow these steps:  Open settings,  Click on ‘Plugin Manager’  Now click ‘Get More’  A window will then pop-up. There will be a text box with ‘Enter URL…’. Paste the URL from above. This URL must be the URL from this README.md file not the URL of the webpage within your browser.  Finally click install  Restart OctoPrint and you are ready.Connection to a deviceTo connect to your smart device, simply download the plugin and navigate to ‘settings &gt; TpLinkHandler’Current features  Manually switch your Tp-Link socket on and off.  Automatically switch your Tp-Link socket on and off.  choose if you want your timelapse to render before the plug is turned off automatically (great if you use the same plug for OctoPrint and the printer).  When using the smart strip KP303 you can manually decide what each socket does.Features coming soon  Within the near future, you will be able to control how your printer reacts once a print has finished, paused, started etc.  Additionally, an automatic search for your IoT device will be added. This will save you as the user searching for your Smart Plug.  Integration will be added to control other Kasa devices including smart lights, bulbs.  Any other recommendations are welcomed.To connect your Kasa device, you will need to click the settings icon within the navigation bar and then down the right-hand side of your screen (under ‘plugins’) you can select the ‘TpLinkHandler’. Then type the IP address of your smart-plug and click save. Now you are ready.compatibilityAlthough, this plugin may work with a number of other Kasa devices, this plugin has been designed to definitively work with the following devices.Smart Plugs:  HS100  HS103  HS105  HS107  HS110Smart Strips:  KP303Authors  James D. McCannon - https://mccannon.me.ukContributionsContributions (be it adding missing features, fixing bugs or improving documentation) are more than welcome, feel free to submit pull requests!ScreenshotsTop navigation buttons to allow simple manual controll over the Tp-Link deviceViews from within the settings",
"tags": ["Printer","Kasa","Tp-Link","Auto_Shutdown"]
},

{
"id": "/plugins/SlicerEstimator",
"url": "/plugins/SlicerEstimator/",
"date": "2021-02-24 00:00:00 -0600",
"title": "Slicer Estimator",
"description": "Slicer Estimator - adds accurate remaining time to print, remaining time to filament changes and other custom metadata like filament brand, etc. to OctoPrint",
"author": "Nils Hendrik Rottgardt",
"content": "Slicer Estimator - for an accurate remaining time to print and custom metadata in OctoPrintWith this plugin you can use the more accurate estimation of the slicer instead of OctoPrints estimations. So it will be very accurate, as the slicer created each command of the GCODE.Also it is possible to add custom metadata to the GCODE and make it visible in OctoPrints filelist or printer state view. For example the material the GCODE is created for becomes visible inside OctoPrint. And if you like to know when a M600 filament change is expected or a tool switch it is also shown. But this is note available in any mode.The default configuration matches the syntax of the following slicers, but you can change it in the plugins custom settings according your needs.  Cura  Cura M117  Simplify3D  PrusaSlicerA more detailed description and manual is available on Github - the plugin’s homepage on the right.For plugin developers an API description is available to add metadata also in other plugins.More configurations can be added, please request additions via a Github issue.",
"tags": ["helper","estimator","estimation","time","print time","metadata","progress","eta","analysis","cura","prusaslicer","finish time","filament","file manager","gcode"]
},

{
"id": "/plugins/ublmeshedit",
"url": "/plugins/ublmeshedit/",
"date": "2021-02-24 00:00:00 -0600",
"title": "OctoPrint-UBLMeshEdit",
"description": "A plugin that provides a method for manually editing and saving/loading UBL meshes.",
"author": "Taylor Talkington",
"content": "OctoPrint-UBLMeshEditUBL Mesh Editor can be used to view, edit and manage Marlin Unified Bed Leveling (UBL) meshes.See the plugin repository for the most up to date information and features: https://github.com/The-EG/OctoPrint-UBLMeshEditNote: this is only intended for UBL. This plugin will attempt to show and provide basic functionality for ABL meshes, but some features will be disabled and others may not function as expected.For issues and feature requests, check the issues on GitHub and create one if needed.",
"tags": ["bed leveling","ubl","mesh"]
},

{
"id": "/plugins/ignorepausedforuser",
"url": "/plugins/ignorepausedforuser/",
"date": "2021-02-25 00:00:00 -0600",
"title": "IgnorePausedForUser",
"description": "Plugin to ignore 'Paused for User' message from printer.",
"author": "Davide Mencarelli",
"content": "IgnorePausedForUserOctoprint plugin to ignore ‘Paused for User’ message from printer.Occasionally when printing from Octoprint the printer stuck with the message “Paused for user”.This plugin when receives that message from the printer, sends an M108 to resume printing immediately.Obviously it should not be used if one or more filament changes are planned.",
"tags": ["paused for user","pause","ignore pause","stuck print"]
},

{
"id": "/plugins/translatemodel",
"url": "/plugins/translatemodel/",
"date": "2021-03-01 00:00:00 -0600",
"title": "OctoPrint-TranslateModel",
"description": "A plugin to move models around without re-slicing.",
"author": "Will MacCormack",
"content": "OctoPrint-TranslateModelTranslate Model allows you to move models around in gcode files without reslicing.Features  Select files via the translate button in the file pane  Quick and easy model movement along the x and y axes  Options to automatically print files after translationSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/Willmac16/OctoPrint-TranslateModel/archive/main.zip  This plugin will compile its C++ code on install, but this should be pretty quick.See the GitHub page for up-to-date information.",
"tags": ["gcode"]
},

{
"id": "/plugins/youtube_timelapse",
"url": "/plugins/youtube_timelapse/",
"date": "2021-03-09 00:00:00 -0600",
"title": "Octoprint Youtube Timelapse",
"description": "Automatically upload rendered timelapses to Youtube. Can also delete after upload to save space on the Raspberry Pi SD Card.",
"author": "ryanfox1985",
"content": "OctoPrint-Youtube-TimelapseAutomatically upload rendered timelapses to Youtube. Can also delete after upload to save space on the Raspberry PiSD Card. In order for the plugin to work properly you will have to create a Google OAuth App to authorize access. To create your own Google OAuth app please follow the directions outlined in the Prerequisites.ConfigurationOnce the Prerequisite are met and you have downloaded your client_secrets.json file follow the steps here to authorize the plugin to your newly created OAuth app.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.",
"tags": ["youtube","timelapse","oAuth","google"]
},

{
"id": "/plugins/octorelay",
"url": "/plugins/octorelay/",
"date": "2021-03-13 00:00:00 -0600",
"title": "OctoRelay",
"description": "A plugin to control relays or other things on the GPIO pins of your raspberry pi. For example turn the power of printer, the light or a fan ON and OFF via the web interface.",
"author": "Boris Burgstaller",
"content": "A plugin that adds buttons to the navigation bar to toggle GPIO pins on the Raspberry Pi.I use it with a 4 relay board, and printed this case for it: https://www.thingiverse.com/thing:2975944Just hooked up the GPIO pins with the relay board, and now I can turn the power of the printer, the fan and the light on and foo with OctoPrint.",
"tags": ["raspberry pi","GPIO","relay","power","switch"]
},

{
"id": "/plugins/octolabel",
"url": "/plugins/octolabel/",
"date": "2021-03-21 00:00:00 -0500",
"title": "OctoPrint-OctoLabel",
"description": "Label printing plugin for OctoPrint",
"author": "Lowie Goossens",
"content": "OctoLabel is a plugin allowing Octoprint to print labels.Work based on the amazing plugins Octorant by @bchanudet, Octotweet by @Jean Pierre GARCIA, and the amazing api label_api by @Philipp Klaus.Install the pluginIncluded in the folder label print api, there you find the api writen by Philipp Klaus.Run this api on a seperate raspberry connected to a brother label printer and modify the namebadge plugin.It is possible to change the lettertype, textposition, of label type,…It is important to change the ip-adres and printer settings in the file label_api (Do not change the port).The following printers are claimed to be supported (✓ means verified by the author or by contributors):QL-500 (✓), QL-550 (✓), QL-560 (✓), QL-570 (✓), QL-580N, QL-650TD, QL-700 (✓), QL-710W (✓), QL-720NW (✓), QL-800 (✓), QL-810W (✓), QL-820NWB (✓), QL-1050 (✓), and QL-1060N (✓).The new QL-800 series can print labels with two colors (black and red) on DK-22251 labels.Note: If your printer has an ‘Editor Lite’ mode, you need to disable it if you want to print via USB. Make sure that the corresponding LED is not lit by holding the button down until it turns off.The available label names can be listed with brother_ql info labels: Name      Printable px   Description 12         106           12mm endless 29         306           29mm endless 38         413           38mm endless 50         554           50mm endless 54         590           54mm endless 62         696           62mm endless 102       1164           102mm endless 17x54      165 x  566    17mm x 54mm die-cut 17x87      165 x  956    17mm x 87mm die-cut 23x23      202 x  202    23mm x 23mm die-cut 29x42      306 x  425    29mm x 42mm die-cut 29x90      306 x  991    29mm x 90mm die-cut 39x90      413 x  991    38mm x 90mm die-cut 39x48      425 x  495    39mm x 48mm die-cut 52x29      578 x  271    52mm x 29mm die-cut 62x29      696 x  271    62mm x 29mm die-cut 62x100     696 x 1109    62mm x 100mm die-cut 102x51    1164 x  526    102mm x 51mm die-cut 102x152   1164 x 1660    102mm x 153mm die-cut d12         94 x   94    12mm round die-cut d24        236 x  236    24mm round die-cut d58        618 x  618    58mm round die-cutLabel SettingsHere you can customize the timing of every Label handled by OctoPrint.  Toggle the message : by unchecking the checkbox in front of the time title, you can disable printing the label.  Message : you can change the default content here. See the section Message format for more information.  Notify every XX% : specific to the printing progress message, this setting allows you to change the frequency of the notification:          10% means you’ll receive a message at 10%, 20%, 30%, 40% … 80%, 90% of the printing process.      5% means you’ll receive a message at 5%, 10%, 15%, 20% … 80%, 85%, 90%, 95% of the printing process.      etc.      Scripts SettingsOctoLabel allows you to launch scripts everytime a message is sent:  Before sending: perfect for turning some LED on to ensure the webcam will always have enough light when taking the snapshot.  After sending: perfect for turning the same LED off :smiley:.Script configuration was deliberately made a little harder, as running scripts exposes much more of the host computer. You can find more information on the OctoRatn wiki.Message formatMessages are regular twitter messages, which means you can use:  :emoji: shortcuts to display emojis.  @mentions to notify someone.Some events also support variables, here is a basic list:Printing process : started event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage locationPrinting process : failed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage locationPrinting process : done event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin} : the origin storage location  {time}: time needed for the print (in seconds)  {time_formatted} : same as {time}, but in a human-readable format (HH:MM:SS)Printing process : failed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting process : paused event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting process : resumed event  {name}: name of the file that is being printed  {path}: path of the file in its origin location  {origin}: the origin storage location  {position}: position of the hotendPrinting progress event  {progress} : progress in % of the print  {spent}: time spent since the start of the print (in seconds)  {spent_formatted} : same as {spent}, but in a human-readable format (HH:MM:SS)  {remaining}: time remaining until the end of the print (in seconds)  {remaining_formatted} : same as {remaining}, but in a human-readable format (HH:MM:SS)Printer state : error  {error} : The error receivedFor more reference, you can go to the Octoprint documentation on Events.",
"tags": ["label","notifications","brother"]
},

{
"id": "/plugins/OctoText",
"url": "/plugins/OctoText/",
"date": "2021-03-30 00:00:00 -0500",
"title": "OctoText",
"description": "Send text messages on common printer events",
"author": "Stephen Berry",
"content": "OctoText - Simple, Easy to use, Free text or email notificationsOctoText is a notification plugin that will send you a text or email on configurable printer events. Allyou need is an email account! The printer status - along with a webcam snapshot if configured - willbe sent to you either through email or SMS text message.OctoText is not a service, you will never be charged, and your information is only stored on the device itis installed on and never transmitted anywhere for any reason.New in this release: Thumbnails from PrusaSlicer and Cura are read from newly uploaded filesand sent on printer start notifications. Pause detection for Prusa \"wait for user\" messages on filament change events. SSL protocol has been added for services that don't support TLS. better message formatting. the test button on the navigation bar is now an envelope and can be hidden. bug fixes with webcams that are rotated and flipped. the printer name is now used in the messages to identify the source of the notification.Get optionally notified on the following printer events:    File uploaded    Print started    Print finished    Print failure     Print cancel     Print pause     Print resume     Periodic progress updates     Error (unrecoverable)OctoText plugin installationIf you can set up an email account you can configure OctoText!  Install the plugin via the Plugin Manager  Choose an existing email or set up a new email account to be used for the plugin. It is recommended that you use a freeservice such as Microsoft’s Outlook just for this. Your email host will must allow you to send messagesvia an SMTP connection and you will need the port and server address information to set up OctoText.  Open the settings tab on Octoprint for the OctoText settings and change the default gateway and portfor your email hosting service. As an example, Outlook uses smtp.office365.com for its gateway and 587 for the port number.If your service uses SSL encryption then you will need to check the SSL box and set the port number appropriately(usually this is port 465). TLS encryption is the default.  Optionally modify the “Message” setting for the test.  Change the email address and password settings to match the account you have set up. The password is stored securely onthe OctoPrint server and NEVER transmitted beyond initiating the email connection.  For a text message enter the phone number and SMS gateway(1), for email destination enter the username and host.com address  If you are going to use the webcam - test the snapshot setting first!  Save your settings.  Press the test button!That’s it! You will get feedback relatively quickly if the text/email was configured correctly.The only error case that we cannot detect easily is a bad destination address of the text or email.Some email services such as gmail and yahoo require an “app” password that you will need to usein order to login to the account. Check your email provider to see how this is done or go to theOctoText discussion board for instructions: FAQ(1) https://en.wikipedia.org/wiki/SMS_gatewayProblems?If you are having trouble with your setup, you can post on the discussion board and I’ll get to your question as soon as I can.Please include a copy of the octoprint log from the logging menu of octoprint.https://github.com/berrystephenw/OctoText/discussions",
"tags": ["octotext","printer status","email","text","notification"]
},

{
"id": "/plugins/energeniecontrol",
"url": "/plugins/energeniecontrol/",
"date": "2021-04-05 00:00:00 -0500",
"title": "OctoPrint-EnergenieControl",
"description": "Controls Energenie sockets to turn printer on and off.",
"author": "Arlo Blythe",
"content": "Uses the Energenie remote control sockets to turn the 3d printer on when OctoPrint connects, and turn it off when it disconnects.The control board and sockets can be found here and hereThe plugin doesn’t add any UI to OctoPrint, it just runs when OctoPrint connects to, or disconnects from, the printer. This can be done from the OctoPrint sidebar, but any automatic connections or disconnections will also trigger it.",
"tags": ["raspberry pi","GPIO","power","wireless"]
},

{
"id": "/plugins/psucontrol_rpigpio",
"url": "/plugins/psucontrol_rpigpio/",
"date": "2021-04-05 00:00:00 -0500",
"title": "PSU Control - RPi.GPIO",
"description": "Adds legacy RPi.GPIO to OctoPrint-PSUControl as a sub-plugin",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-PSUControl-RPiGPIO for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","gpio"]
},

{
"id": "/plugins/wled",
"url": "/plugins/wled/",
"date": "2021-04-16 00:00:00 -0500",
"title": "WLED Connection",
"description": "WLED is an awesome project, as is OctoPrint. What could be better than a plugin linking the two?",
"author": "Charlie Powell",
"content": "This plugin allows you to configure a WLED device to connect to OctoPrint, and the LEDs can react to different eventsto display the status of your prints with ease!Inspired by my other plugin, OctoPrint WS281x LED Status, itaims to provide a similar experience of high configurability with ease of use.Current features:  Reacting to printer states including:          Idle      Disconnected      Print started      Print success      Print failed      Print paused        Tracking print progress  Highly configurable settings &amp; and easy to use UI  … and more!This project is under early development, please be patient as bugs are fixed and features are added!For the most up to date information, be sure to check out the GitHub RepositorySetupCompatibilityThis plugin will only install on Python 3 systems. For a guide to upgrading (it’s easy!), please see myblog post on the OctoPrint blog for more details.In addition, I can also only guarantee compatibility with OctoPrint 1.5.0 and newer. Older versions may not work as expected.InstallInstall via the bundled Plugin Manageror manually using this URL:https://github.com/cp2004/OctoPrint-WLED/releases/latest/download/release.zipNote: Do not try and install the plugin this way if it does not show up in the plugin manager - this likely means it is not compatible with your system!ConfigurationConfiguration can be performed in the OctoPrint UI, under Settings &gt; WLED Integration.More documentation and explanation is on the way!Support My EffortsI created this plugin in my spare time, for the community. If you have enjoyed using it, please consider supporting it’s development through GitHub sponsors. Monthly, one-time or a custom amount, you choose!CreditsThis plugin wouldn’t be possible without the great work from @frenck with thepython-wled Python module that I was able to use. It has been slightly modifiedto work better within an OctoPrint plugin, but it is a great module to work with. Thank you!View the OctoPrint-WLED licenseView the python-wled license",
"tags": ["wled","led","wireless","IoT","rgb led","status","addressable led"]
},

{
"id": "/plugins/networkhealth",
"url": "/plugins/networkhealth/",
"date": "2021-04-20 00:00:00 -0500",
"title": "Network Health",
"description": "Monitors the health of the Network connection and restarts it if necessary",
"author": "Jon Fairbanks",
"content": "Network HealthMonitors the health of the Network connection by pinging the default gateway at a periodic interval. If the check fails, the plugin will restart the network adapter(s) as necessary.This plugin does not modify the UI in any way. You can confirm the plugin is running from octoprint.logConfigurationBy default the ip command used to restart the network interfaces requires sudo permissions.To allow OctoPrint to manage this for us, we need to update sudoers using the below command:echo 'pi ALL=NOPASSWD:/sbin/ip' | sudo tee /etc/sudoers.d/octoprint-ipSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/jonfairbanks/OctoPrint-NetworkHealth/archive/master.zipChange Notes:v 1.0.4  Error Handlingv 1.0.3  Proper Versioningv 1.0.2  Bug Fixesv 1.0.1  Usability Improvementsv 1.0.0  Initial Commit",
"tags": ["network","wifi","ethernet"]
},

{
"id": "/plugins/psucontrol_tplink",
"url": "/plugins/psucontrol_tplink/",
"date": "2021-04-28 00:00:00 -0500",
"title": "PSU Control - TPLink",
"description": "Adds TPLink Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-PSUControl-TPLink for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","tplink"]
},

{
"id": "/plugins/camerasettings",
"url": "/plugins/camerasettings/",
"date": "2021-04-29 00:00:00 -0500",
"title": "Camera Settings",
"description": "Interactive camera settings via v4l2-ctl",
"author": "Taylor Talkington",
"content": "OctoPrint-CameraSettingsCamera Settings allows a user to interactively change camera settings by running v4l2-ctl on the backend. This method should work for any Linux environment, including OctoPi, as long as the camera is attached to the same device running OctoPrint.Note: not compatible with The Spaghetti Detective premium.Have a RaspiCam or ArduCam? Look at the setup guide.See the GitHub repo for the most up to date information, including setup information and frequently asked questionsFor issues and feature requests, check the issues on GitHub and create one if needed.",
"tags": ["camera"]
},

{
"id": "/plugins/filament_scale",
"url": "/plugins/filament_scale/",
"date": "2021-04-29 00:00:00 -0500",
"title": "Filament Scale Enhanced",
"description": "Display filament weight using a HX-711 and a load cell",
"author": "Victor Noordhoek, Techman83",
"content": "This plugin allows connecting an HX711-based load cell to a Raspberry PI, and Octoprint display the current weight of the remaining filament.You will need an HX711 breakout board and a compatible load cell. You can find these bundled together on Ebay/Aliexpress for roughly $8. Any load cell rated for more than 1kg and less than 50kg should work; I used a 5kg load cell with solid results.See here for instructions on wiring up the load cellThis plugin assumes you connected the data pin to GPIO20, and the clock pin to GPIO21.You will also need the bracket to connect the load cell to your printer:  Regular Spool Holder  Spannerhands Spool Holder",
"tags": ["raspberry pi","filament","gpio"]
},

{
"id": "/plugins/psucontrol_tasmota",
"url": "/plugins/psucontrol_tasmota/",
"date": "2021-05-02 00:00:00 -0500",
"title": "PSU Control - Tasmota",
"description": "Adds Tasmota Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-PSUControl-Tasmota for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","tasmota"]
},

{
"id": "/plugins/octodashcompanion",
"url": "/plugins/octodashcompanion/",
"date": "2021-05-03 00:00:00 -0500",
"title": "OctoDash Companion",
"description": "This plugin allows for configuring OctoDash settings and upload custom theme files from within the OctoPrint interface.",
"author": "jneilliii",
"content": "OctoDash CompanionThis plugin allows for configuring OctoDash settings and upload custom theme files from within the OctoPrint interface. It assumes that you have both OctoDash and OctoPrint running on the same physical machine.ConfigurationOnce installed you can use the OctoDash Companion settings to configure the Printer Name and Custom Actions. Other settings will be added as deemed necessary.To upload a new Custom Theme file, just upload the custom-styles.css file to OctoPrint as if it were a gcode file.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["OctoDash"]
},

{
"id": "/plugins/psucontrol_tendabeli",
"url": "/plugins/psucontrol_tendabeli/",
"date": "2021-05-03 00:00:00 -0500",
"title": "PSU Control - Tenda Beli",
"description": "Adds Tenda Beli SP3 Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "Jaroslav Groman",
"content": "See https://github.com/jgroman/OctoPrint-PSUControl-TendaBeli for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","tenda"]
},

{
"id": "/plugins/psucontrol_wemo",
"url": "/plugins/psucontrol_wemo/",
"date": "2021-05-08 00:00:00 -0500",
"title": "PSU Control - Wemo",
"description": "Adds Wemo Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "jneilliii",
"content": "PSU Control - WemoFor advanced Wemo support and multiple Smartplug control consider checking out my original OctoPrint-WemoSwitch plugin.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","wemo"]
},

{
"id": "/plugins/calibrationcompanion",
"url": "/plugins/calibrationcompanion/",
"date": "2021-05-10 00:00:00 -0500",
"title": "Calibration Companion",
"description": "This plugin was created to calibrate 3D printer settings easily.",
"author": "iFrostizz",
"content": "Calibration CompanionThis plugin was created to calibrate your 3D printer settings easily.It comes really handy when you want to try a new filament for example.PicturesIf you need more informations, please head on: https://github.com/iFrostizz/OctoPrint-CalibrationCompanionDISCLAIMERThis plugin has been tested but could contains bugs. If you spot any of them, open an issue describing it and what happened to lead to this bug.Please always handle it with care, import the GCodes in Cura before printing, and inspect them carefully. I will not be responsible for any physical injury.",
"tags": ["calibration"]
},

{
"id": "/plugins/mqtt_for_psucontrol",
"url": "/plugins/mqtt_for_psucontrol/",
"date": "2021-05-12 00:00:00 -0500",
"title": "MQTT exposure for PSU Control",
"description": "Control your PSU Control with MQTT or Home Assistant",
"author": "oerkel47",
"content": "MQTT exposure for PSU ControlExposes PSU Control switch on MQTT so you can access it from somewhere else. Supports Home Assistant discovery for easy setup.This plugin does not connect a smart plug to PSU Control. If this is what you need , take a look at “PSU Control - MQTT” instead.Please check the github repo for up to date information and more detailsRequirements:  MQTT plugin for OctoPrint  PSU Control plugin for OctoPrint",
"tags": ["Home Assistant","control","psucontrol","mqtt"]
},

{
"id": "/plugins/psucontrol_homeassistant",
"url": "/plugins/psucontrol_homeassistant/",
"date": "2021-05-15 00:00:00 -0500",
"title": "PSU Control - HomeAssistant",
"description": "Adds HomeAssistant support to OctoPrint-PSUControl as a sub-plugin",
"author": "Erik de Keijzer",
"content": "See https://github.com/edekeijzer/OctoPrint-PSUControl-HomeAssistant for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","homeassistant"]
},

{
"id": "/plugins/psucontrol_shelly",
"url": "/plugins/psucontrol_shelly/",
"date": "2021-05-15 00:00:00 -0500",
"title": "PSU Control - Shelly",
"description": "Adds Shelly smart switch support to OctoPrint-PSUControl as a sub-plugin",
"author": "Erik de Keijzer",
"content": "See https://github.com/edekeijzer/OctoPrint-PSUControl-Shelly for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","shelly"]
},

{
"id": "/plugins/draggable_files",
"url": "/plugins/draggable_files/",
"date": "2021-05-18 00:00:00 -0500",
"title": "Draggable Files",
"description": "Plugin that allows for the dragging of files in the File Manager",
"author": "Sander Ronde",
"content": "Octoprint Draggable FilesPlugin that allows for the dragging of files in the File Manager. Additionally, it adds the ability to resize the file manager.Example:",
"tags": ["file","filemanager","file_manager","dragging"]
},

{
"id": "/plugins/navbarclock",
"url": "/plugins/navbarclock/",
"date": "2021-06-01 00:00:00 -0500",
"title": "Navbar Clock",
"description": "Displays the current time on the OctoPrint navigation bar",
"author": "Manuel McLure",
"content": "This plugin will add a clock to the navigation bar. The time displayed may be the server time (default), browser time or UTC. Both 24 hour and AM/PM formats are supported, and display of seconds is optional.This plugin will only work if OctoPrint is running under Python 3.7 or higher. See https://github.com/cp2004/Octoprint-Upgrade-To-Py3 if you wish to upgrade your OctoPrint installation to use Python 3.",
"tags": ["navbar","ui"]
},

{
"id": "/plugins/fortune",
"url": "/plugins/fortune/",
"date": "2021-06-04 00:00:00 -0500",
"title": "OctoPrint-Fortune",
"description": "Gives you a pithy fortune on web login or startup",
"author": "Stephen Berry",
"content": "This is an adaptation of the original UNIX fortune program. Fortune will run on OctoPrint login and popup a quote or saying from a database of stored quotes.I have not created these quotes or sayings, they are simply provided from thesource given by Brian M. Clapper as a sample set of fortunes.http://software.clapper.org/fortune/There is an icon that looks like a book on the navigation bar for those that would like a more frequent fortune. This can be turned off in the settings page.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/berrystephenw/OctoPrint-Fortune/archive/main.zipThis is a Python 3 or greater plugin!ConfigurationThe only configuration is to enable or disable the icon on the navigation bar, and optionally to enable sending your fortune to OctoText. OctoText must be enabled and configured forthis feature to work.CopyrightCopyright © 2008-2019 Brian M. Clapper. All rights reserved.",
"tags": ["fortune","text","notification"]
},

{
"id": "/plugins/ArducamCameraControl",
"url": "/plugins/ArducamCameraControl/",
"date": "2021-06-18 00:00:00 -0500",
"title": "ArducamCameraControl",
"description": "Plugin to control Arducam motorized and ptz camera",
"author": "Arducam",
"content": "Arducam Camera ControlA plugin to control your arducam camera with motorized and ptz camera on octoprint.Hardware InstallPlease follow the manufacturer’s instructions.I2CThis plugin uses I2C to communicate with the camera.  That is not enabled by default.  The Arducam Camera Control plugin will not function untilyou enable I2C.SSH to your octopi, install system dependencies and enable i2c:sudo apt updatesudo apt install i2c-toolssudo nano /boot/config.txtat the very end of the file add the following:#ArduCamFocusdtparam=i2c_vc=ondtparam=i2c_arm=onpress ctrl+s to save and ctrl+x to exitEnable the I2C kernel module using raspi-config:sudo raspi-config  select “3 Interfacing Options”  select “P5 I2C”  raspi-config will ask, “Would you like the ARM I2C interface to be enabled?”  select “Yes”  you should see, “The ARM I2C interface is enabled”  select “Finish”PluginInstall plugin from Plugin Manager &gt; Get More and search for ArducamCameraControl.After you restart, the camera should be controllable from OctoPrint’s Control tab.",
"tags": ["Arducam","Camera"]
},

{
"id": "/plugins/gpiofancontroller",
"url": "/plugins/gpiofancontroller/",
"date": "2021-07-04 00:00:00 -0500",
"title": "OctoPrint-GpioFanController",
"description": "Uses PI GPIO pins to control a variable speed fan with PWM",
"author": "Erik Gundersen",
"content": "GPIO FAN ControllerThis is a lightweight plugin dedicated for controlling a fan via Raspberry Pi GPIO pin.  This plugin has the following features:  Convenient sidebar control  Adjustable FAN speed  Pin selection via settings  M106 / M107 GCODE support  Independent GCODE control using optional fan indexIMPORTANT - FAN CompatibilityThis plugin is only intended to drive an external brushless DC FAN via MOSFET driver circuit.  A MOSFET must be used to drive the FAN since the PI is not capable of providing adequate current to the FAN.It is a also a good idea to use a separate power supply to drive the FAN since the PI power supply might not have adequate current to drive the PI + FAN.  See wiring digram below as an example of how to interface to a 12V DC FAN.",
"tags": ["fan","gpio","pwm"]
},

{
"id": "/plugins/gpiorgbcontroller",
"url": "/plugins/gpiorgbcontroller/",
"date": "2021-07-07 00:00:00 -0500",
"title": "OctoPrint-GpioRgbController",
"description": "Uses PI GPIO pins to control a RGB Led strip",
"author": "Erik Gundersen",
"content": "GPIO RGB ControllerThis is a lightweight plugin dedicated to the control of an external RGB LED strip via Raspberry Pi GPIO pins.  This plugin has the following features:  Convenient sidebar control  Adjustable RGB color picker  Pin selection via settings  Optional on/off trigger via input pin  M150 GCODE support  Independent GCODE control using optional RGB indexIMPORTANT - LED Strip CompatibilityThis plugin is only intended to drive discrete or strip RGB LED’s via independent GPIO control.  This plugin will not work with LED strips that have coontrolers or digital interface such as SPI.A MOSFET must also be used to drive each LED channel since the PI is not capable of providing adequate current to the LED’s.  It is a also a good idea to use a separate power supply to drive the LED strip since the PI power supply might not have adequate current to drive the PI + LED strip.  See wiring digram below as an example of how to interface to an LED strip.",
"tags": ["led","rgb","gpio"]
},

{
"id": "/plugins/LightControls",
"url": "/plugins/LightControls/",
"date": "2021-07-09 00:00:00 -0500",
"title": "OctoPrint-LightControls",
"description": "Adds easily configurable PWM Light controls to Octoprint Control Tab",
"author": "RoboMagus",
"content": "",
"tags": ["Raspberry PI","Lights","PWM","Slider"]
},

{
"id": "/plugins/mote_lighting_control",
"url": "/plugins/mote_lighting_control/",
"date": "2021-07-14 00:00:00 -0500",
"title": "OctoPrint-MoteLightingControl",
"description": "Control a set of Mote lights - with different OctoPrint conditions causing changes in the lighting colour and state.",
"author": "Nigel Metheringham",
"content": "Control a set of Pimoroni Motelights - with different OctoPrint conditions causing changes in the lighting colour and state.Lighting changes can happen on changes in state - for example a print start orfinish - or via a manual button on the navbar.This code only supports the USB version of the Mote controllers.  Since a PiZero is not suitable for running OctoPrint, and is not likely to be used, andI do not have the relevant hardware, the PHAT version of the Mote controlleris not supported.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/nigelm/OctoPrint-MoteLightingControl/archive/main.zipConfigurationThe configuration allows you to select the colours used for each OctoPrint state.You can enable/disable automatic lighting changes on any state change, andadditionally enable/disable each state individually.   By default all statechanges do cause lighting changes,The selectable states, and their default colours are:-  On OctoPrint Startup - Blue  Printer Connected - Green  Printer Disconnected - Black (lights off)  File Uploaded - Yellow for a few seconds  Active Printing - White  Print Finished - Pink  Error or Print Failed - RedCreditsThis plugin draws very heavily onOctoPrintMote byRichard HaylerAdditionally some code was used fromOctoLight(the API handling code and js), andTP-Link Smartplug.",
"tags": ["lights","led","rgb"]
},

{
"id": "/plugins/matrix_notifier",
"url": "/plugins/matrix_notifier/",
"date": "2021-07-21 00:00:00 -0500",
"title": "Matrix Notifier",
"description": "Sends matrix notifications and snapshots of your print.",
"author": "Stuart Mumford",
"content": "Matrix notifier sends messages to a configured matrix room with information about your print and snapshots of your camera.The following events are configurable through the web UI:  PrintStarted  PrintPaused  PrintFailed  PrintDone  Print ProgressThe message templates support markdown which are converted to HTML to send as formatted matrix messages.In addition to this any other event should be configurable directly in the config.yaml file.Take the event name from the OctoPrint events documentation and add a section under the plugins: section which looks like this:  matrix_notifier:    events:      Connected:        enabled: true        template: |          ## Printer ConnectedThis would send messages on the “Connected” event. Find the existing section of the config and edit it where appropriate rather than adding new sections.Note that not all events have been tested, please open an issue if you encounter an issue with a specific event.",
"tags": ["notifications","notification","matrix","shapshots"]
},

{
"id": "/plugins/physicalbutton",
"url": "/plugins/physicalbutton/",
"date": "2021-08-01 00:00:00 -0500",
"title": "Physical Button",
"description": "Add physical buttons to OctoPrint",
"author": "LuxuSam",
"content": "The PhysicalButton plugin (hence the name) lets you add physical buttons to your Raspberry Pi.The buttons are then able to send GCODE, actions and system commands to your printer.Configuration - OverviewTo add a new button you have to click on the ➕. This adds a new button to the end of your list.From there you should enter a button name, the used GPIO and the mode (NO or NC) of the button.In addition you have to specify for how long a button has to be held in order to trigger.The last step is to add activities to your button which are executed in order of the activities list.You can edit, move or remove activities in the right pane.Configuration - Detail  Button Name          This is where you put the name of your button to differentiate it in the list of buttons.        GPIO          This is the GPIO you connect your button to. The other cable has to be connected to a ground pin (Buttons are configured to use internal pulled-up resistors). You can only create one button per GPIO.        Mode          Depending on your button setup or wiring you have to choose between the following two modes:                  Normally Open (NO)                          Use this mode if your button is usually not pressed (open).                                Normally Closed (NC)                          Use this mode if your button is usually pressed (closed).                                            Hold Time          This is where you set the hold time for your button, meaning how long the button has to be held until the reaction is triggered.        Choose activities for your button          Action:                  You can choose between different actions:connect, disconnect, home (x, y and z are homed), pause, resume, start, start latest, cancel, toggle pause-resume, toggle start-cancel, toggle start latest-cancel                    File:                  You can specify the path to a file which will be selected.          To start the execution of a file, add ‘start action’ behind the ‘file activity’.          There are three ways to specify a file:                          Absolute path to a file:/home/pi/Some/Folder/Test.gcode              Relative path to a file inside the uploads folder:Some/Folder/Test.gcode              Path to a file on the SD-card of the printer:@sd:Some/Folder/Test.gcode                                          GCODE:                  You can input any GCODE commands.                    System:                  You can input any system command for your Octoprint host.Note that system commands will be run under the same user that owns your OctoPrint service (usually ‘pi’ for OctoPi) with the same rights and permissions, so you may need to use sudo facilities for certain tasks. Please refer to your OctoPrint host’s documentation for details.                    Output:                  Generate output on the given GPIO pin for a given amount of time.          By setting the time to 0, the output will continue until you toggle it again.          The async option lets the output run while also continuing with the next activities.          The initial value sets the level of the GPIO pin for startup and settings save.                    These activities will be executed in order of your list. You can also rearrange them by inserting them at your desired position.      ⚠️ Use at your own risk ⚠️I am not accountable for any damages made to your printer/raspberry pi when using this plugin (e.g. wrong wiring  of buttons, GCODE or system commands that you send with the buttons to your printer, …).Get Help / Feature requestIf you encounter problems using the plugin or if you have an idea for a new feature please use the issue tracker and the corresponding issue template.❤️ Support me❤️If you enjoy my plugin and want to support me and the development, you can do so by sending me a donation on  ",
"tags": ["physical","button","buttons","input","gpio","pins","external","send","action","actions","file","gcode","system","output"]
},

{
"id": "/plugins/gcode_macro",
"url": "/plugins/gcode_macro/",
"date": "2021-08-09 00:00:00 -0500",
"title": "Gcode Macros",
"description": "Configure custom gcode macros you can use anywhere!",
"author": "Charlie Powell",
"content": "OctoPrint Gcode Macros PluginCreate custom commands you can add anywhere: in your gcode file, OctoPrint’s terminal, gcode scripts, or other pluginsto run a configured script.Use macros for preheating your printer, levelling the bed, changing filament… Possibilities are (nearly) endless!InstallationInstall from the plugin repository or manually using this URL:https://github.com/cp2004/OctoPrint-GCodeMacros/releases/latest/download/release.zipWarning: This plugin only supports Python 3 installs. To find out more about upgrading your OctoPrint install toPython 3, you can take a lookat this postConfigurationOnce installed, you can start defining your macros. All commands are prefixed with an @, so they don’t interferewith standard gcode commands. However, this means that some commands are reserved. OctoPrint usesthese specific commands for pausing &amp; resuming prints,but also other plugins can use custom @ commands. For example, OctoLapse uses @OCTOLAPSE TAKE-SNAPSHOT or the WLEDplugin uses @WLED ON or @WLED OFF to control some LEDs.The commands are case sensitive, and you can have spaces, numbers and punctuation in them!These commands will not work while printing from the printer’s SD cardSupporting DevelopmentI work on OctoPrint, OctoPrint plugins and help support the community in my spare time. It takes a lot of work, soif you are interested you can support me through GitHub Sponsors. You cancontribute monthly or one time for any amount, you choose!",
"tags": ["gcode","macro","scripts","custom","productivity"]
},

{
"id": "/plugins/autobim",
"url": "/plugins/autobim/",
"date": "2021-08-15 00:00:00 -0500",
"title": "AutoBim",
"description": "A bed tramming utility for OctoPrint",
"author": "Juri Berlanda",
"content": "AutoBim is a simple bed tramming utility for OctoPrint using ABL. Tramming is the process of making sure your bed is asparallel to your printer’s X axis as possible. Or, put simply:Tilted Bed + Tramming = Parallel BedHow does it workThe plugin adds a single button to OctoPrint’s navbar, because that’s all it needs. When the button is clicked, acombination of GCodes G0, G28, G30, M117 and a bit of message parsing is used to create something likethis (link to YouTube). Jump to 3:10 if it didn’t already.A (hopefully) complete documentation can be found on the plugin’s Github page. You’llalso find an extensive troubleshooting section there.DisclaimerThe plugin will instruct the printer to move. I work to the best of my knowledge, and I put some effort into reducingthe risk of damage (like highering Z before moving). Yet, I do not take any responsibility for damages to you, yourprinter, or stuff and people around you.I have been using the plugin since I started developing it in February 2021, and it always worked fine for me (Ender 3Pro, SKR Mini E3 v2.0, Antclabs BL-Touch 3.1), but I was extra cautious until I saw the plugin working fine - and I canonly advise you do the same.Why the name?This plugin is meant to help with bed tramming. I am from Vienna, and trams inVienna are called “Bim” (like “bin” as in “trash bin”, just with an m instead of the n).RoadmapI know that there are a couple of rough edges when setting up the plugin - not easy to solve, but thinking about it.Highest priority is a method to find out if the given points are actually reachable of not (seehere). If you have suggestions on this, or any other functionality: feel free to open an issuehere and let’s discuss stuff.CreditsCredit goes to the following projects for being there and letting me look at and copy their code:  https://github.com/jneilliii/OctoPrint-BedLevelVisualizer  https://github.com/marian42/octoprint-preheatMake sure to check them out, and don’t forget:  “Toss a coin to your developers, o valley of plenty, o valley of plenty…”",
"tags": ["abl","bed level","bed levelling","auto bed leveling","bl-touch","maintenance"]
},

{
"id": "/plugins/Chituboard",
"url": "/plugins/Chituboard/",
"date": "2021-08-16 00:00:00 -0500",
"title": "Octoprint-Chituboard",
"description": "compatibility layer for SLA printers with Chituboards like the Photon and Mars series",
"author": "Vikram Sarkhel",
"content": "Octoprint-ChituboardAdded basic support chituboard based printers(Elegoo Mars, Anycubic Photon, Phrozen, etc.) to octoprint.  upload files to folder ~/.octoprint/uploads/resin  File analysis CLI command works octoprint plugins chituboard:sla_analysis NAME  Plugin might not work if you’ve updated your Elegoo Mars printer to the newest firmware due to issues with Chitu3d encrypting their files so users are forced to use Chitubox 1.9.0. I’m not planning on incorporating the non FOSS chitubox SDK into an AGPLv3 licensed plugin.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/rudetrooper/Octoprint-Chituboard/archive/main.zipRequirements  Raspberry Pi Zero W (not recommended underpowered), Zero 2 W, 3A+ or 4B only supports raspberry pi’s with USB-OTG ports          Doesn’t work properly in a docker container, designed to work with a fresh Octopi install        Supported printers: SLA printers with chitu3d mainboard, Anycubic mainboards          Anycubic Photon      Elegoo Mars      Elegoo Mars Pro      Elegoo Mars 2      Elegoo Mars 2 Pro      Elegoo Saturn      Phrozen Sonic Mighty 4K      Phrozen Sonic Mini 4K      Creality LD-002H      Creality LD-002R      Peopoly Phenom L      EPAX E10/X10      ConfigurationFollow hardware setup instructions in source repohttps://github.com/rudetrooper/Octoprint-ChituboardConnecting Pi to printers USB portOur goal here is to use the Pi as a USB flash drive. The printer mainboards use the USB port to read USB FAT storage devices not for serial control. The printer can only supply around 500 mA via the 5V line so its best to power you pi with an external power source.Follow one of these steps.  Put some tape on the 5V line of your USB cable. This tutorial is a good reference on how to do this.  Cut the connection between the 5V line and the USB port on the Pi. Some people online do this, but I didn’t want to do any permanent changes to my Pi.  The USB-OTG port on the Raspberry pi 4B is also the USB host port          users should put tape on the USB-A end of your USB C to USB A cable      users will also need to power the pi via the GPIO pins, I suggest using the X735.      users who forget to tape over the 5V pin on will risk frying their pi 4B      Connecting the Pi to the printer’s serial portConnect the jumper wires from the pi’s UART0 port to the Elegoo Mars 2 motherboard like this.pinout.xyz is a good reference if you’re unfamiliar with the Raspberry Pi’s GPIO pins. Note that the Pi’s TX pin is connected to the motherboard’s RX pin and vice-versa. Connect GND to GND, Rx to Tx, and Tx to RxAcknowledgementsUsed code or studied file format reverse engineering from these repos:  https://github.com/luizribeiro/mariner  https://github.com/cbiffle/catibo/blob/master/doc/cbddlp-ctb.adoc  https://github.com/sn4k3/UVtools  https://github.com/ezrec/uv3dp",
"tags": ["anycubic","elegoo","chituboard","printer","resin printer","broken firmware","workaround"]
},

{
"id": "/plugins/plotlytempgraph",
"url": "/plugins/plotlytempgraph/",
"date": "2021-08-21 00:00:00 -0500",
"title": "OctoPrint-PlotlyTempGraph",
"description": "Display temperature data in a plotly js graph.",
"author": "jneilliii",
"content": "OctoPrint-PlotlyTempGraphThis plugin replaces the default temperature tab of OctoPrint with a plotly.js graph that incorporates other data supplied by the return of plugin’s octoprint-comm-protocol-temperatures-received callbacks. Useful for other plugins to inject their own data into the temperature graph (ie. Enclosure Plugin Sensor Data).Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["temperature","graph","UI","plotly"]
},

{
"id": "/plugins/printscheduler",
"url": "/plugins/printscheduler/",
"date": "2021-08-21 00:00:00 -0500",
"title": "Print Scheduler",
"description": "Plugin that allows to schedule prints to run at a specified time.",
"author": "jneilliii",
"content": "Print SchedulerPlugin that allows for scheduling prints to happen. If a print is ongoing or the printer is not in an operational state, the plugin will try to print those again until it is possible to start the print.WARNINGS:  This plugin currently only has knowledge of your printer’s state. If your printer is showing operational in OctoPrint, the next scheduled print job will run even if something is on the bed. Take caution when adding multiple prints to the scheduler for this reason.  The date time picked will be compared against the device running OctoPrint, so make sure you have your timezone and date/time options configured properly (sudo raspi-config for pi via SSH).ScreenshotsGet HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["scheduler","cron","schedule","queue","CR-30","belt printers"]
},

{
"id": "/plugins/ups",
"url": "/plugins/ups/",
"date": "2021-08-22 00:00:00 -0500",
"title": "UPS",
"description": "Integrates a UPS monitored by NUT into OctoPrint",
"author": "Shawn Bruce",
"content": "See https://github.com/kantlivelong/OctoPrint-UPS for information on configuration.",
"tags": ["ups","battery","nut"]
},

{
"id": "/plugins/SafetyPrinter",
"url": "/plugins/SafetyPrinter/",
"date": "2021-08-30 00:00:00 -0500",
"title": "Safety Printer",
"description": "This plugin interfaces with Safety Printer MCU to improve your printer's safety.",
"author": "Rodrigo C. C. Silva",
"content": "Safety PrinterThis plugin interfaces with Safety Printer MCU to improve your printer’s safety. You can find more information on Wiki.P.S.: It also integrates with Octopod notifications, so is highly recommended its installation.With this plugin you will be able to setup, supervise and trobleshoot your Safety Printer MCU. It provides: Sidebar sensor monitoring, Plugin and Sensor setup and Safety Printer MCU communications terminal (for advanced users).Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s source page linked on the right.Join the projectIf you think that you can contribute with the project, join us, send me a message: SinisteRrj",
"tags": ["fire","smoke","notification","bed temperature","hotend temperature","safety","flame detector","emergency","shutdown","trip"]
},

{
"id": "/plugins/thingiverse_downloader",
"url": "/plugins/thingiverse_downloader/",
"date": "2021-09-10 00:00:00 -0500",
"title": "Thingiverse Downloader",
"description": "Download and extract a thing from Thingiverse to your Octoprint instance",
"author": "Lucas Bock",
"content": "SetupQuick InstallInstall via the bundled Plugin Manageror manually using this URL:https://github.com/appdevelopmentandsuch/Thingiverse-Downloader/archive/main.zip  Install one of the following in order to view / upload STL files to your Octoprint instance.          Octoprint-Slic3r      STL Viewer      Cura Legacy      Full-featured Slicer        Install the Thingiverse-Downloader plugin either from the Plugin manager, or manually.  Acquire an API key from the Thingiverse Developer Console (tutorial to come).Configuration            Settings      Description                  API Key      An API key / App Key acquired from the Thingiverse Developer Console found here.              Output Directory      The desired directory you wish to have the Thingiverse thing downloaded to. Recommend using models      ",
"tags": ["thingiverse","3d models"]
},

{
"id": "/plugins/fractalbridge",
"url": "/plugins/fractalbridge/",
"date": "2021-09-15 00:00:00 -0500",
"title": "Fractal Bridge",
"description": "Fractal's printer control plugin for OctoPrint",
"author": "Fractal",
"content": "About FractalFractal is a cloud platform for managing 3D printers in an automated manner. What this means is that Fractal will attempt to automate as much of the 3D printing workflow as possible so that you can spend time where it matters: not mindlessly managing printers but adding value! The key idea is the following: from the start of your 3D printing workflow (prototyping, manufacturing on demand, selling through an ecommerce, etc…) until the piece comes out of the printer, you shouldn’t have to do anything yourself.Some of the current features include:  Multiple printer management  Connect to existing OctoPrint instances  Automatic scheduling: Fractal dynamically generates and updates the best printing schedule accross all your printers so that the uptime is maximized and the human intervention is minimized  Automatic print management: you just clear the print beds and Fractal will automatically send the next print  Task/Order process tracking  Inventory/stock tracking  Information distillation into simple actionable commands for 100% print farm efficiencyAnd other cool features are being added soonTM:  Print process monitoring  Full e-commerce integration  Advanced analytics  Non-3d printed inputs stock  And much more…Join us on DiscordWe have a server dedicated to talking all things 3D printing automation. We’d love for you to join!Fractal Discord",
"tags": ["cloud printing","remote printing","remote access","video streaming","automated printing","smart queuing","fleet management"]
},

{
"id": "/plugins/bedcooldown",
"url": "/plugins/bedcooldown/",
"date": "2021-09-26 00:00:00 -0500",
"title": "OctoPrint-BedCooldown",
"description": "Turns off the bed heater toward the end of a print",
"author": "Ryan Finnie",
"content": "For filaments such as PLA, many printers have more than enough stored thermal mass in the bed to keep bed adhesion throughout the print.Therefore, you may want to turn off the bed heater automatically before the end of a print, saving cooldown time.The bed heater will be turned off during a print, when both conditions are met:  The print time left is below the configured threshold (default 300 seconds / 5 minutes)  The print completion percentage is above the configured threshold (default 90%)This should cover both long and short prints; you wouldn’t want the bed to turn off 90% into a 20 hour print, or 5 minutes before the end of a 10 minute total print.Be sure to monitor your print, as turning off the bed heater could cause the print to come loose prior to completion.",
"tags": ["heated bed","bed temperature","cooldown"]
},

{
"id": "/plugins/psucontrol_openhab3",
"url": "/plugins/psucontrol_openhab3/",
"date": "2021-09-27 00:00:00 -0500",
"title": "PSU Control - openHAB3",
"description": "Adds openHAB3 support to OctoPrint-PSUControl as a sub-plugin",
"author": "Philipp Große",
"content": "See https://github.com/Tomatenjoghurt/OctoPrint-PSUControl-openHAB3 for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","openhab","openhab3"]
},

{
"id": "/plugins/psucontrol_mqtt",
"url": "/plugins/psucontrol_mqtt/",
"date": "2021-10-05 00:00:00 -0500",
"title": "PSU Control - MQTT",
"description": "adds support for generic MQTT switches to PSU Control as a subplugin",
"author": "oerkel47",
"content": "PSU Control - MQTTMQTT subplugin for PSU ControlLets you control any MQTT controlled switch with PSU Control.Please check the github repo for up to date information and more detailsRequirements:  MQTT plugin for OctoPrint  PSU Control plugin for OctoPrint",
"tags": ["control","psucontrol","psucontrol subplugin","mqtt"]
},

{
"id": "/plugins/octoapp",
"url": "/plugins/octoapp/",
"date": "2021-12-01 00:00:00 -0600",
"title": "OctoApp",
"description": "The Companion Plugin for OctoApp",
"author": "Christian Würthner",
"content": "A plugin providing extra functionality to OctoApp:  Remote push notification for events like print completion or filament change with end-to-end encryption  Remote push notifications for your print progress with end-to-end encryption  More coming in the future!Get OctoApp on Google Play!This plugin requires OctoApp 1.11 or newer!",
"tags": ["android","app","notifications","push","print finished","control","phone","octoapp","monitor","monitoring","remote app"]
},

{
"id": "/plugins/BLOCKS",
"url": "/plugins/BLOCKS/",
"date": "2021-12-24 00:00:00 -0600",
"title": "Blocks",
"description": "Theme for Blocks 3D printers and extended functionalities.",
"author": "Hugo C. Lopes Santos Costa",
"content": "About      This plugin was made with the intention of offering a different experience to users with Blocks 3D printers.The plugin reorganizes the user interface in order to display all relevant information in a grid.Adding to this, users can also add new network connections with Octoprint!        This functionality works best with the automatic creation of hotspots on a raspberry pi when no internet connection was made.Check out https://medium.com/@kennethjiang/painless-wi-fi-for-octoprint-4e6b68005400 for more information about that.        If the 3D printer is from Blocks additional functionality is available.For example, if run with the Blocks R21 printer additional wifi reporting from octoprint to the printer is enabled.        The plugin is in constant development.  MoreKnown Issues  There are some compatibility issues with other plugins on the repository.An example of this are plugins that make use of the classic octoprint control tab and the consolidated tabs pluginGet Help  Any issues or requests can be made on the main homepage located on the right.Acknowledgments  I’d like to express my gratitude to the OctoPrint devs and the community.      I recommend joining the official discord channel for OctoPrint, help is always given to those who ask.    Used and studied the code from:https://github.com/LazeMSS/OctoPrint-UICustomizer/ https://github.com/ManuelMcLure/OctoPrint-WiFiStatus/Also See",
"tags": ["wifi","UI","Grid","theme","Blocks Printers","Notifications"]
},

{
"id": "/plugins/custom_gcode_events",
"url": "/plugins/custom_gcode_events/",
"date": "2022-01-02 00:00:00 -0600",
"title": "OctoPrint-Custom_gcode_events",
"description": "Enables the User to configure custom GCode hooks (both sent and received) that will fire a User-defined event to be picked up by other plugins.",
"author": "RoboMagus",
"content": "This plugin enables you to configure G-Code hooks (sent or received) that will fire custom events which can then be picked up by another plugin, such as OctoPrint-MQTT.My usecases are mostly to be notified through Home Assistant notifications when my printer requires some attention.GCode received --&gt; Fire event --&gt; OctoPrint-MQTT: Translate event to MQTT --&gt; Home Assistant: Automation is triggered that notifies me.",
"tags": ["GCode hooks","Event","Notify","Paused"]
},

{
"id": "/plugins/onedrive_backup",
"url": "/plugins/onedrive_backup/",
"date": "2022-01-03 00:00:00 -0600",
"title": "OneDrive Backup",
"description": "Automatically upload OctoPrint backups to Microsoft OneDrive",
"author": "Charlie Powell",
"content": "InstallationInstall the plugin via the bundled Plugin Manager or manually using this URL:https://github.com/cp2004/OctoPrint-OneDrive-Backup/releases/latest/download/release.zipWarning: This plugin requires Python 3.7 or newer to install. To find out more about upgrading your OctoPrint installto use Python 3, you can take a look at this postConfigurationOnce the plugin is installed and loaded, you can set it up to connect to your Microsoft account.Adding your accountSelect ‘Add account’ to generate a login code. Head to the URL linked to login with your account, entering the codegenerated and logging in with your Microsoft account. Grant OctoPrint OneDrive Backup access to your files.Once this is done, return the plugin, and it should show your account name &amp; a success message.Configuring the backup uploadYou can then configure the folder to save backups to. Select ‘Change Folder’ and then you should be able to navigatethrough your OneDrive folders to find somewhere for backups to be saved.Maybe give it a test after configuring it - head to the backup &amp; restore tab and create a backup. Upload progress willbe shown in a notification in the UI.Supporting DevelopmentI work on OctoPrint, OctoPrint plugins and help support the community in my spare time. It takes a lot of work, so ifyou are interested you can support me through GitHub Sponsors. You can contribute monthly or one time forany amount, you choose!Important Security NoticePlease be aware that this plugin stores its tokens for accessing your Microsoft account in OctoPrint’sconfiguration folder, as expected. As a result, if your OctoPrint install (or the server it is running on) iscompromised, your files in OneDrive are at risk.It is not recommended to install this plugin on OctoPrint installs accessible directly from theinternet, or multi-user installs where you may not trust every user.The author of this plugin is not responsible for any damage caused as a result of using this plugin.",
"tags": ["onedrive","backup","cloud","microsoft"]
},

{
"id": "/plugins/gpiostatus",
"url": "/plugins/gpiostatus/",
"date": "2022-01-08 00:00:00 -0600",
"title": "GPIO Status",
"description": "Check the Raspberry GPIO status and other hardware data.",
"author": "danieleborgo",
"content": "GPIO StatusThis OctoPrint plugin allows to check the GPIO statusby the web interface, without the need to connect via SSH.It also permits knowing services’ status and hardwareinformation.Preliminary noteThis plugin doesn’t know which pins are in use and whichare free, since its purpose is to just show their state.Always remember to precisely check every GPIO connectionbefore turning on the Raspberry according to the datasheet.PrerequisitesThis plugin must be executed on a Rasperry PI and requiresthe two commands raspi-config and raspi-gpio.They’re usually installed by default but, if they are not,the plugin will show a notification message on its tab.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/danieleborgo/OctoPrint-GPIOStatus/archive/master.zipScreenshotsThis is GPIO Status main page with all the view checkboxes:This is the compact representation of a GPIO:This plugin is also able to show services status:These are the Raspberry PI hardware information:More images are available here.LicenseThis software is distributed on GPLv3.0, more informationavailable in LICENSE.md.",
"tags": ["gpio","raspberry","raspberrypi","raspbian","linux","gpiostatus","pin","pins","bcm"]
},

{
"id": "/plugins/shutdownbuttonledbuzzer",
"url": "/plugins/shutdownbuttonledbuzzer/",
"date": "2022-01-08 00:00:00 -0600",
"title": "ShutdownButtonLEDBuzzer",
"description": "It implements a shutdown physical button for the Raspberry Pi, with a buzzer and a status LED.",
"author": "danieleborgo",
"content": "ShutdownButtonLEDBuzzerThis OctoPrint plugin implements a shutdown physical buttonfor the Raspberry Pi. It offers also a status LED to know whenOctoPrint is ready and a buzzer to signal the startup andthe shutdown. Remember that these signals may vary of fewseconds.By default, this plugin shuts down the Raspberry withoutchecking of there are ongoing jobs. In settings, there isa flag to disable the button when printing.NotesTo shut down the Raspberry, it uses the command configured inOctoPrint settings.This plugin supports both active and passive buzzers. By default,it assumes to have an active one.SetupInstall via the bundledPlugin Manageror manually using this URL:https://github.com/danieleborgo/OctoPrint-ShutdownButtonLEDBuzzer/archive/master.zipCircuitThe circuit hereafter exposed is just the one set by default,since the plugin allows to edit each of these pin:  Button: by default directly on pin GPIO26  LED: by default on pin GPIO6  Buzzer: by default on pin GPIO13In case one of these features is not needed, it can bedeactivated by the apposite settings section.Always remember to properly check each connection, usingthe official datasheet, before turning on the Raspberry.ConfigurationThis plugin offers several configuration parameters,accessible in the apposite OctoPrint section in setting:FAQWhat resistor does it need to use?There is no a precise resistor needed, since it depends on how muchlight is needed. Despite this, it is suggested to use a value atleast of few thousands of ohms. Always remember to check theconnections and the datasheet.Which buzzer does it need?The plugin supports both active that passive buzzer, but it isnecessary to configure them by the settings panel.Which LED does it need?A 5 mm LED is a good option, and it is usually in Arduino kits.In case a different one is attached, check that the current it needsis lower than the one a Raspberry pin can give.LicenseThis software is distributed on GPLv3.0, more informationavailable in LICENSE.md.",
"tags": ["raspberry","raspberrypi","raspbian","linux","gpio","shutdown","shutdownbutton","button","led","buzzer"]
},

{
"id": "/plugins/activeconnections",
"url": "/plugins/activeconnections/",
"date": "2022-01-22 00:00:00 -0600",
"title": "Active Connections",
"description": "Displays list of active connections in a sidebar panel.",
"author": "jneilliii",
"content": "Active ConnectionsSimple plugin that displays a list of active connections in the sidebar of OctoPrint.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["connection","network"]
},

{
"id": "/plugins/googledrivefiles",
"url": "/plugins/googledrivefiles/",
"date": "2022-01-22 00:00:00 -0600",
"title": "Google Drive Files",
"description": "Adds Google Drive file access from within OctoPrint's file manager.",
"author": "jneilliii",
"content": "Google Drive FilesThis plugin will sync a configured folder in your Google Drive locally to your OctoPrint instance.ConfigurationOnce the Prerequisites are met and you have downloaded your client_secrets.json file follow the steps here to authorize the plugin to your newly created OAuth app.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["google","cloud","sync"]
},

{
"id": "/plugins/printwatch",
"url": "/plugins/printwatch/",
"date": "2022-01-31 00:00:00 -0600",
"title": "Abort Failures - Printwatch",
"description": "PrintWatch monitors your prints for defects in real-time and optimizes your 3D printers using Artificial Intelligence",
"author": "printpal.io",
"content": "PrintWatchPrintWatch uses Artificial Intelligence to monitor your 3D prints for any defects that begin to form. The plugin takes the video feed from any camera compatible with OctoPrint and runs it through a Machine Learning model that detects print defects in real-time. The plugin takes actions set by the user once a failure is positively detected that include:  📧 Email/SMS Notification  ⏸ Pausing the print job  🔥 Turning off the Extruder Heat  ⚙ Customized actions created by the userPrintWatch saves time and material while also giving you peace of mind that your 3D print is printing properly. In addition to detecting defects, PrintWatch has an Anomaly Detection model running in the background that can detect slight changes or anomalies for printers in your fleet. Get notified early and schedule maintenance for the problematic printer, reducing downtime and costs. PrintWatch’s Web App allows you to remotely view and manage all of your printers from anywhere in the world.Current features include:  Real-time defect detection  Remote access and management  Anomalous Printer Detection  Advanced Analytics  Resume PrintUpcoming features include:  G-Code and Speed optimization with ML  MultiCamming  ROI selection and slicing  Local DeviceSetup      Open the OctoPrint Web Inferface        Open the Settings using the 🔧 (wrench) icon in the top right header        Open the Plugin Manager in the left-side selection menu        Click on the “+ Get More” button        Search for PrintWatch        Click Install on the PrintWatch Plugin        Restart OctoPrint once Installation is completed  The full installation guide/quickstart can be found here: QuickStart Guide with OctoPrintConfigurationOnce you have successfully installed PrintWatch, you should configure the settings. To configure the settings:      Open the OctoPrint Web Inferface        Open the Settings using the 🔧 (wrench) icon in the top right header        Scroll down to the Plugin Settings in the left-side selection menu and select ‘PrintWatch’  Follow the setup guide on the official GitHub or the printpal.io websiteAuthenticationIn order to use PrintWatch, you must provide your API key in the settings. Visit the printpal.io website to register your key for your printers.Privacy PolicyRead our privacy polich here: PrintWatch Privacy policy",
"tags": ["AI","Monitor","Watch","Shutoff","Defect Detection","Remote","Access","Cloud","Remote monitoring","Machine Learning","alerts","internet","email","notifications","remote","restart","Optimize","Analytics","failure","sms","automation","material","save","time"]
},

{
"id": "/plugins/timelapsepurger",
"url": "/plugins/timelapsepurger/",
"date": "2022-02-06 00:00:00 -0600",
"title": "Timelapse Purger",
"description": "Automatically deletes timelapses that are older than configured number of days.",
"author": "jneilliii",
"content": "Timelapse PurgerThis plugin will automatically delete timelapse files that are older than a configured number of days.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development. No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["timelapse","purge","clean","delete"]
},

{
"id": "/plugins/CalibrationTools",
"url": "/plugins/CalibrationTools/",
"date": "2022-02-09 00:00:00 -0600",
"title": "Calibration Tools",
"description": "Marlin Calibration Tools",
"author": "Sergiu Toporjinschi",
"content": "A set of tools to help users with calibration process.Supported tunings:  E Steps - calibrating number of steps/mm for E extruder;  XYZ Steps - calibrating number of steps/mm for axes X, Y and Z;  PID Auto-tune - calibration Proportional gain, Integral gain and Derivative values for hot-end and heated bed;Before start using this plugin I strongly recommend reading some documentation about tunning teachingtechyt.github.ioSupported frameworks  Marlin 2.xScreensSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/SergiuToporjinschi/OctoPrint-CalibrationTools/archive/main.zipConfigurationYou can set the default values for each tuning process.",
"tags": ["marlin","calibration","cube","pid","axes","printer","tools","extrusion"]
},

{
"id": "/plugins/emc2101",
"url": "/plugins/emc2101/",
"date": "2022-02-14 00:00:00 -0600",
"title": "OctoPrint-Emc2101",
"description": "Enable control status display of up to 8 4-Pin PWM fans each controlled by an Adafruit 2101",
"author": "Jeremy Laurenson",
"content": "The EMC2101 plugin allows you to control the speed of a 4 pin PWM fan attached to an Adafruit EMC2101 board connected to your Raspberry Pi. It displays all relevant data in a tab and also feeds temperature sensor data to the Plotly graph plugin.",
"tags": ["enclosure","fan","PWM","temperature","cooling"]
},

{
"id": "/plugins/octoprint_psucontrol_meross",
"url": "/plugins/octoprint_psucontrol_meross/",
"date": "2022-02-22 00:00:00 -0600",
"title": "PSU Control - Meross",
"description": "Adds Meross IOT device support to PSUControl",
"author": "Ilja Orlovs",
"content": "This plugin enables the “PSU Control” plugin to control Meross devices.Requirements:  PSU Control plugin for OctoPrint",
"tags": ["control","meross","power","psu","psucontrol","psucontrol subplugin"]
},

{
"id": "/plugins/openmiko",
"url": "/plugins/openmiko/",
"date": "2022-02-26 00:00:00 -0600",
"title": "OctoPrint-OpenMiko",
"description": "Control OpenMiko Day/Night Mode",
"author": "Tom Mount",
"content": "This is a simple plugin that allows you to set the IR LED and IR cutoff filter values for OpenMiko-enabled webcams.This plugin assumes that an OpenMiko-enabled camera has already been set up in OctoPrint as a webcam and will use the URL provided under the Webcam &amp; Timelapse configuration within OctoPrint. If a webcam is not enabled, this plugin will not show any controls.",
"tags": ["webcam","openmiko","timelapse"]
},

{
"id": "/plugins/ServoSpindle",
"url": "/plugins/ServoSpindle/",
"date": "2022-02-27 00:00:00 -0600",
"title": "Servo Spindle for GRBL CNC",
"description": "Servo Spindle enables servo based control of a CNC spindle by connecting to an ESC and trapping Grbl M3/M5/S### commands",
"author": "Shell M. Shrader",
"content": "Servo Spindle for GRBL CNCServo Spindle enables you to control a “servo” (typically an Electronic Speed Controller) triggered off of GRBLgcode commands sent to your CNC machine and the status the machine reports for spindle mode and spindle speed.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/synman/OctoPrint-Servospindle/archive/main.zipThe ideal setup for this plugin is using hardware based PWM timing on GPIO 18, 19, 12, or 13.  This is accomplished by use of the rpi-hardware-pwm library that provides a simple implementation for interacting directly with your CPU’s timing clock.  This enables precise hardware based pulse width modulation which is critical when controlling an electronic speed control.Follow the (simple) procedure documented for rpi-hardware-pwm to properly configure it here:  https://github.com/Pioreactor/rpi_hardware_pwm#installationInitial tests were reasonable with gpiozero and pigpio but I noticed a rare “jitter” that just isn’t something I can tolerate when running a CNC spindle at 15,000+ RPM.  If you do decide to go the software PWM timing route, it is fully supported, but buyers beware.  You’ll need pigpiod installed somewhere accessible to your Octoprint server.  It can be running on the same machine as Octoprint or it can be installed on a remote computer (which is pretty nifty).All dependent client gpiozero, pigpio, and rpi-hardware-pwm python libraries are installed automatically with Servo Spindle.ConfigurationThere is no Plugin Settings UI at this time but this plugin is fully configurable via Octoprint’s config.yaml file.Default Settingsplugins:  ServoSpindle:    gpio_library: rpi_hardware_pwm    pwm_channel: 0    servo_min_duty_cycle: 5    servo_max_duty_cycle: 10    servo_initial_value: -1    servo_min_pulse_width: 0.001    servo_max_pulse_width: 0.002    servo_frame_width: .02    servo_gpio_pin: 26    pigpio_host: 127.0.0.1    pigpio_port: 8888    minimum_speed: 0    maximum_speed: 10000gpio_library can be set to rpi_hardware_pwm or pigpio.The following settings apply to rpi_hardware_pwm:pwm_channel: 0servo_min_duty_cycle: 5servo_max_duty_cycle: 10* servo_min_duty_cycle is used as the servo_initial_value with this implementationThe following settings apply to pigpio:servo_initial_value: -1servo_min_pulse_width: 0.001servo_max_pulse_width: 0.002servo_frame_width: .02servo_gpio_pin: 26pigpio_host: 127.0.0.1pigpio_port: 8888The following settings are global:gpio_library: rpi_hardware_pwm or pigpiominimum_speed: 0maximum_speed: 10000minimum_speed and maximum_speed can be arbitrary but are intended to represent your GRBL spindle speed value range.  To be consistent with your GRBL controller, you should set these to the same values you have for min/max spindle speed in GRBL’s $31 and $30 settings, but this is not absolutely necessary.  Whatever S### value provided is re-scaled from the minimum/maximum speed range to the servo_min_duty_cycle and servo_max_duty_cycle range when using rpi_hardware_pwm or the servo_min_pulse_width and servo_max_pulse_width range if using pigpio.",
"tags": ["grbl","laser","engraver","cnc","brushless","esc","servo"]
},

{
"id": "/plugins/usbrelaycontrol",
"url": "/plugins/usbrelaycontrol/",
"date": "2022-03-01 00:00:00 -0600",
"title": "USB Relay Control",
"description": "Control USB relays from within OctoPrint",
"author": "A. S. Budden",
"content": "Useful if you want to add some lights or other devices to your printer but you don’t want to mess about with GPIO pins.I use it with the a custom Prusa Einsy case that has space for a raspberry pi but not much more - a USB relay can be connected to the USB port and it controls the lights around the printer.  It should work with any HID-controlled USB relay, such as this one.  There are some photos of two compatible relays on the github page for one of the projects that this code was based upon.SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/abudden/OctoPrint-USBRelayControl/archive/master.zipSee the homepage for more tips that might be helpful if you have problems installing it (you may need to install some extra development packages with apt-get if your raspberry pi doesn’t have them already).Device PrivilegesYou’ll also need to make sure that the USB relay can be controlled without root privileges.  For example, edit /etc/udev/rules.d/99-usbrelay.rules and add this line:SUBSYSTEM==\"usb\", ATTR{idVendor}==\"16c0\", ATTR{idProduct}==\"05df\", MODE=\"777\"Then restart your raspberry pi.The vendor ID and product ID (which you’ll also need in the octoprint configuration) can be found using the lsusb command.  The easiest way to do this is to run lsusb, then plug your device in, then run lsusb again.  One new line should have appeared and this will contain the ID XXXX:YYYY where XXXX is the vendor ID and YYYY is the product ID.ConfigurationJust add correct relay configuration:  select icon using icon picker (or typing manually) for better identification  type name for your device connected to the relay  Add the vendor ID and product ID for the relay (defaults to 16C0 and 05DF)  Add the relay number on the board  select whether relay active corresponds with turning your device on or off          active high means that device is on when the relay is activated      active low means that device is off when the relay is activated        select if device should be on or off by default eg. after startupNote that there’s very little in the way of error checking, so if you put incorrect values into any of the fields, it’ll probably break something.CreditsThis plugin was created as a combination of two other excellent projects:  OctoPrint GPIO Control by Damian Wójcik, which provided the framework and most of the octoprint interaction.  Very Simple USB Relay by jaketeater, which provided the code required to drive the relays.",
"tags": ["control","usb","relay"]
},

{
"id": "/plugins/cnc_gcodeviewer",
"url": "/plugins/cnc_gcodeviewer/",
"date": "2022-03-03 00:00:00 -0600",
"title": "CNC GCode Viewer",
"description": "GCode Viewer for CNC toolpaths with no extrusions",
"author": "Jamie Kawabata",
"content": "This viewer adds support for CNC toolpaths, which have no extrusions.This plugin is based (very) heavily on the native OctoPrint GCode Viewer, which does not show jobs that have no extrusions.This plugin has been tested primarily with Marlin-flavored gcode.Screen ShotSetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/vector76/cnc_gcodeviewer/archive/main.zipNote: this plugin replaces the native Octoprint GCode Viewer within the UI.  Disable this plugin to restore the default behavior.",
"tags": ["marlin","cnc"]
},

{
"id": "/plugins/wyze",
"url": "/plugins/wyze/",
"date": "2022-03-16 00:00:00 -0500",
"title": "OctoPrint-Wyze",
"description": "Control Wyze devices through OctoPrint",
"author": "Eric Shapiro",
"content": "OctoPrint-Wyze lets you control and automate Wyze home devices through OctoPrint. You can register plugs, lights and cameras to turn on or off whenever specific events occur. For example, you can set a light to turn on whenever the web client is opened, or a print or timelapse is started, then off when a print has finished.NOTE: Only Python 3.8 and up will work! This is not ideal since OctoPi 0.18 includes Python 3.7.3 by default, so you will need to be comfortable updating OctoPrint’s Python environment. This is a hard requirement because the wyze_sdk module that this plugin relies on will only work with Python 3.8 and up. OctoPi version 1.0.0 will include Python 3.9.",
"tags": ["wyze","control","events","scheduling","lights"]
},

{
"id": "/plugins/pwmbuzzer",
"url": "/plugins/pwmbuzzer/",
"date": "2022-03-29 00:00:00 -0500",
"title": "OctoPrint-PWMBuzzer",
"description": "Uses PWM via GPIO to sound tones whenever an M300 command is encountered",
"author": "Matt Bielich",
"content": "OctoPrint-PWMBuzzerIf your 3D printer doesn’t have a speaker or natively support M300 commands for making beeps, this plugin is for you!Inspired by @jneilliii’s M300Player plugin: you can use a simple (and cheap) passive buzzer, attach it to your Raspberry Pi’s GPIO pins, and route M300 commands through it using Pulse-Width Modulation (PWM).SetupHardware SetupTo get started, simply connect your passive buzzer to a ground pin and the (+) side to a triggering GPIO pin, like GPIO16 (BCM).  You can find more details online in various tutorials (example).Plugin SetupInstall via the bundled Plugin Manageror manually using this URL:https://github.com/stealthmonkey99/OctoPrint-PWMBuzzer/archive/main.zipConfigurationOnce you have connected your passive buzzer to your Raspberry Pi and installed the plugin, launch the plugin settings dialog in your OctoPrint client to configure it.From here you can enable the passive buzzer and indicate which GPIO pin the (+) side is connected to.  You may want to play around with the Duty Cycle setting to see what works best for your buzzer.  These buzzers won’t sound great but they’ll get the job done!Optionally, you might also choose to enable a software buzzer that simulates M300 commands in your web browser while you’re actively connected to OctoPrint.  This has not been tested in all browsers yet, but you’re welcome to try it out.Once you have chosen your buzzer configuration settings you can test them out (hardware and/or software) using the “Play Default Tone” button.  You can also set a default frequency and duration to be played any time an M300 command is encountered without parameters.Don’t forget to save your settings before you continue!EventsHere’s where the magic happens… not only can your printer now handle M300 commands, but you can set up your OctoPrint instance to play music when certain events occur!Next to each event you’ll see a drop-down for selecting a preset or any .gcode files found in your local storage (not SD card) that contain M300 commands.  Select whatever tune you’d like, then click “Try it” to play it.  Keep in mind that you’ll need to have saved your settings on the Configurations settings panel before trying to play these M300 commands.  NOTE: if you upload or save new .gcode files, you’ll need to restart OctoPrint before they’ll show up in the Events settings panel.ComposerFeeling creative?  Use the Composer settings panel to generate your own tunes for playback!Just press-and-hold any of the piano keys to hear them.  When you release the key, it will save your “note” as generated Gcode.  There are also some tools below the generated Gcode that you might find helpful:  Hit a wrong note?  Use the “Undo” button to quickly remove the last note you pressed.  Need a rest between notes?  “Insert Pause” will drop one at the end of your composition.  Use “Reverse” to play your composition backwards… you can always hit “Reverse” again to put it back.  Make your tune more rigid and robotic using the “Snap Durations” button.  This will try to normalize the durations of your notes.  “Clear” simply empties out your composition so you can start on another one.  “Send Gcode to Printer” is an easy way to play back your composition.  Once you have finalized your masterpiece you can use the drop-down options to:          “Save Gcode File” in your local storage (SD card storage not supported) under the “M300 Compositions” folder      “Download Gcode” so you have a copy on your computer      “Copy Gcode to Clipboard” if you want to paste it into an email, etc.      Support &amp; ContributingThis is my first OctoPrint plugin and it’s still a bit experimental.  Please feel free to open issues if you encounter any bugs.  I’m also happy to take contributions if you’d like to open a pull request to make any changes.I hope you find this useful and fun!  If you like my plugin or want to support my random coding projects you can alwaysEnjoy!",
"tags": ["gpio","pwm","buzzer","beep","m300","music","gcode"]
},

{
"id": "/plugins/framer",
"url": "/plugins/framer/",
"date": "2022-04-05 00:00:00 -0500",
"title": "OctoPrint-Framer",
"description": "Adds frame buttons to the items in the file list which let you verify the area used for the laser/CNC job.",
"author": "Ricardo Riet Correa",
"content": "DescriptionThis plugin adds a button to verify the working area of a Gcode on a CNC or Laser cutter.It works by extracting the maximum and minimum X and Y and sending a G0 code to move the CNC/Laser to the corner locations.SetupInstall via the bundled Plugin Manager or manually using this URL:https://github.com/rriet/OctoPrint-Framer/archive/master.zipUsageConfigurationAfter installation restart OctoPrint, go to the Settings tab and set the CNC/Laser movement speed.Frame function  Connect to the CNC/Laser  Upload and load the Gcode file  Home the CNC/Laser or use a G92 code to set the origin point  Click the Frame button  Observe the movement of the CNC/Laser to see where the work area is on the plataform. Be ready to stop the machine to avoid colisions.Warmings:  The plugin will not move the Z axis  Make sure the area is clear to avoid colisions.Disclaimer:I, the plugin author cannot be held responsible for any damage to equipment or injuries that may arise from using the plugin. I, the plugin author, make no guarantees that this plugin will work or continue to work.",
"tags": ["Octoprint","Laser","CNC"]
},

{
"id": "/plugins/psucontrol_tapo",
"url": "/plugins/psucontrol_tapo/",
"date": "2022-04-14 00:00:00 -0500",
"title": "PSU Control - Tapo",
"description": "Adds Tapo Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "Dennis Schwerdel",
"content": "See https://github.com/dswd/OctoPrint-PSUControl-Tapo for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","tapo"]
},

{
"id": "/plugins/detector2",
"url": "/plugins/detector2/",
"date": "2022-04-15 00:00:00 -0500",
"title": "OctoPrint-Detector2",
"description": "Detects errors directly in your browser and sends email with detected error",
"author": "Mikulas Heinz",
"content": "Octoprint-Detector2 is a detection plugin that runs in locally your browser and emails you if it detects some spaghetti, stringing or blobs on your print. All you need is an email account and a PC.It is completely free without any monthly subscriptions or one time fees unlike some similar plugins. If it detects an error it sounds the alarm and sends you an email with the latest image snapshot of the print.Used services:Tensorflow.js for prediction, https://www.smtpjs.com/ to send mail via javascript and Outlook to serve as an SMTP server.setupInstall via the Plugin Manager or manually using this URL:https://github.com/mikulash/Octoprint-detector2/archive/master.zipConfiguration  To enable email sending it needs to use an SMTP connection. Free and easy to set up is via Outlook. For now, this plugin uses exclusively Outlook so at this moment there is no need for extra set-up. Just creating an email will do it.  In the settings of this plugin enter the username and password for created Outlook account.  This plugin uses snapshots sent by the Timelapse plugin, which is preinstalled with Octoprint. Go to the Timelapse tab and choose snapshot interval. The minimal recommended interval is 10 seconds to let the plugin have enough time to detect errors from an image.After finishing printing, the timelapse is created, and its deletion is not implemented. I suggest for now deleting these timelapse manually or using another plugin to delete them automatically.  Once you start printing you should see the last sent image and result that this detector gets as well with confidence of the result. But if you would  If the confidence of the error is greater than 75 %, it starts the alarm and emails you the detected error. Email is sent exactly once to prevent spamming. You can change the confidence threshold in settings.  That’s it. You just need to leave the octoprint tab running in the browser and let it work.Q&amp;AEmail sending stopped working.To prevent spamming, Outlook has a daily limit for services like this. Open the Outlook account and you should have received a prompt to verify this account. After verification, you should be able to start receiving emails again.Supporting the developmentIt would be greatly appreciated if you would send me your time lapses. Especially the ones with errors not detected. It would help me to improve the model and add new types of errors to detect.It is super easy. Just upload the generated time-lapse to Swiss transfer and send me the generated link to octoprint.detector2@gmail.com. Thanks in advance!problems or feedback?If you are having any trouble or have an idea to implement, let me know! This plugin is part of my bachelor thesis so any feedback would be much appreciated. Reach me at the discussion in this plugin GitHub repository or send me your thoughts about this plugin to octoprint.detector2@gmail.com.",
"tags": ["ai","alerts","automation","defect detection","email","failure","monitoring","notifications","local"]
},

{
"id": "/plugins/psucontrol_opigpio",
"url": "/plugins/psucontrol_opigpio/",
"date": "2022-04-27 00:00:00 -0500",
"title": "PSUControl - OPi.GPIO",
"description": "Adds OPi.GPIO to OctoPrint-PSUControl as a sub-plugin for OrangePi Zero and other SBCs supported by OPi.GPIO.",
"author": "Blue-Beaker",
"content": "This is a fork of Shawn Bruce’s PSU Control - RPi.GPIO that uses OPi.GPIO instead of RPi.GPIO.SUNXI naming is supported additionally, so you can use pin numbers on the board like “PA12” directly in this plugin.See https://github.com/Blue-Beaker/OctoPrint-PSUControl-OPi.GPIO for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","gpio","orangepi"]
},

{
"id": "/plugins/psucontrol_fritz",
"url": "/plugins/psucontrol_fritz/",
"date": "2022-04-28 00:00:00 -0500",
"title": "PSU Control - FRITZ!Box",
"description": "Adds FRITZ!Dect Smart Plug support to OctoPrint-PSUControl as a sub-plugin",
"author": "not-na",
"content": "This sub-plugin adds support for switching FRITZ!Dect Smart Plugs directly from the Octoprint Web Interface.To use this plugin, you’ll also have to install the PSU Control plugin. Without that plugin, this plugin will not function.For security reasons, it is recommended to create a dedicated user account on your FRITZ!Box with only Smart Home privileges.The AIN in the settings should be taken from the FRITZ!Box Smart Home settings, it should be five digits followed by seven digits.Of course, the FRITZ!Dect smart home device should be paired with the FRITZ!Box before configuring this plugin. Please refer tothe instructions provided with the device for further details.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","fritz","fritz dect"]
},

{
"id": "/plugins/bedready",
"url": "/plugins/bedready/",
"date": "2022-04-29 00:00:00 -0500",
"title": "OctoPrint-BedReady",
"description": "Plugin that uses the camera and opencv to determine if the bed matches a reference image indicating that the bed is clear and ready to start a print.",
"author": "jneilliii",
"content": "Bed ReadyPlugin that uses the camera and opencv to determine if the bed matches a reference image indicating that the bed is clear and ready to start a print.For the plugin to work properly add @BEDREADY at the beginning of your slicer’s start gcode. For best results add gcode to your slicer’s end gcode to position the head out of the way for the next comparison.NOTE: Lighting, camera view angle changes, and filament color that is similar to the bed can impact accuracy; adjust the Match Percentage setting below to compensate.ConfigurationUse the Test Snapshot button to compare the currently stored Reference Image with the bed.Get HelpIf you experience issues with this plugin or need assistance please use the issue tracker at the plugin’s Homepage linked on the right.Additional PluginsCheck out my other plugins hereSupport My EffortsI, jneilliii, programmed this plugin for fun and do my best effort to support those that have issues with it, please return the favor and leave me a tip or become a Patron if you find this plugin helpful and want me to continue future development.  No paypal.me? Send funds via PayPal to jneilliii@gmail.com",
"tags": ["bed","clear","opencv","collision avoidance","object detection","clear","safety","automation"]
},

{
"id": "/plugins/extrafileinfo",
"url": "/plugins/extrafileinfo/",
"date": "2022-05-05 00:00:00 -0500",
"title": "ExtraFileInfo",
"description": "Adds a file's slicer settings to its additional data column.",
"author": "Larsjuhw",
"content": "ExtraFileInfoThis plugin adds slicer settings to the additional data tab of each file, which is shown by pressing the downwards arrow button. Uses Octoprint-SlicerSettingsParser-Python3 (which should install automatically) to get the slicer data from the gcode.The plugin’s settings allows you to configure which slicer settings to show and what their units should be.ConfigurationSlicerSettingsParserSlicerSettingsParser searches through your gcode files to find commented lines that contain the slicer settings. Some slicers automatically add these lines to your gcode files, but not all do it by default. The parser finds the “key = value” sets of these settings by matching each line with a regex. The default regex supports Slic3r and Simplify3D (and the Cura configuration below).After installing, you need to configure SlicerSettingsParser to parse your gcode files and find the commented settings in them. Press the “Analyze all files” button to scan your old files. Note that my Raspberry Pi 4B 2GB can only handle around 4 MB/s, so this can take a while depending on your files and setup.If you use Cura, you need to add this to your start or end gcode. More gcode variables that Cura supports can be found on this page. If you want to add these manually, make sure that you keep using the ; key = {variable} style.ExtraFileInfo            Setting      Description                  Key      The “key” of your slicer setting in SlicerSettingsParser              Label (optional)      A label that replaces the key in the file info view              Unit (optional)      The unit suffix that is appended after the value of the setting      The Key, Label and Unit fields in the plugin’s settings are directly injected into the view, without any sanitization. Therefore, the use of HTML tags (such as label=&lt;strong&gt;Material&lt;/strong&gt;) is allowed.ExampleThe gcode file that I upload contains the following lines:; layer_height = 0.2; adaptive_layer_height_enabled = False; adhesion_type = skirtThe default settings of SlicerSettingsParser support this format. To display these values in the file info, I configure this plugin as such, while leaving the other settings empty:This gives the following result in the files menu:Known Issues  SlicerSettingsParser does not parse newly uploaded files when Cura Thumbnails/UltimakerFormatPackage is installed, as described here. Use Slicer Thumbnails instead to solve this.",
"tags": ["slicer settings","slicersettingsparser","info"]
},

{
"id": "/plugins/preheathelper",
"url": "/plugins/preheathelper/",
"date": "2022-05-07 00:00:00 -0500",
"title": "OctoPrint-PreheatHelper",
"description": "A little helper to automate your printer pre-heating!",
"author": "RoboMagus",
"content": "A little helper to automate your printer pre-heating!You can have it automatically pre-heat your printer as soon as it connects to Octoprint.Or when you (pre-)load a file this plugin can scan for the temperature setpoints in the GCode and use those to pre-heat the printer before you hit play.",
"tags": ["preheat","helper","parser"]
},

{
"id": "/plugins/psucontrol_jeedom",
"url": "/plugins/psucontrol_jeedom/",
"date": "2022-05-24 00:00:00 -0500",
"title": "PSU Control - Jeedom",
"description": "Adds Jeedom support to OctoPrint-PSUControl as a sub-plugin",
"author": "Tex",
"content": "See https://github.com/TexGG/OctoPrint-PSUControl-Jeedom for information on configuration.",
"tags": ["power","psu","control","psucontrol","psucontrol subplugin","jeedom"]
},

{
"id": "/plugins/queue",
"url": "/plugins/queue/",
"date": "2022-06-06 00:00:00 -0500",
"title": "OctoPrint-Queue",
"description": "A simple queue setup designed for use by staff at a public library.",
"author": "Chris Hennes, Pioneer Library System",
"content": "A simple print queueDesigned for use at a public library, this plugin allows staff to efficiently manage customer print jobs. Its simple interface and setup are easy to learn, and your organization can either implement its ownprioritization scheme or use the one provided with the plugin. It is primarily intended as a staff communicationmechanism, allowing staff to see which job they should start up next, as well as look up completed jobsto provide information to customers.Purely localThis plugin does not use any outside services and has no requirements beyond having an OctoPrint installation.It does not enforce any restrictions on the input fields, giving staff complete flexibility in how the toolgets used.Copyright 2019 Pioneer Library System. Some rights reserved, see the GNU Affero General Public License for details.",
"tags": ["ui","queue"]
},

{
"id": "/plugins/CreatbotUtil",
"url": "/plugins/CreatbotUtil/",
"date": "2022-06-14 00:00:00 -0500",
"title": "Creatbot Util",
"description": "Various utility functions to make OctoPrint work better with Creatbot printers.",
"author": "Kestin Goforth",
"content": "Creatbot UtilThis plugin add various utility functions to make OctoPrint work better with Creatbot printers.Features      Send “Start/Stop Serial Print” commands whenever a print is started, cancelled, or finished (M6006 &amp; M6007).        Replace the Marlin ‘Set Chamber Temperature’ command (M141) with the Creatbot command (M6013).  ScreenshotNotesThis plugin should work for most/all Creatbot 3D Printers but has only been tested with a Creatbot F430.Your Creatbot firmware may need to be upgraded to at least v5.6, the original v5.5 firmware that shipped with my Creatbot F430 did not support the Heated Chamber (M6013) command.",
"tags": ["creabot","printer","control","command","serial","start","stop","temperature","heated","chamber","build","volume"]
}
]
}
